Terminals unused in grammar

   TOKEN_OPERATOR
   TOKEN_OR
   TOKEN_UNDERSCORE
   TOKEN_SPECIFIER
   TOKEN_LIBRARY
   TOKEN_BRACKET
   TOKEN_CONTINUE
   TOKEN_LESS_EQUAL
   TOKEN_GREATER
   TOKEN_GREATER_EQUAL
   TOKEN_EQUAL
   TOKEN_LESS
   TOKEN_NOTEQUAL
   TOKEN_GOTO
   TOKEN_WHILE
   TOKEN_BOOLEAN
   TOKEN_TYPE_OWN
   TOKEN_TYPE_ARRAY
   TOKEN_TYPE_SWITCH
   TOKEN_TYPE_PROCEDURE
   TOKEN_TYPE_STRING
   TOKEN_TYPE_VALUE
   TOKEN_LTRSTRING
   TOKEN_ASSIGN_IDENTIFIER
   TOKEN_LABEL_IDENTIFIER
   TOKEN_BOOL_IDENTIFIER
   TOKEN_NOT_EQUAL


Grammar

    0 $accept: program $end

    1 $@1: /* empty */

    2 blockHead: TOKEN_BEGIN $@1 declaration
    3          | blockHead TOKEN_SEMICOLON declaration

    4 unlabelledBlock: blockHead TOKEN_SEMICOLON compoundTail

    5 block: unlabelledBlock
    6      | tlabel block

    7 tlabel: label TOKEN_COLON

    8 label: identifier
    9      | integer

   10 program: compoundStatement
   11        | block

   12 $@2: /* empty */

   13 unlabelledCompound: TOKEN_BEGIN $@2 compoundTail

   14 compoundStatement: unlabelledCompound
   15                  | tlabel compoundStatement

   16 compoundTail: statement TOKEN_END
   17             | statement TOKEN_SEMICOLON compoundTail

   18 declaration: typeDeclaration
   19            | arrayDeclaration
   20            | switchDeclaration
   21            | procedureDeclaration

   22 lowerBound: arithmeticExpression

   23 switchList: designationalExpression
   24           | switchList TOKEN_COMMA designationalExpression

   25 switchDeclaration: TOKEN_SWITCH switchIdentifier TOKEN_ASSIGN switchList

   26 upperBound: arithmeticExpression

   27 boundPair: lowerBound TOKEN_COLON upperBound

   28 boundPairList: boundPair
   29              | boundPairList TOKEN_COMMA boundPair

   30 arrayIdentifier: identifier

   31 arraySegment: arrayIdentifier TOKEN_OPEN_SQUARE_BRACKET boundPairList TOKEN_CLOSE_SQUARE_BRACKET
   32             | arrayIdentifier TOKEN_COMMA arraySegment

   33 arrayList: arraySegment
   34          | arrayList TOKEN_COMMA arraySegment

   35 arrayDeclaration: TOKEN_ARRAY arrayList
   36                 | type TOKEN_ARRAY arrayList

   37 expression: arithmeticExpression
   38           | booleanExpression
   39           | designationalExpression

   40 switchIdentifier: identifier

   41 switchDesignator: switchIdentifier TOKEN_OPEN_CURLY_BRACKET subscriptExpression TOKEN_CLOSE_CURLY_BRACKET

   42 simpleDesignationalExpression: tlabel
   43                              | switchDesignator
   44                              | TOKEN_OPEN_BRACKET designationalExpression TOKEN_CLOSE_BRACKET

   45 designationalExpression: simpleDesignationalExpression
   46                        | ifClause simpleDesignationalExpression TOKEN_ELSE designationalExpression

   47 arithmeticExpression: simpleArithmeticExpression
   48                     | ifClause simpleArithmeticExpression TOKEN_ELSE arithmeticExpression

   49 simpleArithmeticExpression: term
   50                           | TOKEN_PLUS term
   51                           | TOKEN_MINUS term
   52                           | simpleArithmeticExpression TOKEN_PLUS term
   53                           | simpleArithmeticExpression TOKEN_MINUS term

   54 term: factor
   55     | term TOKEN_MULTIPLY factor
   56     | term TOKEN_DIVIDE factor

   57 factor: primary
   58       | factor TOKEN_POWER primary

   59 primary: unsignedNumber
   60        | functionDesignator
   61        | variable
   62        | TOKEN_OPEN_BRACKET arithmeticExpression TOKEN_CLOSE_BRACKET

   63 unsignedNumber: realNumber
   64               | integer

   65 realNumber: TOKEN_REAL_NUM

   66 integer: TOKEN_INTEGER

   67 simpleVariable: varIdentifier

   68 variable: simpleVariable
   69         | subscriptedVariable

   70 subscriptedVariable: arrayIdentifier TOKEN_OPEN_SQUARE_BRACKET subscriptList TOKEN_CLOSE_SQUARE_BRACKET

   71 subscriptList: subscriptExpression
   72              | subscriptList TOKEN_COMMA subscriptExpression

   73 subscriptExpression: arithmeticExpression

   74 identifier: TOKEN_IDENTIFIER

   75 booleanExpression: simpleBoolean

   76 simpleBoolean: implication
   77              | simpleBoolean TOKEN_EQUIV implication

   78 implication: booleanTerm
   79            | implication TOKEN_IMPLY booleanTerm

   80 booleanTerm: booleanFactor
   81            | booleanTerm TOKEN_OR_OP booleanFactor

   82 booleanFactor: booleanSecondary
   83              | booleanFactor TOKEN_AND_OP booleanSecondary

   84 booleanSecondary: booleanPrimary
   85                 | TOKEN_NOT_OP booleanPrimary

   86 booleanPrimary: logicalValue
   87               | relation
   88               | TOKEN_OPEN_BRACKET booleanExpression TOKEN_CLOSE_BRACKET

   89 logicalValue: TOKEN_LOGICAL_VALUE

   90 relation: simpleArithmeticExpression relationalOperator simpleArithmeticExpression

   91 relationalOperator: TOKEN_REL_OP

   92 listType: varIdentifier

   93 @3: /* empty */

   94 listType: listType TOKEN_COMMA @3 varIdentifier

   95 type: TOKEN_TYPE_REAL
   96     | TOKEN_TYPE_INTEGER
   97     | TOKEN_TYPE_BOOLEAN

   98 typeDeclaration: type listType

   99 varIdentifier: identifier

  100 unconditionalStatement: basicStatement
  101                       | compoundStatement
  102                       | block

  103 conditionalStatement: ifStatement
  104                     | ifStatement TOKEN_ELSE statement
  105                     | ifClause forStatement
  106                     | tlabel conditionalStatement

  107 ifStatement: ifClause unconditionalStatement

  108 ifClause: TOKEN_IF booleanExpression TOKEN_THEN

  109 basicStatement: unlabelledBasicStatement
  110               | tlabel basicStatement

  111 unlabelledBasicStatement: assignmentStatement
  112                         | dummyStatement
  113                         | procedureStatement
  114                         | returnStatement

  115 dummyStatement: empty

  116 returnStatement: TOKEN_RETURN expression

  117 assignmentStatement: variable TOKEN_ASSIGN arithmeticExpression
  118                    | variable TOKEN_ASSIGN booleanExpression

  119 forStatement: TOKEN_FOR variable TOKEN_ASSIGN arithmeticExpression TOKEN_STEP arithmeticExpression TOKEN_UNTIL arithmeticExpression TOKEN_DO statement

  120 empty: /* empty */

  121 procedureStatement: procedureIdentifier actualParameterPart

  122 procedureIdentifier: identifier

  123 actualParameterPart: TOKEN_OPEN_BRACKET TOKEN_CLOSE_BRACKET
  124                    | TOKEN_OPEN_BRACKET actualParameterList TOKEN_CLOSE_BRACKET

  125 actualParameterList: actualParameter
  126                    | actualParameterList parameterDelimiter actualParameter

  127 actualParameter: expression

  128 parameterDelimiter: TOKEN_COMMA
  129                   | TOKEN_CLOSE_BRACKET identifier TOKEN_COLON TOKEN_OPEN_BRACKET

  130 functionDesignator: procedureIdentifier actualParameterPart

  131 statement: unconditionalStatement
  132          | conditionalStatement
  133          | forStatement
  134          | TOKEN_PRINT expression

  135 formalParameter: identifier

  136 formalParameterList: formalParameter

  137 $@4: /* empty */

  138 formalParameterList: formalParameterList parameterDelimiter $@4 formalParameter

  139 formalParameterPart: empty

  140 $@5: /* empty */

  141 formalParameterPart: TOKEN_OPEN_BRACKET $@5 formalParameterList TOKEN_CLOSE_BRACKET

  142 identifierList: identifier
  143               | identifierList TOKEN_COMMA identifier

  144 valuePart: TOKEN_VALUE identifierList TOKEN_SEMICOLON
  145          | empty

  146 specifier: type
  147          | type TOKEN_ARRAY
  148          | TOKEN_TYPE_LABEL
  149          | TOKEN_SWITCH
  150          | type TOKEN_PROCEDURE

  151 specificationPart: empty
  152                  | specificationIdentifierList

  153 specificationIdentifierList: specifier identifierList TOKEN_SEMICOLON
  154                            | specificationIdentifierList specifier identifierList TOKEN_SEMICOLON

  155 @6: /* empty */

  156 $@7: /* empty */

  157 procedureHeading: procedureIdentifier @6 formalParameterPart TOKEN_SEMICOLON $@7 valuePart specificationPart

  158 procedureBody: statement

  159 procedureDeclaration: TOKEN_PROCEDURE procedureHeading procedureBody
  160                     | type TOKEN_PROCEDURE procedureHeading procedureBody


Terminals, with rules where they appear

$end (0) 0
error (256)
TOKEN_PRINT (258) 134
TOKEN_IDENTIFIER (259) 74
TOKEN_BEGIN (260) 2 13
TOKEN_END (261) 16
TOKEN_LOGICAL_VALUE (262) 89
TOKEN_OPERATOR (263)
TOKEN_OR (264)
TOKEN_PROCEDURE (265) 150 159 160
TOKEN_PLUS (266) 50 52
TOKEN_MINUS (267) 51 53
TOKEN_DIVIDE (268) 56
TOKEN_POWER (269) 58
TOKEN_MULTIPLY (270) 55
TOKEN_COMMA (271) 24 29 32 34 72 94 128 143
TOKEN_UNDERSCORE (272)
TOKEN_SPECIFIER (273)
TOKEN_LIBRARY (274)
TOKEN_BRACKET (275)
TOKEN_OPEN_BRACKET (276) 44 62 88 123 124 129 141
TOKEN_CLOSE_BRACKET (277) 44 62 88 123 124 129 141
TOKEN_OPEN_SQUARE_BRACKET (278) 31 70
TOKEN_CLOSE_SQUARE_BRACKET (279) 31 70
TOKEN_OPEN_CURLY_BRACKET (280) 41
TOKEN_CLOSE_CURLY_BRACKET (281) 41
TOKEN_CONTINUE (282)
TOKEN_REAL_NUM (283) 65
TOKEN_INTEGER (284) 66
TOKEN_COLON (285) 7 27 129
TOKEN_REL_OP (286) 91
TOKEN_LESS_EQUAL (287)
TOKEN_GREATER (288)
TOKEN_GREATER_EQUAL (289)
TOKEN_EQUAL (290)
TOKEN_LESS (291)
TOKEN_NOTEQUAL (292)
TOKEN_EQUIV (293) 77
TOKEN_AND_OP (294) 83
TOKEN_OR_OP (295) 81
TOKEN_NOT_OP (296) 85
TOKEN_GOTO (297)
TOKEN_FOR (298) 119
TOKEN_DO (299) 119
TOKEN_WHILE (300)
TOKEN_STEP (301) 119
TOKEN_UNTIL (302) 119
TOKEN_IF (303) 108
TOKEN_THEN (304) 108
TOKEN_ELSE (305) 46 48 104
TOKEN_SWITCH (306) 25 149
TOKEN_VALUE (307) 144
TOKEN_BOOLEAN (308)
TOKEN_TYPE_OWN (309)
TOKEN_TYPE_INTEGER (310) 96
TOKEN_TYPE_REAL (311) 95
TOKEN_TYPE_BOOLEAN (312) 97
TOKEN_TYPE_ARRAY (313)
TOKEN_TYPE_SWITCH (314)
TOKEN_TYPE_PROCEDURE (315)
TOKEN_TYPE_STRING (316)
TOKEN_TYPE_LABEL (317) 148
TOKEN_TYPE_VALUE (318)
TOKEN_ARRAY (319) 35 36 147
TOKEN_IMPLY (320) 79
TOKEN_SEMICOLON (321) 3 4 17 144 153 154 157
TOKEN_LTRSTRING (322)
TOKEN_RETURN (323) 116
TOKEN_ASSIGN_IDENTIFIER (324)
TOKEN_LABEL_IDENTIFIER (325)
TOKEN_BOOL_IDENTIFIER (326)
TOKEN_ASSIGN (327) 25 117 118 119
TOKEN_NOT_EQUAL (328)


Nonterminals, with rules where they appear

$accept (74)
    on left: 0
blockHead (75)
    on left: 2 3, on right: 3 4
$@1 (76)
    on left: 1, on right: 2
unlabelledBlock (77)
    on left: 4, on right: 5
block (78)
    on left: 5 6, on right: 6 11 102
tlabel (79)
    on left: 7, on right: 6 15 42 106 110
label (80)
    on left: 8 9, on right: 7
program (81)
    on left: 10 11, on right: 0
unlabelledCompound (82)
    on left: 13, on right: 14
$@2 (83)
    on left: 12, on right: 13
compoundStatement (84)
    on left: 14 15, on right: 10 15 101
compoundTail (85)
    on left: 16 17, on right: 4 13 17
declaration (86)
    on left: 18 19 20 21, on right: 2 3
lowerBound (87)
    on left: 22, on right: 27
switchList (88)
    on left: 23 24, on right: 24 25
switchDeclaration (89)
    on left: 25, on right: 20
upperBound (90)
    on left: 26, on right: 27
boundPair (91)
    on left: 27, on right: 28 29
boundPairList (92)
    on left: 28 29, on right: 29 31
arrayIdentifier (93)
    on left: 30, on right: 31 32 70
arraySegment (94)
    on left: 31 32, on right: 32 33 34
arrayList (95)
    on left: 33 34, on right: 34 35 36
arrayDeclaration (96)
    on left: 35 36, on right: 19
expression (97)
    on left: 37 38 39, on right: 116 127 134
switchIdentifier (98)
    on left: 40, on right: 25 41
switchDesignator (99)
    on left: 41, on right: 43
simpleDesignationalExpression (100)
    on left: 42 43 44, on right: 45 46
designationalExpression (101)
    on left: 45 46, on right: 23 24 39 44 46
arithmeticExpression (102)
    on left: 47 48, on right: 22 26 37 48 62 73 117 119
simpleArithmeticExpression (103)
    on left: 49 50 51 52 53, on right: 47 48 52 53 90
term (104)
    on left: 54 55 56, on right: 49 50 51 52 53 55 56
factor (105)
    on left: 57 58, on right: 54 55 56 58
primary (106)
    on left: 59 60 61 62, on right: 57 58
unsignedNumber (107)
    on left: 63 64, on right: 59
realNumber (108)
    on left: 65, on right: 63
integer (109)
    on left: 66, on right: 9 64
simpleVariable (110)
    on left: 67, on right: 68
variable (111)
    on left: 68 69, on right: 61 117 118 119
subscriptedVariable (112)
    on left: 70, on right: 69
subscriptList (113)
    on left: 71 72, on right: 70 72
subscriptExpression (114)
    on left: 73, on right: 41 71 72
identifier (115)
    on left: 74, on right: 8 30 40 99 122 129 135 142 143
booleanExpression (116)
    on left: 75, on right: 38 88 108 118
simpleBoolean (117)
    on left: 76 77, on right: 75 77
implication (118)
    on left: 78 79, on right: 76 77 79
booleanTerm (119)
    on left: 80 81, on right: 78 79 81
booleanFactor (120)
    on left: 82 83, on right: 80 81 83
booleanSecondary (121)
    on left: 84 85, on right: 82 83
booleanPrimary (122)
    on left: 86 87 88, on right: 84 85
logicalValue (123)
    on left: 89, on right: 86
relation (124)
    on left: 90, on right: 87
relationalOperator (125)
    on left: 91, on right: 90
listType (126)
    on left: 92 94, on right: 94 98
@3 (127)
    on left: 93, on right: 94
type (128)
    on left: 95 96 97, on right: 36 98 146 147 150 160
typeDeclaration (129)
    on left: 98, on right: 18
varIdentifier (130)
    on left: 99, on right: 67 92 94
unconditionalStatement (131)
    on left: 100 101 102, on right: 107 131
conditionalStatement (132)
    on left: 103 104 105 106, on right: 106 132
ifStatement (133)
    on left: 107, on right: 103 104
ifClause (134)
    on left: 108, on right: 46 48 105 107
basicStatement (135)
    on left: 109 110, on right: 100 110
unlabelledBasicStatement (136)
    on left: 111 112 113 114, on right: 109
dummyStatement (137)
    on left: 115, on right: 112
returnStatement (138)
    on left: 116, on right: 114
assignmentStatement (139)
    on left: 117 118, on right: 111
forStatement (140)
    on left: 119, on right: 105 133
empty (141)
    on left: 120, on right: 115 139 145 151
procedureStatement (142)
    on left: 121, on right: 113
procedureIdentifier (143)
    on left: 122, on right: 121 130 157
actualParameterPart (144)
    on left: 123 124, on right: 121 130
actualParameterList (145)
    on left: 125 126, on right: 124 126
actualParameter (146)
    on left: 127, on right: 125 126
parameterDelimiter (147)
    on left: 128 129, on right: 126 138
functionDesignator (148)
    on left: 130, on right: 60
statement (149)
    on left: 131 132 133 134, on right: 16 17 104 119 158
formalParameter (150)
    on left: 135, on right: 136 138
formalParameterList (151)
    on left: 136 138, on right: 138 141
$@4 (152)
    on left: 137, on right: 138
formalParameterPart (153)
    on left: 139 141, on right: 157
$@5 (154)
    on left: 140, on right: 141
identifierList (155)
    on left: 142 143, on right: 143 144 153 154
valuePart (156)
    on left: 144 145, on right: 157
specifier (157)
    on left: 146 147 148 149 150, on right: 153 154
specificationPart (158)
    on left: 151 152, on right: 157
specificationIdentifierList (159)
    on left: 153 154, on right: 152 154
procedureHeading (160)
    on left: 157, on right: 159 160
@6 (161)
    on left: 155, on right: 157
$@7 (162)
    on left: 156, on right: 157
procedureBody (163)
    on left: 158, on right: 159 160
procedureDeclaration (164)
    on left: 159 160, on right: 21


state 0

    0 $accept: . program $end

    TOKEN_IDENTIFIER  shift, and go to state 1
    TOKEN_BEGIN       shift, and go to state 2
    TOKEN_INTEGER     shift, and go to state 3

    blockHead           go to state 4
    unlabelledBlock     go to state 5
    block               go to state 6
    tlabel              go to state 7
    label               go to state 8
    program             go to state 9
    unlabelledCompound  go to state 10
    compoundStatement   go to state 11
    integer             go to state 12
    identifier          go to state 13


state 1

   74 identifier: TOKEN_IDENTIFIER .

    $default  reduce using rule 74 (identifier)


state 2

    2 blockHead: TOKEN_BEGIN . $@1 declaration
   13 unlabelledCompound: TOKEN_BEGIN . $@2 compoundTail

    TOKEN_PROCEDURE     reduce using rule 1 ($@1)
    TOKEN_SWITCH        reduce using rule 1 ($@1)
    TOKEN_TYPE_INTEGER  reduce using rule 1 ($@1)
    TOKEN_TYPE_REAL     reduce using rule 1 ($@1)
    TOKEN_TYPE_BOOLEAN  reduce using rule 1 ($@1)
    TOKEN_ARRAY         reduce using rule 1 ($@1)
    $default            reduce using rule 12 ($@2)

    $@1  go to state 14
    $@2  go to state 15


state 3

   66 integer: TOKEN_INTEGER .

    $default  reduce using rule 66 (integer)


state 4

    3 blockHead: blockHead . TOKEN_SEMICOLON declaration
    4 unlabelledBlock: blockHead . TOKEN_SEMICOLON compoundTail

    TOKEN_SEMICOLON  shift, and go to state 16


state 5

    5 block: unlabelledBlock .

    $default  reduce using rule 5 (block)


state 6

   11 program: block .

    $default  reduce using rule 11 (program)


state 7

    6 block: tlabel . block
   15 compoundStatement: tlabel . compoundStatement

    TOKEN_IDENTIFIER  shift, and go to state 1
    TOKEN_BEGIN       shift, and go to state 2
    TOKEN_INTEGER     shift, and go to state 3

    blockHead           go to state 4
    unlabelledBlock     go to state 5
    block               go to state 17
    tlabel              go to state 7
    label               go to state 8
    unlabelledCompound  go to state 10
    compoundStatement   go to state 18
    integer             go to state 12
    identifier          go to state 13


state 8

    7 tlabel: label . TOKEN_COLON

    TOKEN_COLON  shift, and go to state 19


state 9

    0 $accept: program . $end

    $end  shift, and go to state 20


state 10

   14 compoundStatement: unlabelledCompound .

    $default  reduce using rule 14 (compoundStatement)


state 11

   10 program: compoundStatement .

    $default  reduce using rule 10 (program)


state 12

    9 label: integer .

    $default  reduce using rule 9 (label)


state 13

    8 label: identifier .

    $default  reduce using rule 8 (label)


state 14

    2 blockHead: TOKEN_BEGIN $@1 . declaration

    TOKEN_PROCEDURE     shift, and go to state 21
    TOKEN_SWITCH        shift, and go to state 22
    TOKEN_TYPE_INTEGER  shift, and go to state 23
    TOKEN_TYPE_REAL     shift, and go to state 24
    TOKEN_TYPE_BOOLEAN  shift, and go to state 25
    TOKEN_ARRAY         shift, and go to state 26

    declaration           go to state 27
    switchDeclaration     go to state 28
    arrayDeclaration      go to state 29
    type                  go to state 30
    typeDeclaration       go to state 31
    procedureDeclaration  go to state 32


state 15

   13 unlabelledCompound: TOKEN_BEGIN $@2 . compoundTail

    TOKEN_PRINT       shift, and go to state 33
    TOKEN_IDENTIFIER  shift, and go to state 1
    TOKEN_BEGIN       shift, and go to state 2
    TOKEN_INTEGER     shift, and go to state 3
    TOKEN_FOR         shift, and go to state 34
    TOKEN_IF          shift, and go to state 35
    TOKEN_RETURN      shift, and go to state 36

    $default  reduce using rule 120 (empty)

    blockHead                 go to state 4
    unlabelledBlock           go to state 5
    block                     go to state 37
    tlabel                    go to state 38
    label                     go to state 8
    unlabelledCompound        go to state 10
    compoundStatement         go to state 39
    compoundTail              go to state 40
    arrayIdentifier           go to state 41
    integer                   go to state 12
    simpleVariable            go to state 42
    variable                  go to state 43
    subscriptedVariable       go to state 44
    identifier                go to state 45
    varIdentifier             go to state 46
    unconditionalStatement    go to state 47
    conditionalStatement      go to state 48
    ifStatement               go to state 49
    ifClause                  go to state 50
    basicStatement            go to state 51
    unlabelledBasicStatement  go to state 52
    dummyStatement            go to state 53
    returnStatement           go to state 54
    assignmentStatement       go to state 55
    forStatement              go to state 56
    empty                     go to state 57
    procedureStatement        go to state 58
    procedureIdentifier       go to state 59
    statement                 go to state 60


state 16

    3 blockHead: blockHead TOKEN_SEMICOLON . declaration
    4 unlabelledBlock: blockHead TOKEN_SEMICOLON . compoundTail

    TOKEN_PRINT         shift, and go to state 33
    TOKEN_IDENTIFIER    shift, and go to state 1
    TOKEN_BEGIN         shift, and go to state 2
    TOKEN_PROCEDURE     shift, and go to state 21
    TOKEN_INTEGER       shift, and go to state 3
    TOKEN_FOR           shift, and go to state 34
    TOKEN_IF            shift, and go to state 35
    TOKEN_SWITCH        shift, and go to state 22
    TOKEN_TYPE_INTEGER  shift, and go to state 23
    TOKEN_TYPE_REAL     shift, and go to state 24
    TOKEN_TYPE_BOOLEAN  shift, and go to state 25
    TOKEN_ARRAY         shift, and go to state 26
    TOKEN_RETURN        shift, and go to state 36

    $default  reduce using rule 120 (empty)

    blockHead                 go to state 4
    unlabelledBlock           go to state 5
    block                     go to state 37
    tlabel                    go to state 38
    label                     go to state 8
    unlabelledCompound        go to state 10
    compoundStatement         go to state 39
    compoundTail              go to state 61
    declaration               go to state 62
    switchDeclaration         go to state 28
    arrayIdentifier           go to state 41
    arrayDeclaration          go to state 29
    integer                   go to state 12
    simpleVariable            go to state 42
    variable                  go to state 43
    subscriptedVariable       go to state 44
    identifier                go to state 45
    type                      go to state 30
    typeDeclaration           go to state 31
    varIdentifier             go to state 46
    unconditionalStatement    go to state 47
    conditionalStatement      go to state 48
    ifStatement               go to state 49
    ifClause                  go to state 50
    basicStatement            go to state 51
    unlabelledBasicStatement  go to state 52
    dummyStatement            go to state 53
    returnStatement           go to state 54
    assignmentStatement       go to state 55
    forStatement              go to state 56
    empty                     go to state 57
    procedureStatement        go to state 58
    procedureIdentifier       go to state 59
    statement                 go to state 60
    procedureDeclaration      go to state 32


state 17

    6 block: tlabel block .

    $default  reduce using rule 6 (block)


state 18

   15 compoundStatement: tlabel compoundStatement .

    $default  reduce using rule 15 (compoundStatement)


state 19

    7 tlabel: label TOKEN_COLON .

    $default  reduce using rule 7 (tlabel)


state 20

    0 $accept: program $end .

    $default  accept


state 21

  159 procedureDeclaration: TOKEN_PROCEDURE . procedureHeading procedureBody

    TOKEN_IDENTIFIER  shift, and go to state 1

    identifier           go to state 63
    procedureIdentifier  go to state 64
    procedureHeading     go to state 65


state 22

   25 switchDeclaration: TOKEN_SWITCH . switchIdentifier TOKEN_ASSIGN switchList

    TOKEN_IDENTIFIER  shift, and go to state 1

    switchIdentifier  go to state 66
    identifier        go to state 67


state 23

   96 type: TOKEN_TYPE_INTEGER .

    $default  reduce using rule 96 (type)


state 24

   95 type: TOKEN_TYPE_REAL .

    $default  reduce using rule 95 (type)


state 25

   97 type: TOKEN_TYPE_BOOLEAN .

    $default  reduce using rule 97 (type)


state 26

   35 arrayDeclaration: TOKEN_ARRAY . arrayList

    TOKEN_IDENTIFIER  shift, and go to state 1

    arrayIdentifier  go to state 68
    arraySegment     go to state 69
    arrayList        go to state 70
    identifier       go to state 71


state 27

    2 blockHead: TOKEN_BEGIN $@1 declaration .

    $default  reduce using rule 2 (blockHead)


state 28

   20 declaration: switchDeclaration .

    $default  reduce using rule 20 (declaration)


state 29

   19 declaration: arrayDeclaration .

    $default  reduce using rule 19 (declaration)


state 30

   36 arrayDeclaration: type . TOKEN_ARRAY arrayList
   98 typeDeclaration: type . listType
  160 procedureDeclaration: type . TOKEN_PROCEDURE procedureHeading procedureBody

    TOKEN_IDENTIFIER  shift, and go to state 1
    TOKEN_PROCEDURE   shift, and go to state 72
    TOKEN_ARRAY       shift, and go to state 73

    identifier     go to state 74
    listType       go to state 75
    varIdentifier  go to state 76


state 31

   18 declaration: typeDeclaration .

    $default  reduce using rule 18 (declaration)


state 32

   21 declaration: procedureDeclaration .

    $default  reduce using rule 21 (declaration)


state 33

  134 statement: TOKEN_PRINT . expression

    TOKEN_IDENTIFIER     shift, and go to state 1
    TOKEN_LOGICAL_VALUE  shift, and go to state 77
    TOKEN_PLUS           shift, and go to state 78
    TOKEN_MINUS          shift, and go to state 79
    TOKEN_OPEN_BRACKET   shift, and go to state 80
    TOKEN_REAL_NUM       shift, and go to state 81
    TOKEN_INTEGER        shift, and go to state 3
    TOKEN_NOT_OP         shift, and go to state 82
    TOKEN_IF             shift, and go to state 35

    tlabel                         go to state 83
    label                          go to state 8
    arrayIdentifier                go to state 41
    expression                     go to state 84
    switchIdentifier               go to state 85
    switchDesignator               go to state 86
    simpleDesignationalExpression  go to state 87
    designationalExpression        go to state 88
    arithmeticExpression           go to state 89
    simpleArithmeticExpression     go to state 90
    term                           go to state 91
    factor                         go to state 92
    primary                        go to state 93
    unsignedNumber                 go to state 94
    realNumber                     go to state 95
    integer                        go to state 96
    simpleVariable                 go to state 42
    variable                       go to state 97
    subscriptedVariable            go to state 44
    identifier                     go to state 98
    booleanExpression              go to state 99
    simpleBoolean                  go to state 100
    implication                    go to state 101
    booleanTerm                    go to state 102
    booleanFactor                  go to state 103
    booleanSecondary               go to state 104
    booleanPrimary                 go to state 105
    logicalValue                   go to state 106
    relation                       go to state 107
    varIdentifier                  go to state 46
    ifClause                       go to state 108
    procedureIdentifier            go to state 109
    functionDesignator             go to state 110


state 34

  119 forStatement: TOKEN_FOR . variable TOKEN_ASSIGN arithmeticExpression TOKEN_STEP arithmeticExpression TOKEN_UNTIL arithmeticExpression TOKEN_DO statement

    TOKEN_IDENTIFIER  shift, and go to state 1

    arrayIdentifier      go to state 41
    simpleVariable       go to state 42
    variable             go to state 111
    subscriptedVariable  go to state 44
    identifier           go to state 112
    varIdentifier        go to state 46


state 35

  108 ifClause: TOKEN_IF . booleanExpression TOKEN_THEN

    TOKEN_IDENTIFIER     shift, and go to state 1
    TOKEN_LOGICAL_VALUE  shift, and go to state 77
    TOKEN_PLUS           shift, and go to state 78
    TOKEN_MINUS          shift, and go to state 79
    TOKEN_OPEN_BRACKET   shift, and go to state 113
    TOKEN_REAL_NUM       shift, and go to state 81
    TOKEN_INTEGER        shift, and go to state 3
    TOKEN_NOT_OP         shift, and go to state 82

    arrayIdentifier             go to state 41
    simpleArithmeticExpression  go to state 114
    term                        go to state 91
    factor                      go to state 92
    primary                     go to state 93
    unsignedNumber              go to state 94
    realNumber                  go to state 95
    integer                     go to state 115
    simpleVariable              go to state 42
    variable                    go to state 97
    subscriptedVariable         go to state 44
    identifier                  go to state 116
    booleanExpression           go to state 117
    simpleBoolean               go to state 100
    implication                 go to state 101
    booleanTerm                 go to state 102
    booleanFactor               go to state 103
    booleanSecondary            go to state 104
    booleanPrimary              go to state 105
    logicalValue                go to state 106
    relation                    go to state 107
    varIdentifier               go to state 46
    procedureIdentifier         go to state 109
    functionDesignator          go to state 110


state 36

  116 returnStatement: TOKEN_RETURN . expression

    TOKEN_IDENTIFIER     shift, and go to state 1
    TOKEN_LOGICAL_VALUE  shift, and go to state 77
    TOKEN_PLUS           shift, and go to state 78
    TOKEN_MINUS          shift, and go to state 79
    TOKEN_OPEN_BRACKET   shift, and go to state 80
    TOKEN_REAL_NUM       shift, and go to state 81
    TOKEN_INTEGER        shift, and go to state 3
    TOKEN_NOT_OP         shift, and go to state 82
    TOKEN_IF             shift, and go to state 35

    tlabel                         go to state 83
    label                          go to state 8
    arrayIdentifier                go to state 41
    expression                     go to state 118
    switchIdentifier               go to state 85
    switchDesignator               go to state 86
    simpleDesignationalExpression  go to state 87
    designationalExpression        go to state 88
    arithmeticExpression           go to state 89
    simpleArithmeticExpression     go to state 90
    term                           go to state 91
    factor                         go to state 92
    primary                        go to state 93
    unsignedNumber                 go to state 94
    realNumber                     go to state 95
    integer                        go to state 96
    simpleVariable                 go to state 42
    variable                       go to state 97
    subscriptedVariable            go to state 44
    identifier                     go to state 98
    booleanExpression              go to state 99
    simpleBoolean                  go to state 100
    implication                    go to state 101
    booleanTerm                    go to state 102
    booleanFactor                  go to state 103
    booleanSecondary               go to state 104
    booleanPrimary                 go to state 105
    logicalValue                   go to state 106
    relation                       go to state 107
    varIdentifier                  go to state 46
    ifClause                       go to state 108
    procedureIdentifier            go to state 109
    functionDesignator             go to state 110


state 37

  102 unconditionalStatement: block .

    $default  reduce using rule 102 (unconditionalStatement)


state 38

    6 block: tlabel . block
   15 compoundStatement: tlabel . compoundStatement
  106 conditionalStatement: tlabel . conditionalStatement
  110 basicStatement: tlabel . basicStatement

    TOKEN_IDENTIFIER  shift, and go to state 1
    TOKEN_BEGIN       shift, and go to state 2
    TOKEN_INTEGER     shift, and go to state 3
    TOKEN_IF          shift, and go to state 35
    TOKEN_RETURN      shift, and go to state 36

    $default  reduce using rule 120 (empty)

    blockHead                 go to state 4
    unlabelledBlock           go to state 5
    block                     go to state 17
    tlabel                    go to state 38
    label                     go to state 8
    unlabelledCompound        go to state 10
    compoundStatement         go to state 18
    arrayIdentifier           go to state 41
    integer                   go to state 12
    simpleVariable            go to state 42
    variable                  go to state 43
    subscriptedVariable       go to state 44
    identifier                go to state 45
    varIdentifier             go to state 46
    conditionalStatement      go to state 119
    ifStatement               go to state 49
    ifClause                  go to state 50
    basicStatement            go to state 120
    unlabelledBasicStatement  go to state 52
    dummyStatement            go to state 53
    returnStatement           go to state 54
    assignmentStatement       go to state 55
    empty                     go to state 57
    procedureStatement        go to state 58
    procedureIdentifier       go to state 59


state 39

  101 unconditionalStatement: compoundStatement .

    $default  reduce using rule 101 (unconditionalStatement)


state 40

   13 unlabelledCompound: TOKEN_BEGIN $@2 compoundTail .

    $default  reduce using rule 13 (unlabelledCompound)


state 41

   70 subscriptedVariable: arrayIdentifier . TOKEN_OPEN_SQUARE_BRACKET subscriptList TOKEN_CLOSE_SQUARE_BRACKET

    TOKEN_OPEN_SQUARE_BRACKET  shift, and go to state 121


state 42

   68 variable: simpleVariable .

    $default  reduce using rule 68 (variable)


state 43

  117 assignmentStatement: variable . TOKEN_ASSIGN arithmeticExpression
  118                    | variable . TOKEN_ASSIGN booleanExpression

    TOKEN_ASSIGN  shift, and go to state 122


state 44

   69 variable: subscriptedVariable .

    $default  reduce using rule 69 (variable)


state 45

    8 label: identifier .
   30 arrayIdentifier: identifier .
   99 varIdentifier: identifier .
  122 procedureIdentifier: identifier .

    TOKEN_OPEN_BRACKET         reduce using rule 122 (procedureIdentifier)
    TOKEN_OPEN_SQUARE_BRACKET  reduce using rule 30 (arrayIdentifier)
    TOKEN_ASSIGN               reduce using rule 99 (varIdentifier)
    $default                   reduce using rule 8 (label)


state 46

   67 simpleVariable: varIdentifier .

    $default  reduce using rule 67 (simpleVariable)


state 47

  131 statement: unconditionalStatement .

    $default  reduce using rule 131 (statement)


state 48

  132 statement: conditionalStatement .

    $default  reduce using rule 132 (statement)


state 49

  103 conditionalStatement: ifStatement .
  104                     | ifStatement . TOKEN_ELSE statement

    TOKEN_ELSE  shift, and go to state 123

    $default  reduce using rule 103 (conditionalStatement)


state 50

  105 conditionalStatement: ifClause . forStatement
  107 ifStatement: ifClause . unconditionalStatement

    TOKEN_IDENTIFIER  shift, and go to state 1
    TOKEN_BEGIN       shift, and go to state 2
    TOKEN_INTEGER     shift, and go to state 3
    TOKEN_FOR         shift, and go to state 34
    TOKEN_RETURN      shift, and go to state 36

    $default  reduce using rule 120 (empty)

    blockHead                 go to state 4
    unlabelledBlock           go to state 5
    block                     go to state 37
    tlabel                    go to state 124
    label                     go to state 8
    unlabelledCompound        go to state 10
    compoundStatement         go to state 39
    arrayIdentifier           go to state 41
    integer                   go to state 12
    simpleVariable            go to state 42
    variable                  go to state 43
    subscriptedVariable       go to state 44
    identifier                go to state 45
    varIdentifier             go to state 46
    unconditionalStatement    go to state 125
    basicStatement            go to state 51
    unlabelledBasicStatement  go to state 52
    dummyStatement            go to state 53
    returnStatement           go to state 54
    assignmentStatement       go to state 55
    forStatement              go to state 126
    empty                     go to state 57
    procedureStatement        go to state 58
    procedureIdentifier       go to state 59


state 51

  100 unconditionalStatement: basicStatement .

    $default  reduce using rule 100 (unconditionalStatement)


state 52

  109 basicStatement: unlabelledBasicStatement .

    $default  reduce using rule 109 (basicStatement)


state 53

  112 unlabelledBasicStatement: dummyStatement .

    $default  reduce using rule 112 (unlabelledBasicStatement)


state 54

  114 unlabelledBasicStatement: returnStatement .

    $default  reduce using rule 114 (unlabelledBasicStatement)


state 55

  111 unlabelledBasicStatement: assignmentStatement .

    $default  reduce using rule 111 (unlabelledBasicStatement)


state 56

  133 statement: forStatement .

    $default  reduce using rule 133 (statement)


state 57

  115 dummyStatement: empty .

    $default  reduce using rule 115 (dummyStatement)


state 58

  113 unlabelledBasicStatement: procedureStatement .

    $default  reduce using rule 113 (unlabelledBasicStatement)


state 59

  121 procedureStatement: procedureIdentifier . actualParameterPart

    TOKEN_OPEN_BRACKET  shift, and go to state 127

    actualParameterPart  go to state 128


state 60

   16 compoundTail: statement . TOKEN_END
   17             | statement . TOKEN_SEMICOLON compoundTail

    TOKEN_END        shift, and go to state 129
    TOKEN_SEMICOLON  shift, and go to state 130


state 61

    4 unlabelledBlock: blockHead TOKEN_SEMICOLON compoundTail .

    $default  reduce using rule 4 (unlabelledBlock)


state 62

    3 blockHead: blockHead TOKEN_SEMICOLON declaration .

    $default  reduce using rule 3 (blockHead)


state 63

  122 procedureIdentifier: identifier .

    $default  reduce using rule 122 (procedureIdentifier)


state 64

  157 procedureHeading: procedureIdentifier . @6 formalParameterPart TOKEN_SEMICOLON $@7 valuePart specificationPart

    $default  reduce using rule 155 (@6)

    @6  go to state 131


state 65

  159 procedureDeclaration: TOKEN_PROCEDURE procedureHeading . procedureBody

    TOKEN_PRINT       shift, and go to state 33
    TOKEN_IDENTIFIER  shift, and go to state 1
    TOKEN_BEGIN       shift, and go to state 2
    TOKEN_INTEGER     shift, and go to state 3
    TOKEN_FOR         shift, and go to state 34
    TOKEN_IF          shift, and go to state 35
    TOKEN_RETURN      shift, and go to state 36

    $default  reduce using rule 120 (empty)

    blockHead                 go to state 4
    unlabelledBlock           go to state 5
    block                     go to state 37
    tlabel                    go to state 38
    label                     go to state 8
    unlabelledCompound        go to state 10
    compoundStatement         go to state 39
    arrayIdentifier           go to state 41
    integer                   go to state 12
    simpleVariable            go to state 42
    variable                  go to state 43
    subscriptedVariable       go to state 44
    identifier                go to state 45
    varIdentifier             go to state 46
    unconditionalStatement    go to state 47
    conditionalStatement      go to state 48
    ifStatement               go to state 49
    ifClause                  go to state 50
    basicStatement            go to state 51
    unlabelledBasicStatement  go to state 52
    dummyStatement            go to state 53
    returnStatement           go to state 54
    assignmentStatement       go to state 55
    forStatement              go to state 56
    empty                     go to state 57
    procedureStatement        go to state 58
    procedureIdentifier       go to state 59
    statement                 go to state 132
    procedureBody             go to state 133


state 66

   25 switchDeclaration: TOKEN_SWITCH switchIdentifier . TOKEN_ASSIGN switchList

    TOKEN_ASSIGN  shift, and go to state 134


state 67

   40 switchIdentifier: identifier .

    $default  reduce using rule 40 (switchIdentifier)


state 68

   31 arraySegment: arrayIdentifier . TOKEN_OPEN_SQUARE_BRACKET boundPairList TOKEN_CLOSE_SQUARE_BRACKET
   32             | arrayIdentifier . TOKEN_COMMA arraySegment

    TOKEN_COMMA                shift, and go to state 135
    TOKEN_OPEN_SQUARE_BRACKET  shift, and go to state 136


state 69

   33 arrayList: arraySegment .

    $default  reduce using rule 33 (arrayList)


state 70

   34 arrayList: arrayList . TOKEN_COMMA arraySegment
   35 arrayDeclaration: TOKEN_ARRAY arrayList .

    TOKEN_COMMA  shift, and go to state 137

    $default  reduce using rule 35 (arrayDeclaration)


state 71

   30 arrayIdentifier: identifier .

    $default  reduce using rule 30 (arrayIdentifier)


state 72

  160 procedureDeclaration: type TOKEN_PROCEDURE . procedureHeading procedureBody

    TOKEN_IDENTIFIER  shift, and go to state 1

    identifier           go to state 63
    procedureIdentifier  go to state 64
    procedureHeading     go to state 138


state 73

   36 arrayDeclaration: type TOKEN_ARRAY . arrayList

    TOKEN_IDENTIFIER  shift, and go to state 1

    arrayIdentifier  go to state 68
    arraySegment     go to state 69
    arrayList        go to state 139
    identifier       go to state 71


state 74

   99 varIdentifier: identifier .

    $default  reduce using rule 99 (varIdentifier)


state 75

   94 listType: listType . TOKEN_COMMA @3 varIdentifier
   98 typeDeclaration: type listType .

    TOKEN_COMMA  shift, and go to state 140

    $default  reduce using rule 98 (typeDeclaration)


state 76

   92 listType: varIdentifier .

    $default  reduce using rule 92 (listType)


state 77

   89 logicalValue: TOKEN_LOGICAL_VALUE .

    $default  reduce using rule 89 (logicalValue)


state 78

   50 simpleArithmeticExpression: TOKEN_PLUS . term

    TOKEN_IDENTIFIER    shift, and go to state 1
    TOKEN_OPEN_BRACKET  shift, and go to state 141
    TOKEN_REAL_NUM      shift, and go to state 81
    TOKEN_INTEGER       shift, and go to state 3

    arrayIdentifier      go to state 41
    term                 go to state 142
    factor               go to state 92
    primary              go to state 93
    unsignedNumber       go to state 94
    realNumber           go to state 95
    integer              go to state 115
    simpleVariable       go to state 42
    variable             go to state 97
    subscriptedVariable  go to state 44
    identifier           go to state 116
    varIdentifier        go to state 46
    procedureIdentifier  go to state 109
    functionDesignator   go to state 110


state 79

   51 simpleArithmeticExpression: TOKEN_MINUS . term

    TOKEN_IDENTIFIER    shift, and go to state 1
    TOKEN_OPEN_BRACKET  shift, and go to state 141
    TOKEN_REAL_NUM      shift, and go to state 81
    TOKEN_INTEGER       shift, and go to state 3

    arrayIdentifier      go to state 41
    term                 go to state 143
    factor               go to state 92
    primary              go to state 93
    unsignedNumber       go to state 94
    realNumber           go to state 95
    integer              go to state 115
    simpleVariable       go to state 42
    variable             go to state 97
    subscriptedVariable  go to state 44
    identifier           go to state 116
    varIdentifier        go to state 46
    procedureIdentifier  go to state 109
    functionDesignator   go to state 110


state 80

   44 simpleDesignationalExpression: TOKEN_OPEN_BRACKET . designationalExpression TOKEN_CLOSE_BRACKET
   62 primary: TOKEN_OPEN_BRACKET . arithmeticExpression TOKEN_CLOSE_BRACKET
   88 booleanPrimary: TOKEN_OPEN_BRACKET . booleanExpression TOKEN_CLOSE_BRACKET

    TOKEN_IDENTIFIER     shift, and go to state 1
    TOKEN_LOGICAL_VALUE  shift, and go to state 77
    TOKEN_PLUS           shift, and go to state 78
    TOKEN_MINUS          shift, and go to state 79
    TOKEN_OPEN_BRACKET   shift, and go to state 80
    TOKEN_REAL_NUM       shift, and go to state 81
    TOKEN_INTEGER        shift, and go to state 3
    TOKEN_NOT_OP         shift, and go to state 82
    TOKEN_IF             shift, and go to state 35

    tlabel                         go to state 83
    label                          go to state 8
    arrayIdentifier                go to state 41
    switchIdentifier               go to state 85
    switchDesignator               go to state 86
    simpleDesignationalExpression  go to state 87
    designationalExpression        go to state 144
    arithmeticExpression           go to state 145
    simpleArithmeticExpression     go to state 90
    term                           go to state 91
    factor                         go to state 92
    primary                        go to state 93
    unsignedNumber                 go to state 94
    realNumber                     go to state 95
    integer                        go to state 96
    simpleVariable                 go to state 42
    variable                       go to state 97
    subscriptedVariable            go to state 44
    identifier                     go to state 98
    booleanExpression              go to state 146
    simpleBoolean                  go to state 100
    implication                    go to state 101
    booleanTerm                    go to state 102
    booleanFactor                  go to state 103
    booleanSecondary               go to state 104
    booleanPrimary                 go to state 105
    logicalValue                   go to state 106
    relation                       go to state 107
    varIdentifier                  go to state 46
    ifClause                       go to state 108
    procedureIdentifier            go to state 109
    functionDesignator             go to state 110


state 81

   65 realNumber: TOKEN_REAL_NUM .

    $default  reduce using rule 65 (realNumber)


state 82

   85 booleanSecondary: TOKEN_NOT_OP . booleanPrimary

    TOKEN_IDENTIFIER     shift, and go to state 1
    TOKEN_LOGICAL_VALUE  shift, and go to state 77
    TOKEN_PLUS           shift, and go to state 78
    TOKEN_MINUS          shift, and go to state 79
    TOKEN_OPEN_BRACKET   shift, and go to state 113
    TOKEN_REAL_NUM       shift, and go to state 81
    TOKEN_INTEGER        shift, and go to state 3

    arrayIdentifier             go to state 41
    simpleArithmeticExpression  go to state 114
    term                        go to state 91
    factor                      go to state 92
    primary                     go to state 93
    unsignedNumber              go to state 94
    realNumber                  go to state 95
    integer                     go to state 115
    simpleVariable              go to state 42
    variable                    go to state 97
    subscriptedVariable         go to state 44
    identifier                  go to state 116
    booleanPrimary              go to state 147
    logicalValue                go to state 106
    relation                    go to state 107
    varIdentifier               go to state 46
    procedureIdentifier         go to state 109
    functionDesignator          go to state 110


state 83

   42 simpleDesignationalExpression: tlabel .

    $default  reduce using rule 42 (simpleDesignationalExpression)


state 84

  134 statement: TOKEN_PRINT expression .

    $default  reduce using rule 134 (statement)


state 85

   41 switchDesignator: switchIdentifier . TOKEN_OPEN_CURLY_BRACKET subscriptExpression TOKEN_CLOSE_CURLY_BRACKET

    TOKEN_OPEN_CURLY_BRACKET  shift, and go to state 148


state 86

   43 simpleDesignationalExpression: switchDesignator .

    $default  reduce using rule 43 (simpleDesignationalExpression)


state 87

   45 designationalExpression: simpleDesignationalExpression .

    $default  reduce using rule 45 (designationalExpression)


state 88

   39 expression: designationalExpression .

    $default  reduce using rule 39 (expression)


state 89

   37 expression: arithmeticExpression .

    $default  reduce using rule 37 (expression)


state 90

   47 arithmeticExpression: simpleArithmeticExpression .
   52 simpleArithmeticExpression: simpleArithmeticExpression . TOKEN_PLUS term
   53                           | simpleArithmeticExpression . TOKEN_MINUS term
   90 relation: simpleArithmeticExpression . relationalOperator simpleArithmeticExpression

    TOKEN_PLUS    shift, and go to state 149
    TOKEN_MINUS   shift, and go to state 150
    TOKEN_REL_OP  shift, and go to state 151

    $default  reduce using rule 47 (arithmeticExpression)

    relationalOperator  go to state 152


state 91

   49 simpleArithmeticExpression: term .
   55 term: term . TOKEN_MULTIPLY factor
   56     | term . TOKEN_DIVIDE factor

    TOKEN_DIVIDE    shift, and go to state 153
    TOKEN_MULTIPLY  shift, and go to state 154

    $default  reduce using rule 49 (simpleArithmeticExpression)


state 92

   54 term: factor .
   58 factor: factor . TOKEN_POWER primary

    TOKEN_POWER  shift, and go to state 155

    $default  reduce using rule 54 (term)


state 93

   57 factor: primary .

    $default  reduce using rule 57 (factor)


state 94

   59 primary: unsignedNumber .

    $default  reduce using rule 59 (primary)


state 95

   63 unsignedNumber: realNumber .

    $default  reduce using rule 63 (unsignedNumber)


state 96

    9 label: integer .
   64 unsignedNumber: integer .

    TOKEN_COLON  reduce using rule 9 (label)
    $default     reduce using rule 64 (unsignedNumber)


state 97

   61 primary: variable .

    $default  reduce using rule 61 (primary)


state 98

    8 label: identifier .
   30 arrayIdentifier: identifier .
   40 switchIdentifier: identifier .
   99 varIdentifier: identifier .
  122 procedureIdentifier: identifier .

    TOKEN_OPEN_BRACKET         reduce using rule 122 (procedureIdentifier)
    TOKEN_OPEN_SQUARE_BRACKET  reduce using rule 30 (arrayIdentifier)
    TOKEN_OPEN_CURLY_BRACKET   reduce using rule 40 (switchIdentifier)
    TOKEN_COLON                reduce using rule 8 (label)
    $default                   reduce using rule 99 (varIdentifier)


state 99

   38 expression: booleanExpression .

    $default  reduce using rule 38 (expression)


state 100

   75 booleanExpression: simpleBoolean .
   77 simpleBoolean: simpleBoolean . TOKEN_EQUIV implication

    TOKEN_EQUIV  shift, and go to state 156

    $default  reduce using rule 75 (booleanExpression)


state 101

   76 simpleBoolean: implication .
   79 implication: implication . TOKEN_IMPLY booleanTerm

    TOKEN_IMPLY  shift, and go to state 157

    $default  reduce using rule 76 (simpleBoolean)


state 102

   78 implication: booleanTerm .
   81 booleanTerm: booleanTerm . TOKEN_OR_OP booleanFactor

    TOKEN_OR_OP  shift, and go to state 158

    $default  reduce using rule 78 (implication)


state 103

   80 booleanTerm: booleanFactor .
   83 booleanFactor: booleanFactor . TOKEN_AND_OP booleanSecondary

    TOKEN_AND_OP  shift, and go to state 159

    $default  reduce using rule 80 (booleanTerm)


state 104

   82 booleanFactor: booleanSecondary .

    $default  reduce using rule 82 (booleanFactor)


state 105

   84 booleanSecondary: booleanPrimary .

    $default  reduce using rule 84 (booleanSecondary)


state 106

   86 booleanPrimary: logicalValue .

    $default  reduce using rule 86 (booleanPrimary)


state 107

   87 booleanPrimary: relation .

    $default  reduce using rule 87 (booleanPrimary)


state 108

   46 designationalExpression: ifClause . simpleDesignationalExpression TOKEN_ELSE designationalExpression
   48 arithmeticExpression: ifClause . simpleArithmeticExpression TOKEN_ELSE arithmeticExpression

    TOKEN_IDENTIFIER    shift, and go to state 1
    TOKEN_PLUS          shift, and go to state 78
    TOKEN_MINUS         shift, and go to state 79
    TOKEN_OPEN_BRACKET  shift, and go to state 160
    TOKEN_REAL_NUM      shift, and go to state 81
    TOKEN_INTEGER       shift, and go to state 3

    tlabel                         go to state 83
    label                          go to state 8
    arrayIdentifier                go to state 41
    switchIdentifier               go to state 85
    switchDesignator               go to state 86
    simpleDesignationalExpression  go to state 161
    simpleArithmeticExpression     go to state 162
    term                           go to state 91
    factor                         go to state 92
    primary                        go to state 93
    unsignedNumber                 go to state 94
    realNumber                     go to state 95
    integer                        go to state 96
    simpleVariable                 go to state 42
    variable                       go to state 97
    subscriptedVariable            go to state 44
    identifier                     go to state 98
    varIdentifier                  go to state 46
    procedureIdentifier            go to state 109
    functionDesignator             go to state 110


state 109

  130 functionDesignator: procedureIdentifier . actualParameterPart

    TOKEN_OPEN_BRACKET  shift, and go to state 127

    actualParameterPart  go to state 163


state 110

   60 primary: functionDesignator .

    $default  reduce using rule 60 (primary)


state 111

  119 forStatement: TOKEN_FOR variable . TOKEN_ASSIGN arithmeticExpression TOKEN_STEP arithmeticExpression TOKEN_UNTIL arithmeticExpression TOKEN_DO statement

    TOKEN_ASSIGN  shift, and go to state 164


state 112

   30 arrayIdentifier: identifier .
   99 varIdentifier: identifier .

    TOKEN_ASSIGN  reduce using rule 99 (varIdentifier)
    $default      reduce using rule 30 (arrayIdentifier)


state 113

   62 primary: TOKEN_OPEN_BRACKET . arithmeticExpression TOKEN_CLOSE_BRACKET
   88 booleanPrimary: TOKEN_OPEN_BRACKET . booleanExpression TOKEN_CLOSE_BRACKET

    TOKEN_IDENTIFIER     shift, and go to state 1
    TOKEN_LOGICAL_VALUE  shift, and go to state 77
    TOKEN_PLUS           shift, and go to state 78
    TOKEN_MINUS          shift, and go to state 79
    TOKEN_OPEN_BRACKET   shift, and go to state 113
    TOKEN_REAL_NUM       shift, and go to state 81
    TOKEN_INTEGER        shift, and go to state 3
    TOKEN_NOT_OP         shift, and go to state 82
    TOKEN_IF             shift, and go to state 35

    arrayIdentifier             go to state 41
    arithmeticExpression        go to state 145
    simpleArithmeticExpression  go to state 90
    term                        go to state 91
    factor                      go to state 92
    primary                     go to state 93
    unsignedNumber              go to state 94
    realNumber                  go to state 95
    integer                     go to state 115
    simpleVariable              go to state 42
    variable                    go to state 97
    subscriptedVariable         go to state 44
    identifier                  go to state 116
    booleanExpression           go to state 146
    simpleBoolean               go to state 100
    implication                 go to state 101
    booleanTerm                 go to state 102
    booleanFactor               go to state 103
    booleanSecondary            go to state 104
    booleanPrimary              go to state 105
    logicalValue                go to state 106
    relation                    go to state 107
    varIdentifier               go to state 46
    ifClause                    go to state 165
    procedureIdentifier         go to state 109
    functionDesignator          go to state 110


state 114

   52 simpleArithmeticExpression: simpleArithmeticExpression . TOKEN_PLUS term
   53                           | simpleArithmeticExpression . TOKEN_MINUS term
   90 relation: simpleArithmeticExpression . relationalOperator simpleArithmeticExpression

    TOKEN_PLUS    shift, and go to state 149
    TOKEN_MINUS   shift, and go to state 150
    TOKEN_REL_OP  shift, and go to state 151

    relationalOperator  go to state 152


state 115

   64 unsignedNumber: integer .

    $default  reduce using rule 64 (unsignedNumber)


state 116

   30 arrayIdentifier: identifier .
   99 varIdentifier: identifier .
  122 procedureIdentifier: identifier .

    TOKEN_OPEN_BRACKET         reduce using rule 122 (procedureIdentifier)
    TOKEN_OPEN_SQUARE_BRACKET  reduce using rule 30 (arrayIdentifier)
    $default                   reduce using rule 99 (varIdentifier)


state 117

  108 ifClause: TOKEN_IF booleanExpression . TOKEN_THEN

    TOKEN_THEN  shift, and go to state 166


state 118

  116 returnStatement: TOKEN_RETURN expression .

    $default  reduce using rule 116 (returnStatement)


state 119

  106 conditionalStatement: tlabel conditionalStatement .

    $default  reduce using rule 106 (conditionalStatement)


state 120

  110 basicStatement: tlabel basicStatement .

    $default  reduce using rule 110 (basicStatement)


state 121

   70 subscriptedVariable: arrayIdentifier TOKEN_OPEN_SQUARE_BRACKET . subscriptList TOKEN_CLOSE_SQUARE_BRACKET

    TOKEN_IDENTIFIER    shift, and go to state 1
    TOKEN_PLUS          shift, and go to state 78
    TOKEN_MINUS         shift, and go to state 79
    TOKEN_OPEN_BRACKET  shift, and go to state 141
    TOKEN_REAL_NUM      shift, and go to state 81
    TOKEN_INTEGER       shift, and go to state 3
    TOKEN_IF            shift, and go to state 35

    arrayIdentifier             go to state 41
    arithmeticExpression        go to state 167
    simpleArithmeticExpression  go to state 168
    term                        go to state 91
    factor                      go to state 92
    primary                     go to state 93
    unsignedNumber              go to state 94
    realNumber                  go to state 95
    integer                     go to state 115
    simpleVariable              go to state 42
    variable                    go to state 97
    subscriptedVariable         go to state 44
    subscriptList               go to state 169
    subscriptExpression         go to state 170
    identifier                  go to state 116
    varIdentifier               go to state 46
    ifClause                    go to state 165
    procedureIdentifier         go to state 109
    functionDesignator          go to state 110


state 122

  117 assignmentStatement: variable TOKEN_ASSIGN . arithmeticExpression
  118                    | variable TOKEN_ASSIGN . booleanExpression

    TOKEN_IDENTIFIER     shift, and go to state 1
    TOKEN_LOGICAL_VALUE  shift, and go to state 77
    TOKEN_PLUS           shift, and go to state 78
    TOKEN_MINUS          shift, and go to state 79
    TOKEN_OPEN_BRACKET   shift, and go to state 113
    TOKEN_REAL_NUM       shift, and go to state 81
    TOKEN_INTEGER        shift, and go to state 3
    TOKEN_NOT_OP         shift, and go to state 82
    TOKEN_IF             shift, and go to state 35

    arrayIdentifier             go to state 41
    arithmeticExpression        go to state 171
    simpleArithmeticExpression  go to state 90
    term                        go to state 91
    factor                      go to state 92
    primary                     go to state 93
    unsignedNumber              go to state 94
    realNumber                  go to state 95
    integer                     go to state 115
    simpleVariable              go to state 42
    variable                    go to state 97
    subscriptedVariable         go to state 44
    identifier                  go to state 116
    booleanExpression           go to state 172
    simpleBoolean               go to state 100
    implication                 go to state 101
    booleanTerm                 go to state 102
    booleanFactor               go to state 103
    booleanSecondary            go to state 104
    booleanPrimary              go to state 105
    logicalValue                go to state 106
    relation                    go to state 107
    varIdentifier               go to state 46
    ifClause                    go to state 165
    procedureIdentifier         go to state 109
    functionDesignator          go to state 110


state 123

  104 conditionalStatement: ifStatement TOKEN_ELSE . statement

    TOKEN_PRINT       shift, and go to state 33
    TOKEN_IDENTIFIER  shift, and go to state 1
    TOKEN_BEGIN       shift, and go to state 2
    TOKEN_INTEGER     shift, and go to state 3
    TOKEN_FOR         shift, and go to state 34
    TOKEN_IF          shift, and go to state 35
    TOKEN_RETURN      shift, and go to state 36

    $default  reduce using rule 120 (empty)

    blockHead                 go to state 4
    unlabelledBlock           go to state 5
    block                     go to state 37
    tlabel                    go to state 38
    label                     go to state 8
    unlabelledCompound        go to state 10
    compoundStatement         go to state 39
    arrayIdentifier           go to state 41
    integer                   go to state 12
    simpleVariable            go to state 42
    variable                  go to state 43
    subscriptedVariable       go to state 44
    identifier                go to state 45
    varIdentifier             go to state 46
    unconditionalStatement    go to state 47
    conditionalStatement      go to state 48
    ifStatement               go to state 49
    ifClause                  go to state 50
    basicStatement            go to state 51
    unlabelledBasicStatement  go to state 52
    dummyStatement            go to state 53
    returnStatement           go to state 54
    assignmentStatement       go to state 55
    forStatement              go to state 56
    empty                     go to state 57
    procedureStatement        go to state 58
    procedureIdentifier       go to state 59
    statement                 go to state 173


state 124

    6 block: tlabel . block
   15 compoundStatement: tlabel . compoundStatement
  110 basicStatement: tlabel . basicStatement

    TOKEN_IDENTIFIER  shift, and go to state 1
    TOKEN_BEGIN       shift, and go to state 2
    TOKEN_INTEGER     shift, and go to state 3
    TOKEN_RETURN      shift, and go to state 36

    $default  reduce using rule 120 (empty)

    blockHead                 go to state 4
    unlabelledBlock           go to state 5
    block                     go to state 17
    tlabel                    go to state 124
    label                     go to state 8
    unlabelledCompound        go to state 10
    compoundStatement         go to state 18
    arrayIdentifier           go to state 41
    integer                   go to state 12
    simpleVariable            go to state 42
    variable                  go to state 43
    subscriptedVariable       go to state 44
    identifier                go to state 45
    varIdentifier             go to state 46
    basicStatement            go to state 120
    unlabelledBasicStatement  go to state 52
    dummyStatement            go to state 53
    returnStatement           go to state 54
    assignmentStatement       go to state 55
    empty                     go to state 57
    procedureStatement        go to state 58
    procedureIdentifier       go to state 59


state 125

  107 ifStatement: ifClause unconditionalStatement .

    $default  reduce using rule 107 (ifStatement)


state 126

  105 conditionalStatement: ifClause forStatement .

    $default  reduce using rule 105 (conditionalStatement)


state 127

  123 actualParameterPart: TOKEN_OPEN_BRACKET . TOKEN_CLOSE_BRACKET
  124                    | TOKEN_OPEN_BRACKET . actualParameterList TOKEN_CLOSE_BRACKET

    TOKEN_IDENTIFIER     shift, and go to state 1
    TOKEN_LOGICAL_VALUE  shift, and go to state 77
    TOKEN_PLUS           shift, and go to state 78
    TOKEN_MINUS          shift, and go to state 79
    TOKEN_OPEN_BRACKET   shift, and go to state 80
    TOKEN_CLOSE_BRACKET  shift, and go to state 174
    TOKEN_REAL_NUM       shift, and go to state 81
    TOKEN_INTEGER        shift, and go to state 3
    TOKEN_NOT_OP         shift, and go to state 82
    TOKEN_IF             shift, and go to state 35

    tlabel                         go to state 83
    label                          go to state 8
    arrayIdentifier                go to state 41
    expression                     go to state 175
    switchIdentifier               go to state 85
    switchDesignator               go to state 86
    simpleDesignationalExpression  go to state 87
    designationalExpression        go to state 88
    arithmeticExpression           go to state 89
    simpleArithmeticExpression     go to state 90
    term                           go to state 91
    factor                         go to state 92
    primary                        go to state 93
    unsignedNumber                 go to state 94
    realNumber                     go to state 95
    integer                        go to state 96
    simpleVariable                 go to state 42
    variable                       go to state 97
    subscriptedVariable            go to state 44
    identifier                     go to state 98
    booleanExpression              go to state 99
    simpleBoolean                  go to state 100
    implication                    go to state 101
    booleanTerm                    go to state 102
    booleanFactor                  go to state 103
    booleanSecondary               go to state 104
    booleanPrimary                 go to state 105
    logicalValue                   go to state 106
    relation                       go to state 107
    varIdentifier                  go to state 46
    ifClause                       go to state 108
    procedureIdentifier            go to state 109
    actualParameterList            go to state 176
    actualParameter                go to state 177
    functionDesignator             go to state 110


state 128

  121 procedureStatement: procedureIdentifier actualParameterPart .

    $default  reduce using rule 121 (procedureStatement)


state 129

   16 compoundTail: statement TOKEN_END .

    $default  reduce using rule 16 (compoundTail)


state 130

   17 compoundTail: statement TOKEN_SEMICOLON . compoundTail

    TOKEN_PRINT       shift, and go to state 33
    TOKEN_IDENTIFIER  shift, and go to state 1
    TOKEN_BEGIN       shift, and go to state 2
    TOKEN_INTEGER     shift, and go to state 3
    TOKEN_FOR         shift, and go to state 34
    TOKEN_IF          shift, and go to state 35
    TOKEN_RETURN      shift, and go to state 36

    $default  reduce using rule 120 (empty)

    blockHead                 go to state 4
    unlabelledBlock           go to state 5
    block                     go to state 37
    tlabel                    go to state 38
    label                     go to state 8
    unlabelledCompound        go to state 10
    compoundStatement         go to state 39
    compoundTail              go to state 178
    arrayIdentifier           go to state 41
    integer                   go to state 12
    simpleVariable            go to state 42
    variable                  go to state 43
    subscriptedVariable       go to state 44
    identifier                go to state 45
    varIdentifier             go to state 46
    unconditionalStatement    go to state 47
    conditionalStatement      go to state 48
    ifStatement               go to state 49
    ifClause                  go to state 50
    basicStatement            go to state 51
    unlabelledBasicStatement  go to state 52
    dummyStatement            go to state 53
    returnStatement           go to state 54
    assignmentStatement       go to state 55
    forStatement              go to state 56
    empty                     go to state 57
    procedureStatement        go to state 58
    procedureIdentifier       go to state 59
    statement                 go to state 60


state 131

  157 procedureHeading: procedureIdentifier @6 . formalParameterPart TOKEN_SEMICOLON $@7 valuePart specificationPart

    TOKEN_OPEN_BRACKET  shift, and go to state 179

    $default  reduce using rule 120 (empty)

    empty                go to state 180
    formalParameterPart  go to state 181


state 132

  158 procedureBody: statement .

    $default  reduce using rule 158 (procedureBody)


state 133

  159 procedureDeclaration: TOKEN_PROCEDURE procedureHeading procedureBody .

    $default  reduce using rule 159 (procedureDeclaration)


state 134

   25 switchDeclaration: TOKEN_SWITCH switchIdentifier TOKEN_ASSIGN . switchList

    TOKEN_IDENTIFIER    shift, and go to state 1
    TOKEN_OPEN_BRACKET  shift, and go to state 182
    TOKEN_INTEGER       shift, and go to state 3
    TOKEN_IF            shift, and go to state 35

    tlabel                         go to state 83
    label                          go to state 8
    switchList                     go to state 183
    switchIdentifier               go to state 85
    switchDesignator               go to state 86
    simpleDesignationalExpression  go to state 87
    designationalExpression        go to state 184
    integer                        go to state 12
    identifier                     go to state 185
    ifClause                       go to state 186


state 135

   32 arraySegment: arrayIdentifier TOKEN_COMMA . arraySegment

    TOKEN_IDENTIFIER  shift, and go to state 1

    arrayIdentifier  go to state 68
    arraySegment     go to state 187
    identifier       go to state 71


state 136

   31 arraySegment: arrayIdentifier TOKEN_OPEN_SQUARE_BRACKET . boundPairList TOKEN_CLOSE_SQUARE_BRACKET

    TOKEN_IDENTIFIER    shift, and go to state 1
    TOKEN_PLUS          shift, and go to state 78
    TOKEN_MINUS         shift, and go to state 79
    TOKEN_OPEN_BRACKET  shift, and go to state 141
    TOKEN_REAL_NUM      shift, and go to state 81
    TOKEN_INTEGER       shift, and go to state 3
    TOKEN_IF            shift, and go to state 35

    lowerBound                  go to state 188
    boundPair                   go to state 189
    boundPairList               go to state 190
    arrayIdentifier             go to state 41
    arithmeticExpression        go to state 191
    simpleArithmeticExpression  go to state 168
    term                        go to state 91
    factor                      go to state 92
    primary                     go to state 93
    unsignedNumber              go to state 94
    realNumber                  go to state 95
    integer                     go to state 115
    simpleVariable              go to state 42
    variable                    go to state 97
    subscriptedVariable         go to state 44
    identifier                  go to state 116
    varIdentifier               go to state 46
    ifClause                    go to state 165
    procedureIdentifier         go to state 109
    functionDesignator          go to state 110


state 137

   34 arrayList: arrayList TOKEN_COMMA . arraySegment

    TOKEN_IDENTIFIER  shift, and go to state 1

    arrayIdentifier  go to state 68
    arraySegment     go to state 192
    identifier       go to state 71


state 138

  160 procedureDeclaration: type TOKEN_PROCEDURE procedureHeading . procedureBody

    TOKEN_PRINT       shift, and go to state 33
    TOKEN_IDENTIFIER  shift, and go to state 1
    TOKEN_BEGIN       shift, and go to state 2
    TOKEN_INTEGER     shift, and go to state 3
    TOKEN_FOR         shift, and go to state 34
    TOKEN_IF          shift, and go to state 35
    TOKEN_RETURN      shift, and go to state 36

    $default  reduce using rule 120 (empty)

    blockHead                 go to state 4
    unlabelledBlock           go to state 5
    block                     go to state 37
    tlabel                    go to state 38
    label                     go to state 8
    unlabelledCompound        go to state 10
    compoundStatement         go to state 39
    arrayIdentifier           go to state 41
    integer                   go to state 12
    simpleVariable            go to state 42
    variable                  go to state 43
    subscriptedVariable       go to state 44
    identifier                go to state 45
    varIdentifier             go to state 46
    unconditionalStatement    go to state 47
    conditionalStatement      go to state 48
    ifStatement               go to state 49
    ifClause                  go to state 50
    basicStatement            go to state 51
    unlabelledBasicStatement  go to state 52
    dummyStatement            go to state 53
    returnStatement           go to state 54
    assignmentStatement       go to state 55
    forStatement              go to state 56
    empty                     go to state 57
    procedureStatement        go to state 58
    procedureIdentifier       go to state 59
    statement                 go to state 132
    procedureBody             go to state 193


state 139

   34 arrayList: arrayList . TOKEN_COMMA arraySegment
   36 arrayDeclaration: type TOKEN_ARRAY arrayList .

    TOKEN_COMMA  shift, and go to state 137

    $default  reduce using rule 36 (arrayDeclaration)


state 140

   94 listType: listType TOKEN_COMMA . @3 varIdentifier

    $default  reduce using rule 93 (@3)

    @3  go to state 194


state 141

   62 primary: TOKEN_OPEN_BRACKET . arithmeticExpression TOKEN_CLOSE_BRACKET

    TOKEN_IDENTIFIER    shift, and go to state 1
    TOKEN_PLUS          shift, and go to state 78
    TOKEN_MINUS         shift, and go to state 79
    TOKEN_OPEN_BRACKET  shift, and go to state 141
    TOKEN_REAL_NUM      shift, and go to state 81
    TOKEN_INTEGER       shift, and go to state 3
    TOKEN_IF            shift, and go to state 35

    arrayIdentifier             go to state 41
    arithmeticExpression        go to state 145
    simpleArithmeticExpression  go to state 168
    term                        go to state 91
    factor                      go to state 92
    primary                     go to state 93
    unsignedNumber              go to state 94
    realNumber                  go to state 95
    integer                     go to state 115
    simpleVariable              go to state 42
    variable                    go to state 97
    subscriptedVariable         go to state 44
    identifier                  go to state 116
    varIdentifier               go to state 46
    ifClause                    go to state 165
    procedureIdentifier         go to state 109
    functionDesignator          go to state 110


state 142

   50 simpleArithmeticExpression: TOKEN_PLUS term .
   55 term: term . TOKEN_MULTIPLY factor
   56     | term . TOKEN_DIVIDE factor

    TOKEN_DIVIDE    shift, and go to state 153
    TOKEN_MULTIPLY  shift, and go to state 154

    $default  reduce using rule 50 (simpleArithmeticExpression)


state 143

   51 simpleArithmeticExpression: TOKEN_MINUS term .
   55 term: term . TOKEN_MULTIPLY factor
   56     | term . TOKEN_DIVIDE factor

    TOKEN_DIVIDE    shift, and go to state 153
    TOKEN_MULTIPLY  shift, and go to state 154

    $default  reduce using rule 51 (simpleArithmeticExpression)


state 144

   44 simpleDesignationalExpression: TOKEN_OPEN_BRACKET designationalExpression . TOKEN_CLOSE_BRACKET

    TOKEN_CLOSE_BRACKET  shift, and go to state 195


state 145

   62 primary: TOKEN_OPEN_BRACKET arithmeticExpression . TOKEN_CLOSE_BRACKET

    TOKEN_CLOSE_BRACKET  shift, and go to state 196


state 146

   88 booleanPrimary: TOKEN_OPEN_BRACKET booleanExpression . TOKEN_CLOSE_BRACKET

    TOKEN_CLOSE_BRACKET  shift, and go to state 197


state 147

   85 booleanSecondary: TOKEN_NOT_OP booleanPrimary .

    $default  reduce using rule 85 (booleanSecondary)


state 148

   41 switchDesignator: switchIdentifier TOKEN_OPEN_CURLY_BRACKET . subscriptExpression TOKEN_CLOSE_CURLY_BRACKET

    TOKEN_IDENTIFIER    shift, and go to state 1
    TOKEN_PLUS          shift, and go to state 78
    TOKEN_MINUS         shift, and go to state 79
    TOKEN_OPEN_BRACKET  shift, and go to state 141
    TOKEN_REAL_NUM      shift, and go to state 81
    TOKEN_INTEGER       shift, and go to state 3
    TOKEN_IF            shift, and go to state 35

    arrayIdentifier             go to state 41
    arithmeticExpression        go to state 167
    simpleArithmeticExpression  go to state 168
    term                        go to state 91
    factor                      go to state 92
    primary                     go to state 93
    unsignedNumber              go to state 94
    realNumber                  go to state 95
    integer                     go to state 115
    simpleVariable              go to state 42
    variable                    go to state 97
    subscriptedVariable         go to state 44
    subscriptExpression         go to state 198
    identifier                  go to state 116
    varIdentifier               go to state 46
    ifClause                    go to state 165
    procedureIdentifier         go to state 109
    functionDesignator          go to state 110


state 149

   52 simpleArithmeticExpression: simpleArithmeticExpression TOKEN_PLUS . term

    TOKEN_IDENTIFIER    shift, and go to state 1
    TOKEN_OPEN_BRACKET  shift, and go to state 141
    TOKEN_REAL_NUM      shift, and go to state 81
    TOKEN_INTEGER       shift, and go to state 3

    arrayIdentifier      go to state 41
    term                 go to state 199
    factor               go to state 92
    primary              go to state 93
    unsignedNumber       go to state 94
    realNumber           go to state 95
    integer              go to state 115
    simpleVariable       go to state 42
    variable             go to state 97
    subscriptedVariable  go to state 44
    identifier           go to state 116
    varIdentifier        go to state 46
    procedureIdentifier  go to state 109
    functionDesignator   go to state 110


state 150

   53 simpleArithmeticExpression: simpleArithmeticExpression TOKEN_MINUS . term

    TOKEN_IDENTIFIER    shift, and go to state 1
    TOKEN_OPEN_BRACKET  shift, and go to state 141
    TOKEN_REAL_NUM      shift, and go to state 81
    TOKEN_INTEGER       shift, and go to state 3

    arrayIdentifier      go to state 41
    term                 go to state 200
    factor               go to state 92
    primary              go to state 93
    unsignedNumber       go to state 94
    realNumber           go to state 95
    integer              go to state 115
    simpleVariable       go to state 42
    variable             go to state 97
    subscriptedVariable  go to state 44
    identifier           go to state 116
    varIdentifier        go to state 46
    procedureIdentifier  go to state 109
    functionDesignator   go to state 110


state 151

   91 relationalOperator: TOKEN_REL_OP .

    $default  reduce using rule 91 (relationalOperator)


state 152

   90 relation: simpleArithmeticExpression relationalOperator . simpleArithmeticExpression

    TOKEN_IDENTIFIER    shift, and go to state 1
    TOKEN_PLUS          shift, and go to state 78
    TOKEN_MINUS         shift, and go to state 79
    TOKEN_OPEN_BRACKET  shift, and go to state 141
    TOKEN_REAL_NUM      shift, and go to state 81
    TOKEN_INTEGER       shift, and go to state 3

    arrayIdentifier             go to state 41
    simpleArithmeticExpression  go to state 201
    term                        go to state 91
    factor                      go to state 92
    primary                     go to state 93
    unsignedNumber              go to state 94
    realNumber                  go to state 95
    integer                     go to state 115
    simpleVariable              go to state 42
    variable                    go to state 97
    subscriptedVariable         go to state 44
    identifier                  go to state 116
    varIdentifier               go to state 46
    procedureIdentifier         go to state 109
    functionDesignator          go to state 110


state 153

   56 term: term TOKEN_DIVIDE . factor

    TOKEN_IDENTIFIER    shift, and go to state 1
    TOKEN_OPEN_BRACKET  shift, and go to state 141
    TOKEN_REAL_NUM      shift, and go to state 81
    TOKEN_INTEGER       shift, and go to state 3

    arrayIdentifier      go to state 41
    factor               go to state 202
    primary              go to state 93
    unsignedNumber       go to state 94
    realNumber           go to state 95
    integer              go to state 115
    simpleVariable       go to state 42
    variable             go to state 97
    subscriptedVariable  go to state 44
    identifier           go to state 116
    varIdentifier        go to state 46
    procedureIdentifier  go to state 109
    functionDesignator   go to state 110


state 154

   55 term: term TOKEN_MULTIPLY . factor

    TOKEN_IDENTIFIER    shift, and go to state 1
    TOKEN_OPEN_BRACKET  shift, and go to state 141
    TOKEN_REAL_NUM      shift, and go to state 81
    TOKEN_INTEGER       shift, and go to state 3

    arrayIdentifier      go to state 41
    factor               go to state 203
    primary              go to state 93
    unsignedNumber       go to state 94
    realNumber           go to state 95
    integer              go to state 115
    simpleVariable       go to state 42
    variable             go to state 97
    subscriptedVariable  go to state 44
    identifier           go to state 116
    varIdentifier        go to state 46
    procedureIdentifier  go to state 109
    functionDesignator   go to state 110


state 155

   58 factor: factor TOKEN_POWER . primary

    TOKEN_IDENTIFIER    shift, and go to state 1
    TOKEN_OPEN_BRACKET  shift, and go to state 141
    TOKEN_REAL_NUM      shift, and go to state 81
    TOKEN_INTEGER       shift, and go to state 3

    arrayIdentifier      go to state 41
    primary              go to state 204
    unsignedNumber       go to state 94
    realNumber           go to state 95
    integer              go to state 115
    simpleVariable       go to state 42
    variable             go to state 97
    subscriptedVariable  go to state 44
    identifier           go to state 116
    varIdentifier        go to state 46
    procedureIdentifier  go to state 109
    functionDesignator   go to state 110


state 156

   77 simpleBoolean: simpleBoolean TOKEN_EQUIV . implication

    TOKEN_IDENTIFIER     shift, and go to state 1
    TOKEN_LOGICAL_VALUE  shift, and go to state 77
    TOKEN_PLUS           shift, and go to state 78
    TOKEN_MINUS          shift, and go to state 79
    TOKEN_OPEN_BRACKET   shift, and go to state 113
    TOKEN_REAL_NUM       shift, and go to state 81
    TOKEN_INTEGER        shift, and go to state 3
    TOKEN_NOT_OP         shift, and go to state 82

    arrayIdentifier             go to state 41
    simpleArithmeticExpression  go to state 114
    term                        go to state 91
    factor                      go to state 92
    primary                     go to state 93
    unsignedNumber              go to state 94
    realNumber                  go to state 95
    integer                     go to state 115
    simpleVariable              go to state 42
    variable                    go to state 97
    subscriptedVariable         go to state 44
    identifier                  go to state 116
    implication                 go to state 205
    booleanTerm                 go to state 102
    booleanFactor               go to state 103
    booleanSecondary            go to state 104
    booleanPrimary              go to state 105
    logicalValue                go to state 106
    relation                    go to state 107
    varIdentifier               go to state 46
    procedureIdentifier         go to state 109
    functionDesignator          go to state 110


state 157

   79 implication: implication TOKEN_IMPLY . booleanTerm

    TOKEN_IDENTIFIER     shift, and go to state 1
    TOKEN_LOGICAL_VALUE  shift, and go to state 77
    TOKEN_PLUS           shift, and go to state 78
    TOKEN_MINUS          shift, and go to state 79
    TOKEN_OPEN_BRACKET   shift, and go to state 113
    TOKEN_REAL_NUM       shift, and go to state 81
    TOKEN_INTEGER        shift, and go to state 3
    TOKEN_NOT_OP         shift, and go to state 82

    arrayIdentifier             go to state 41
    simpleArithmeticExpression  go to state 114
    term                        go to state 91
    factor                      go to state 92
    primary                     go to state 93
    unsignedNumber              go to state 94
    realNumber                  go to state 95
    integer                     go to state 115
    simpleVariable              go to state 42
    variable                    go to state 97
    subscriptedVariable         go to state 44
    identifier                  go to state 116
    booleanTerm                 go to state 206
    booleanFactor               go to state 103
    booleanSecondary            go to state 104
    booleanPrimary              go to state 105
    logicalValue                go to state 106
    relation                    go to state 107
    varIdentifier               go to state 46
    procedureIdentifier         go to state 109
    functionDesignator          go to state 110


state 158

   81 booleanTerm: booleanTerm TOKEN_OR_OP . booleanFactor

    TOKEN_IDENTIFIER     shift, and go to state 1
    TOKEN_LOGICAL_VALUE  shift, and go to state 77
    TOKEN_PLUS           shift, and go to state 78
    TOKEN_MINUS          shift, and go to state 79
    TOKEN_OPEN_BRACKET   shift, and go to state 113
    TOKEN_REAL_NUM       shift, and go to state 81
    TOKEN_INTEGER        shift, and go to state 3
    TOKEN_NOT_OP         shift, and go to state 82

    arrayIdentifier             go to state 41
    simpleArithmeticExpression  go to state 114
    term                        go to state 91
    factor                      go to state 92
    primary                     go to state 93
    unsignedNumber              go to state 94
    realNumber                  go to state 95
    integer                     go to state 115
    simpleVariable              go to state 42
    variable                    go to state 97
    subscriptedVariable         go to state 44
    identifier                  go to state 116
    booleanFactor               go to state 207
    booleanSecondary            go to state 104
    booleanPrimary              go to state 105
    logicalValue                go to state 106
    relation                    go to state 107
    varIdentifier               go to state 46
    procedureIdentifier         go to state 109
    functionDesignator          go to state 110


state 159

   83 booleanFactor: booleanFactor TOKEN_AND_OP . booleanSecondary

    TOKEN_IDENTIFIER     shift, and go to state 1
    TOKEN_LOGICAL_VALUE  shift, and go to state 77
    TOKEN_PLUS           shift, and go to state 78
    TOKEN_MINUS          shift, and go to state 79
    TOKEN_OPEN_BRACKET   shift, and go to state 113
    TOKEN_REAL_NUM       shift, and go to state 81
    TOKEN_INTEGER        shift, and go to state 3
    TOKEN_NOT_OP         shift, and go to state 82

    arrayIdentifier             go to state 41
    simpleArithmeticExpression  go to state 114
    term                        go to state 91
    factor                      go to state 92
    primary                     go to state 93
    unsignedNumber              go to state 94
    realNumber                  go to state 95
    integer                     go to state 115
    simpleVariable              go to state 42
    variable                    go to state 97
    subscriptedVariable         go to state 44
    identifier                  go to state 116
    booleanSecondary            go to state 208
    booleanPrimary              go to state 105
    logicalValue                go to state 106
    relation                    go to state 107
    varIdentifier               go to state 46
    procedureIdentifier         go to state 109
    functionDesignator          go to state 110


state 160

   44 simpleDesignationalExpression: TOKEN_OPEN_BRACKET . designationalExpression TOKEN_CLOSE_BRACKET
   62 primary: TOKEN_OPEN_BRACKET . arithmeticExpression TOKEN_CLOSE_BRACKET

    TOKEN_IDENTIFIER    shift, and go to state 1
    TOKEN_PLUS          shift, and go to state 78
    TOKEN_MINUS         shift, and go to state 79
    TOKEN_OPEN_BRACKET  shift, and go to state 160
    TOKEN_REAL_NUM      shift, and go to state 81
    TOKEN_INTEGER       shift, and go to state 3
    TOKEN_IF            shift, and go to state 35

    tlabel                         go to state 83
    label                          go to state 8
    arrayIdentifier                go to state 41
    switchIdentifier               go to state 85
    switchDesignator               go to state 86
    simpleDesignationalExpression  go to state 87
    designationalExpression        go to state 144
    arithmeticExpression           go to state 145
    simpleArithmeticExpression     go to state 168
    term                           go to state 91
    factor                         go to state 92
    primary                        go to state 93
    unsignedNumber                 go to state 94
    realNumber                     go to state 95
    integer                        go to state 96
    simpleVariable                 go to state 42
    variable                       go to state 97
    subscriptedVariable            go to state 44
    identifier                     go to state 98
    varIdentifier                  go to state 46
    ifClause                       go to state 108
    procedureIdentifier            go to state 109
    functionDesignator             go to state 110


state 161

   46 designationalExpression: ifClause simpleDesignationalExpression . TOKEN_ELSE designationalExpression

    TOKEN_ELSE  shift, and go to state 209


state 162

   48 arithmeticExpression: ifClause simpleArithmeticExpression . TOKEN_ELSE arithmeticExpression
   52 simpleArithmeticExpression: simpleArithmeticExpression . TOKEN_PLUS term
   53                           | simpleArithmeticExpression . TOKEN_MINUS term

    TOKEN_PLUS   shift, and go to state 149
    TOKEN_MINUS  shift, and go to state 150
    TOKEN_ELSE   shift, and go to state 210


state 163

  130 functionDesignator: procedureIdentifier actualParameterPart .

    $default  reduce using rule 130 (functionDesignator)


state 164

  119 forStatement: TOKEN_FOR variable TOKEN_ASSIGN . arithmeticExpression TOKEN_STEP arithmeticExpression TOKEN_UNTIL arithmeticExpression TOKEN_DO statement

    TOKEN_IDENTIFIER    shift, and go to state 1
    TOKEN_PLUS          shift, and go to state 78
    TOKEN_MINUS         shift, and go to state 79
    TOKEN_OPEN_BRACKET  shift, and go to state 141
    TOKEN_REAL_NUM      shift, and go to state 81
    TOKEN_INTEGER       shift, and go to state 3
    TOKEN_IF            shift, and go to state 35

    arrayIdentifier             go to state 41
    arithmeticExpression        go to state 211
    simpleArithmeticExpression  go to state 168
    term                        go to state 91
    factor                      go to state 92
    primary                     go to state 93
    unsignedNumber              go to state 94
    realNumber                  go to state 95
    integer                     go to state 115
    simpleVariable              go to state 42
    variable                    go to state 97
    subscriptedVariable         go to state 44
    identifier                  go to state 116
    varIdentifier               go to state 46
    ifClause                    go to state 165
    procedureIdentifier         go to state 109
    functionDesignator          go to state 110


state 165

   48 arithmeticExpression: ifClause . simpleArithmeticExpression TOKEN_ELSE arithmeticExpression

    TOKEN_IDENTIFIER    shift, and go to state 1
    TOKEN_PLUS          shift, and go to state 78
    TOKEN_MINUS         shift, and go to state 79
    TOKEN_OPEN_BRACKET  shift, and go to state 141
    TOKEN_REAL_NUM      shift, and go to state 81
    TOKEN_INTEGER       shift, and go to state 3

    arrayIdentifier             go to state 41
    simpleArithmeticExpression  go to state 162
    term                        go to state 91
    factor                      go to state 92
    primary                     go to state 93
    unsignedNumber              go to state 94
    realNumber                  go to state 95
    integer                     go to state 115
    simpleVariable              go to state 42
    variable                    go to state 97
    subscriptedVariable         go to state 44
    identifier                  go to state 116
    varIdentifier               go to state 46
    procedureIdentifier         go to state 109
    functionDesignator          go to state 110


state 166

  108 ifClause: TOKEN_IF booleanExpression TOKEN_THEN .

    $default  reduce using rule 108 (ifClause)


state 167

   73 subscriptExpression: arithmeticExpression .

    $default  reduce using rule 73 (subscriptExpression)


state 168

   47 arithmeticExpression: simpleArithmeticExpression .
   52 simpleArithmeticExpression: simpleArithmeticExpression . TOKEN_PLUS term
   53                           | simpleArithmeticExpression . TOKEN_MINUS term

    TOKEN_PLUS   shift, and go to state 149
    TOKEN_MINUS  shift, and go to state 150

    $default  reduce using rule 47 (arithmeticExpression)


state 169

   70 subscriptedVariable: arrayIdentifier TOKEN_OPEN_SQUARE_BRACKET subscriptList . TOKEN_CLOSE_SQUARE_BRACKET
   72 subscriptList: subscriptList . TOKEN_COMMA subscriptExpression

    TOKEN_COMMA                 shift, and go to state 212
    TOKEN_CLOSE_SQUARE_BRACKET  shift, and go to state 213


state 170

   71 subscriptList: subscriptExpression .

    $default  reduce using rule 71 (subscriptList)


state 171

  117 assignmentStatement: variable TOKEN_ASSIGN arithmeticExpression .

    $default  reduce using rule 117 (assignmentStatement)


state 172

  118 assignmentStatement: variable TOKEN_ASSIGN booleanExpression .

    $default  reduce using rule 118 (assignmentStatement)


state 173

  104 conditionalStatement: ifStatement TOKEN_ELSE statement .

    $default  reduce using rule 104 (conditionalStatement)


state 174

  123 actualParameterPart: TOKEN_OPEN_BRACKET TOKEN_CLOSE_BRACKET .

    $default  reduce using rule 123 (actualParameterPart)


state 175

  127 actualParameter: expression .

    $default  reduce using rule 127 (actualParameter)


state 176

  124 actualParameterPart: TOKEN_OPEN_BRACKET actualParameterList . TOKEN_CLOSE_BRACKET
  126 actualParameterList: actualParameterList . parameterDelimiter actualParameter

    TOKEN_COMMA          shift, and go to state 214
    TOKEN_CLOSE_BRACKET  shift, and go to state 215

    parameterDelimiter  go to state 216


state 177

  125 actualParameterList: actualParameter .

    $default  reduce using rule 125 (actualParameterList)


state 178

   17 compoundTail: statement TOKEN_SEMICOLON compoundTail .

    $default  reduce using rule 17 (compoundTail)


state 179

  141 formalParameterPart: TOKEN_OPEN_BRACKET . $@5 formalParameterList TOKEN_CLOSE_BRACKET

    $default  reduce using rule 140 ($@5)

    $@5  go to state 217


state 180

  139 formalParameterPart: empty .

    $default  reduce using rule 139 (formalParameterPart)


state 181

  157 procedureHeading: procedureIdentifier @6 formalParameterPart . TOKEN_SEMICOLON $@7 valuePart specificationPart

    TOKEN_SEMICOLON  shift, and go to state 218


state 182

   44 simpleDesignationalExpression: TOKEN_OPEN_BRACKET . designationalExpression TOKEN_CLOSE_BRACKET

    TOKEN_IDENTIFIER    shift, and go to state 1
    TOKEN_OPEN_BRACKET  shift, and go to state 182
    TOKEN_INTEGER       shift, and go to state 3
    TOKEN_IF            shift, and go to state 35

    tlabel                         go to state 83
    label                          go to state 8
    switchIdentifier               go to state 85
    switchDesignator               go to state 86
    simpleDesignationalExpression  go to state 87
    designationalExpression        go to state 144
    integer                        go to state 12
    identifier                     go to state 185
    ifClause                       go to state 186


state 183

   24 switchList: switchList . TOKEN_COMMA designationalExpression
   25 switchDeclaration: TOKEN_SWITCH switchIdentifier TOKEN_ASSIGN switchList .

    TOKEN_COMMA  shift, and go to state 219

    $default  reduce using rule 25 (switchDeclaration)


state 184

   23 switchList: designationalExpression .

    $default  reduce using rule 23 (switchList)


state 185

    8 label: identifier .
   40 switchIdentifier: identifier .

    TOKEN_OPEN_CURLY_BRACKET  reduce using rule 40 (switchIdentifier)
    $default                  reduce using rule 8 (label)


state 186

   46 designationalExpression: ifClause . simpleDesignationalExpression TOKEN_ELSE designationalExpression

    TOKEN_IDENTIFIER    shift, and go to state 1
    TOKEN_OPEN_BRACKET  shift, and go to state 182
    TOKEN_INTEGER       shift, and go to state 3

    tlabel                         go to state 83
    label                          go to state 8
    switchIdentifier               go to state 85
    switchDesignator               go to state 86
    simpleDesignationalExpression  go to state 161
    integer                        go to state 12
    identifier                     go to state 185


state 187

   32 arraySegment: arrayIdentifier TOKEN_COMMA arraySegment .

    $default  reduce using rule 32 (arraySegment)


state 188

   27 boundPair: lowerBound . TOKEN_COLON upperBound

    TOKEN_COLON  shift, and go to state 220


state 189

   28 boundPairList: boundPair .

    $default  reduce using rule 28 (boundPairList)


state 190

   29 boundPairList: boundPairList . TOKEN_COMMA boundPair
   31 arraySegment: arrayIdentifier TOKEN_OPEN_SQUARE_BRACKET boundPairList . TOKEN_CLOSE_SQUARE_BRACKET

    TOKEN_COMMA                 shift, and go to state 221
    TOKEN_CLOSE_SQUARE_BRACKET  shift, and go to state 222


state 191

   22 lowerBound: arithmeticExpression .

    $default  reduce using rule 22 (lowerBound)


state 192

   34 arrayList: arrayList TOKEN_COMMA arraySegment .

    $default  reduce using rule 34 (arrayList)


state 193

  160 procedureDeclaration: type TOKEN_PROCEDURE procedureHeading procedureBody .

    $default  reduce using rule 160 (procedureDeclaration)


state 194

   94 listType: listType TOKEN_COMMA @3 . varIdentifier

    TOKEN_IDENTIFIER  shift, and go to state 1

    identifier     go to state 74
    varIdentifier  go to state 223


state 195

   44 simpleDesignationalExpression: TOKEN_OPEN_BRACKET designationalExpression TOKEN_CLOSE_BRACKET .

    $default  reduce using rule 44 (simpleDesignationalExpression)


state 196

   62 primary: TOKEN_OPEN_BRACKET arithmeticExpression TOKEN_CLOSE_BRACKET .

    $default  reduce using rule 62 (primary)


state 197

   88 booleanPrimary: TOKEN_OPEN_BRACKET booleanExpression TOKEN_CLOSE_BRACKET .

    $default  reduce using rule 88 (booleanPrimary)


state 198

   41 switchDesignator: switchIdentifier TOKEN_OPEN_CURLY_BRACKET subscriptExpression . TOKEN_CLOSE_CURLY_BRACKET

    TOKEN_CLOSE_CURLY_BRACKET  shift, and go to state 224


state 199

   52 simpleArithmeticExpression: simpleArithmeticExpression TOKEN_PLUS term .
   55 term: term . TOKEN_MULTIPLY factor
   56     | term . TOKEN_DIVIDE factor

    TOKEN_DIVIDE    shift, and go to state 153
    TOKEN_MULTIPLY  shift, and go to state 154

    $default  reduce using rule 52 (simpleArithmeticExpression)


state 200

   53 simpleArithmeticExpression: simpleArithmeticExpression TOKEN_MINUS term .
   55 term: term . TOKEN_MULTIPLY factor
   56     | term . TOKEN_DIVIDE factor

    TOKEN_DIVIDE    shift, and go to state 153
    TOKEN_MULTIPLY  shift, and go to state 154

    $default  reduce using rule 53 (simpleArithmeticExpression)


state 201

   52 simpleArithmeticExpression: simpleArithmeticExpression . TOKEN_PLUS term
   53                           | simpleArithmeticExpression . TOKEN_MINUS term
   90 relation: simpleArithmeticExpression relationalOperator simpleArithmeticExpression .

    TOKEN_PLUS   shift, and go to state 149
    TOKEN_MINUS  shift, and go to state 150

    $default  reduce using rule 90 (relation)


state 202

   56 term: term TOKEN_DIVIDE factor .
   58 factor: factor . TOKEN_POWER primary

    TOKEN_POWER  shift, and go to state 155

    $default  reduce using rule 56 (term)


state 203

   55 term: term TOKEN_MULTIPLY factor .
   58 factor: factor . TOKEN_POWER primary

    TOKEN_POWER  shift, and go to state 155

    $default  reduce using rule 55 (term)


state 204

   58 factor: factor TOKEN_POWER primary .

    $default  reduce using rule 58 (factor)


state 205

   77 simpleBoolean: simpleBoolean TOKEN_EQUIV implication .
   79 implication: implication . TOKEN_IMPLY booleanTerm

    TOKEN_IMPLY  shift, and go to state 157

    $default  reduce using rule 77 (simpleBoolean)


state 206

   79 implication: implication TOKEN_IMPLY booleanTerm .
   81 booleanTerm: booleanTerm . TOKEN_OR_OP booleanFactor

    TOKEN_OR_OP  shift, and go to state 158

    $default  reduce using rule 79 (implication)


state 207

   81 booleanTerm: booleanTerm TOKEN_OR_OP booleanFactor .
   83 booleanFactor: booleanFactor . TOKEN_AND_OP booleanSecondary

    TOKEN_AND_OP  shift, and go to state 159

    $default  reduce using rule 81 (booleanTerm)


state 208

   83 booleanFactor: booleanFactor TOKEN_AND_OP booleanSecondary .

    $default  reduce using rule 83 (booleanFactor)


state 209

   46 designationalExpression: ifClause simpleDesignationalExpression TOKEN_ELSE . designationalExpression

    TOKEN_IDENTIFIER    shift, and go to state 1
    TOKEN_OPEN_BRACKET  shift, and go to state 182
    TOKEN_INTEGER       shift, and go to state 3
    TOKEN_IF            shift, and go to state 35

    tlabel                         go to state 83
    label                          go to state 8
    switchIdentifier               go to state 85
    switchDesignator               go to state 86
    simpleDesignationalExpression  go to state 87
    designationalExpression        go to state 225
    integer                        go to state 12
    identifier                     go to state 185
    ifClause                       go to state 186


state 210

   48 arithmeticExpression: ifClause simpleArithmeticExpression TOKEN_ELSE . arithmeticExpression

    TOKEN_IDENTIFIER    shift, and go to state 1
    TOKEN_PLUS          shift, and go to state 78
    TOKEN_MINUS         shift, and go to state 79
    TOKEN_OPEN_BRACKET  shift, and go to state 141
    TOKEN_REAL_NUM      shift, and go to state 81
    TOKEN_INTEGER       shift, and go to state 3
    TOKEN_IF            shift, and go to state 35

    arrayIdentifier             go to state 41
    arithmeticExpression        go to state 226
    simpleArithmeticExpression  go to state 168
    term                        go to state 91
    factor                      go to state 92
    primary                     go to state 93
    unsignedNumber              go to state 94
    realNumber                  go to state 95
    integer                     go to state 115
    simpleVariable              go to state 42
    variable                    go to state 97
    subscriptedVariable         go to state 44
    identifier                  go to state 116
    varIdentifier               go to state 46
    ifClause                    go to state 165
    procedureIdentifier         go to state 109
    functionDesignator          go to state 110


state 211

  119 forStatement: TOKEN_FOR variable TOKEN_ASSIGN arithmeticExpression . TOKEN_STEP arithmeticExpression TOKEN_UNTIL arithmeticExpression TOKEN_DO statement

    TOKEN_STEP  shift, and go to state 227


state 212

   72 subscriptList: subscriptList TOKEN_COMMA . subscriptExpression

    TOKEN_IDENTIFIER    shift, and go to state 1
    TOKEN_PLUS          shift, and go to state 78
    TOKEN_MINUS         shift, and go to state 79
    TOKEN_OPEN_BRACKET  shift, and go to state 141
    TOKEN_REAL_NUM      shift, and go to state 81
    TOKEN_INTEGER       shift, and go to state 3
    TOKEN_IF            shift, and go to state 35

    arrayIdentifier             go to state 41
    arithmeticExpression        go to state 167
    simpleArithmeticExpression  go to state 168
    term                        go to state 91
    factor                      go to state 92
    primary                     go to state 93
    unsignedNumber              go to state 94
    realNumber                  go to state 95
    integer                     go to state 115
    simpleVariable              go to state 42
    variable                    go to state 97
    subscriptedVariable         go to state 44
    subscriptExpression         go to state 228
    identifier                  go to state 116
    varIdentifier               go to state 46
    ifClause                    go to state 165
    procedureIdentifier         go to state 109
    functionDesignator          go to state 110


state 213

   70 subscriptedVariable: arrayIdentifier TOKEN_OPEN_SQUARE_BRACKET subscriptList TOKEN_CLOSE_SQUARE_BRACKET .

    $default  reduce using rule 70 (subscriptedVariable)


state 214

  128 parameterDelimiter: TOKEN_COMMA .

    $default  reduce using rule 128 (parameterDelimiter)


state 215

  124 actualParameterPart: TOKEN_OPEN_BRACKET actualParameterList TOKEN_CLOSE_BRACKET .
  129 parameterDelimiter: TOKEN_CLOSE_BRACKET . identifier TOKEN_COLON TOKEN_OPEN_BRACKET

    TOKEN_IDENTIFIER  shift, and go to state 1

    $default  reduce using rule 124 (actualParameterPart)

    identifier  go to state 229


state 216

  126 actualParameterList: actualParameterList parameterDelimiter . actualParameter

    TOKEN_IDENTIFIER     shift, and go to state 1
    TOKEN_LOGICAL_VALUE  shift, and go to state 77
    TOKEN_PLUS           shift, and go to state 78
    TOKEN_MINUS          shift, and go to state 79
    TOKEN_OPEN_BRACKET   shift, and go to state 80
    TOKEN_REAL_NUM       shift, and go to state 81
    TOKEN_INTEGER        shift, and go to state 3
    TOKEN_NOT_OP         shift, and go to state 82
    TOKEN_IF             shift, and go to state 35

    tlabel                         go to state 83
    label                          go to state 8
    arrayIdentifier                go to state 41
    expression                     go to state 175
    switchIdentifier               go to state 85
    switchDesignator               go to state 86
    simpleDesignationalExpression  go to state 87
    designationalExpression        go to state 88
    arithmeticExpression           go to state 89
    simpleArithmeticExpression     go to state 90
    term                           go to state 91
    factor                         go to state 92
    primary                        go to state 93
    unsignedNumber                 go to state 94
    realNumber                     go to state 95
    integer                        go to state 96
    simpleVariable                 go to state 42
    variable                       go to state 97
    subscriptedVariable            go to state 44
    identifier                     go to state 98
    booleanExpression              go to state 99
    simpleBoolean                  go to state 100
    implication                    go to state 101
    booleanTerm                    go to state 102
    booleanFactor                  go to state 103
    booleanSecondary               go to state 104
    booleanPrimary                 go to state 105
    logicalValue                   go to state 106
    relation                       go to state 107
    varIdentifier                  go to state 46
    ifClause                       go to state 108
    procedureIdentifier            go to state 109
    actualParameter                go to state 230
    functionDesignator             go to state 110


state 217

  141 formalParameterPart: TOKEN_OPEN_BRACKET $@5 . formalParameterList TOKEN_CLOSE_BRACKET

    TOKEN_IDENTIFIER  shift, and go to state 1

    identifier           go to state 231
    formalParameter      go to state 232
    formalParameterList  go to state 233


state 218

  157 procedureHeading: procedureIdentifier @6 formalParameterPart TOKEN_SEMICOLON . $@7 valuePart specificationPart

    $default  reduce using rule 156 ($@7)

    $@7  go to state 234


state 219

   24 switchList: switchList TOKEN_COMMA . designationalExpression

    TOKEN_IDENTIFIER    shift, and go to state 1
    TOKEN_OPEN_BRACKET  shift, and go to state 182
    TOKEN_INTEGER       shift, and go to state 3
    TOKEN_IF            shift, and go to state 35

    tlabel                         go to state 83
    label                          go to state 8
    switchIdentifier               go to state 85
    switchDesignator               go to state 86
    simpleDesignationalExpression  go to state 87
    designationalExpression        go to state 235
    integer                        go to state 12
    identifier                     go to state 185
    ifClause                       go to state 186


state 220

   27 boundPair: lowerBound TOKEN_COLON . upperBound

    TOKEN_IDENTIFIER    shift, and go to state 1
    TOKEN_PLUS          shift, and go to state 78
    TOKEN_MINUS         shift, and go to state 79
    TOKEN_OPEN_BRACKET  shift, and go to state 141
    TOKEN_REAL_NUM      shift, and go to state 81
    TOKEN_INTEGER       shift, and go to state 3
    TOKEN_IF            shift, and go to state 35

    upperBound                  go to state 236
    arrayIdentifier             go to state 41
    arithmeticExpression        go to state 237
    simpleArithmeticExpression  go to state 168
    term                        go to state 91
    factor                      go to state 92
    primary                     go to state 93
    unsignedNumber              go to state 94
    realNumber                  go to state 95
    integer                     go to state 115
    simpleVariable              go to state 42
    variable                    go to state 97
    subscriptedVariable         go to state 44
    identifier                  go to state 116
    varIdentifier               go to state 46
    ifClause                    go to state 165
    procedureIdentifier         go to state 109
    functionDesignator          go to state 110


state 221

   29 boundPairList: boundPairList TOKEN_COMMA . boundPair

    TOKEN_IDENTIFIER    shift, and go to state 1
    TOKEN_PLUS          shift, and go to state 78
    TOKEN_MINUS         shift, and go to state 79
    TOKEN_OPEN_BRACKET  shift, and go to state 141
    TOKEN_REAL_NUM      shift, and go to state 81
    TOKEN_INTEGER       shift, and go to state 3
    TOKEN_IF            shift, and go to state 35

    lowerBound                  go to state 188
    boundPair                   go to state 238
    arrayIdentifier             go to state 41
    arithmeticExpression        go to state 191
    simpleArithmeticExpression  go to state 168
    term                        go to state 91
    factor                      go to state 92
    primary                     go to state 93
    unsignedNumber              go to state 94
    realNumber                  go to state 95
    integer                     go to state 115
    simpleVariable              go to state 42
    variable                    go to state 97
    subscriptedVariable         go to state 44
    identifier                  go to state 116
    varIdentifier               go to state 46
    ifClause                    go to state 165
    procedureIdentifier         go to state 109
    functionDesignator          go to state 110


state 222

   31 arraySegment: arrayIdentifier TOKEN_OPEN_SQUARE_BRACKET boundPairList TOKEN_CLOSE_SQUARE_BRACKET .

    $default  reduce using rule 31 (arraySegment)


state 223

   94 listType: listType TOKEN_COMMA @3 varIdentifier .

    $default  reduce using rule 94 (listType)


state 224

   41 switchDesignator: switchIdentifier TOKEN_OPEN_CURLY_BRACKET subscriptExpression TOKEN_CLOSE_CURLY_BRACKET .

    $default  reduce using rule 41 (switchDesignator)


state 225

   46 designationalExpression: ifClause simpleDesignationalExpression TOKEN_ELSE designationalExpression .

    $default  reduce using rule 46 (designationalExpression)


state 226

   48 arithmeticExpression: ifClause simpleArithmeticExpression TOKEN_ELSE arithmeticExpression .

    $default  reduce using rule 48 (arithmeticExpression)


state 227

  119 forStatement: TOKEN_FOR variable TOKEN_ASSIGN arithmeticExpression TOKEN_STEP . arithmeticExpression TOKEN_UNTIL arithmeticExpression TOKEN_DO statement

    TOKEN_IDENTIFIER    shift, and go to state 1
    TOKEN_PLUS          shift, and go to state 78
    TOKEN_MINUS         shift, and go to state 79
    TOKEN_OPEN_BRACKET  shift, and go to state 141
    TOKEN_REAL_NUM      shift, and go to state 81
    TOKEN_INTEGER       shift, and go to state 3
    TOKEN_IF            shift, and go to state 35

    arrayIdentifier             go to state 41
    arithmeticExpression        go to state 239
    simpleArithmeticExpression  go to state 168
    term                        go to state 91
    factor                      go to state 92
    primary                     go to state 93
    unsignedNumber              go to state 94
    realNumber                  go to state 95
    integer                     go to state 115
    simpleVariable              go to state 42
    variable                    go to state 97
    subscriptedVariable         go to state 44
    identifier                  go to state 116
    varIdentifier               go to state 46
    ifClause                    go to state 165
    procedureIdentifier         go to state 109
    functionDesignator          go to state 110


state 228

   72 subscriptList: subscriptList TOKEN_COMMA subscriptExpression .

    $default  reduce using rule 72 (subscriptList)


state 229

  129 parameterDelimiter: TOKEN_CLOSE_BRACKET identifier . TOKEN_COLON TOKEN_OPEN_BRACKET

    TOKEN_COLON  shift, and go to state 240


state 230

  126 actualParameterList: actualParameterList parameterDelimiter actualParameter .

    $default  reduce using rule 126 (actualParameterList)


state 231

  135 formalParameter: identifier .

    $default  reduce using rule 135 (formalParameter)


state 232

  136 formalParameterList: formalParameter .

    $default  reduce using rule 136 (formalParameterList)


state 233

  138 formalParameterList: formalParameterList . parameterDelimiter $@4 formalParameter
  141 formalParameterPart: TOKEN_OPEN_BRACKET $@5 formalParameterList . TOKEN_CLOSE_BRACKET

    TOKEN_COMMA          shift, and go to state 214
    TOKEN_CLOSE_BRACKET  shift, and go to state 241

    parameterDelimiter  go to state 242


state 234

  157 procedureHeading: procedureIdentifier @6 formalParameterPart TOKEN_SEMICOLON $@7 . valuePart specificationPart

    TOKEN_VALUE  shift, and go to state 243

    $default  reduce using rule 120 (empty)

    empty      go to state 244
    valuePart  go to state 245


state 235

   24 switchList: switchList TOKEN_COMMA designationalExpression .

    $default  reduce using rule 24 (switchList)


state 236

   27 boundPair: lowerBound TOKEN_COLON upperBound .

    $default  reduce using rule 27 (boundPair)


state 237

   26 upperBound: arithmeticExpression .

    $default  reduce using rule 26 (upperBound)


state 238

   29 boundPairList: boundPairList TOKEN_COMMA boundPair .

    $default  reduce using rule 29 (boundPairList)


state 239

  119 forStatement: TOKEN_FOR variable TOKEN_ASSIGN arithmeticExpression TOKEN_STEP arithmeticExpression . TOKEN_UNTIL arithmeticExpression TOKEN_DO statement

    TOKEN_UNTIL  shift, and go to state 246


state 240

  129 parameterDelimiter: TOKEN_CLOSE_BRACKET identifier TOKEN_COLON . TOKEN_OPEN_BRACKET

    TOKEN_OPEN_BRACKET  shift, and go to state 247


state 241

  129 parameterDelimiter: TOKEN_CLOSE_BRACKET . identifier TOKEN_COLON TOKEN_OPEN_BRACKET
  141 formalParameterPart: TOKEN_OPEN_BRACKET $@5 formalParameterList TOKEN_CLOSE_BRACKET .

    TOKEN_IDENTIFIER  shift, and go to state 1

    $default  reduce using rule 141 (formalParameterPart)

    identifier  go to state 229


state 242

  138 formalParameterList: formalParameterList parameterDelimiter . $@4 formalParameter

    $default  reduce using rule 137 ($@4)

    $@4  go to state 248


state 243

  144 valuePart: TOKEN_VALUE . identifierList TOKEN_SEMICOLON

    TOKEN_IDENTIFIER  shift, and go to state 1

    identifier      go to state 249
    identifierList  go to state 250


state 244

  145 valuePart: empty .

    $default  reduce using rule 145 (valuePart)


state 245

  157 procedureHeading: procedureIdentifier @6 formalParameterPart TOKEN_SEMICOLON $@7 valuePart . specificationPart

    TOKEN_SWITCH        shift, and go to state 251
    TOKEN_TYPE_INTEGER  shift, and go to state 23
    TOKEN_TYPE_REAL     shift, and go to state 24
    TOKEN_TYPE_BOOLEAN  shift, and go to state 25
    TOKEN_TYPE_LABEL    shift, and go to state 252

    $default  reduce using rule 120 (empty)

    type                         go to state 253
    empty                        go to state 254
    specifier                    go to state 255
    specificationPart            go to state 256
    specificationIdentifierList  go to state 257


state 246

  119 forStatement: TOKEN_FOR variable TOKEN_ASSIGN arithmeticExpression TOKEN_STEP arithmeticExpression TOKEN_UNTIL . arithmeticExpression TOKEN_DO statement

    TOKEN_IDENTIFIER    shift, and go to state 1
    TOKEN_PLUS          shift, and go to state 78
    TOKEN_MINUS         shift, and go to state 79
    TOKEN_OPEN_BRACKET  shift, and go to state 141
    TOKEN_REAL_NUM      shift, and go to state 81
    TOKEN_INTEGER       shift, and go to state 3
    TOKEN_IF            shift, and go to state 35

    arrayIdentifier             go to state 41
    arithmeticExpression        go to state 258
    simpleArithmeticExpression  go to state 168
    term                        go to state 91
    factor                      go to state 92
    primary                     go to state 93
    unsignedNumber              go to state 94
    realNumber                  go to state 95
    integer                     go to state 115
    simpleVariable              go to state 42
    variable                    go to state 97
    subscriptedVariable         go to state 44
    identifier                  go to state 116
    varIdentifier               go to state 46
    ifClause                    go to state 165
    procedureIdentifier         go to state 109
    functionDesignator          go to state 110


state 247

  129 parameterDelimiter: TOKEN_CLOSE_BRACKET identifier TOKEN_COLON TOKEN_OPEN_BRACKET .

    $default  reduce using rule 129 (parameterDelimiter)


state 248

  138 formalParameterList: formalParameterList parameterDelimiter $@4 . formalParameter

    TOKEN_IDENTIFIER  shift, and go to state 1

    identifier       go to state 231
    formalParameter  go to state 259


state 249

  142 identifierList: identifier .

    $default  reduce using rule 142 (identifierList)


state 250

  143 identifierList: identifierList . TOKEN_COMMA identifier
  144 valuePart: TOKEN_VALUE identifierList . TOKEN_SEMICOLON

    TOKEN_COMMA      shift, and go to state 260
    TOKEN_SEMICOLON  shift, and go to state 261


state 251

  149 specifier: TOKEN_SWITCH .

    $default  reduce using rule 149 (specifier)


state 252

  148 specifier: TOKEN_TYPE_LABEL .

    $default  reduce using rule 148 (specifier)


state 253

  146 specifier: type .
  147          | type . TOKEN_ARRAY
  150          | type . TOKEN_PROCEDURE

    TOKEN_PROCEDURE  shift, and go to state 262
    TOKEN_ARRAY      shift, and go to state 263

    $default  reduce using rule 146 (specifier)


state 254

  151 specificationPart: empty .

    $default  reduce using rule 151 (specificationPart)


state 255

  153 specificationIdentifierList: specifier . identifierList TOKEN_SEMICOLON

    TOKEN_IDENTIFIER  shift, and go to state 1

    identifier      go to state 249
    identifierList  go to state 264


state 256

  157 procedureHeading: procedureIdentifier @6 formalParameterPart TOKEN_SEMICOLON $@7 valuePart specificationPart .

    $default  reduce using rule 157 (procedureHeading)


state 257

  152 specificationPart: specificationIdentifierList .
  154 specificationIdentifierList: specificationIdentifierList . specifier identifierList TOKEN_SEMICOLON

    TOKEN_SWITCH        shift, and go to state 251
    TOKEN_TYPE_INTEGER  shift, and go to state 23
    TOKEN_TYPE_REAL     shift, and go to state 24
    TOKEN_TYPE_BOOLEAN  shift, and go to state 25
    TOKEN_TYPE_LABEL    shift, and go to state 252

    $default  reduce using rule 152 (specificationPart)

    type       go to state 253
    specifier  go to state 265


state 258

  119 forStatement: TOKEN_FOR variable TOKEN_ASSIGN arithmeticExpression TOKEN_STEP arithmeticExpression TOKEN_UNTIL arithmeticExpression . TOKEN_DO statement

    TOKEN_DO  shift, and go to state 266


state 259

  138 formalParameterList: formalParameterList parameterDelimiter $@4 formalParameter .

    $default  reduce using rule 138 (formalParameterList)


state 260

  143 identifierList: identifierList TOKEN_COMMA . identifier

    TOKEN_IDENTIFIER  shift, and go to state 1

    identifier  go to state 267


state 261

  144 valuePart: TOKEN_VALUE identifierList TOKEN_SEMICOLON .

    $default  reduce using rule 144 (valuePart)


state 262

  150 specifier: type TOKEN_PROCEDURE .

    $default  reduce using rule 150 (specifier)


state 263

  147 specifier: type TOKEN_ARRAY .

    $default  reduce using rule 147 (specifier)


state 264

  143 identifierList: identifierList . TOKEN_COMMA identifier
  153 specificationIdentifierList: specifier identifierList . TOKEN_SEMICOLON

    TOKEN_COMMA      shift, and go to state 260
    TOKEN_SEMICOLON  shift, and go to state 268


state 265

  154 specificationIdentifierList: specificationIdentifierList specifier . identifierList TOKEN_SEMICOLON

    TOKEN_IDENTIFIER  shift, and go to state 1

    identifier      go to state 249
    identifierList  go to state 269


state 266

  119 forStatement: TOKEN_FOR variable TOKEN_ASSIGN arithmeticExpression TOKEN_STEP arithmeticExpression TOKEN_UNTIL arithmeticExpression TOKEN_DO . statement

    TOKEN_PRINT       shift, and go to state 33
    TOKEN_IDENTIFIER  shift, and go to state 1
    TOKEN_BEGIN       shift, and go to state 2
    TOKEN_INTEGER     shift, and go to state 3
    TOKEN_FOR         shift, and go to state 34
    TOKEN_IF          shift, and go to state 35
    TOKEN_RETURN      shift, and go to state 36

    $default  reduce using rule 120 (empty)

    blockHead                 go to state 4
    unlabelledBlock           go to state 5
    block                     go to state 37
    tlabel                    go to state 38
    label                     go to state 8
    unlabelledCompound        go to state 10
    compoundStatement         go to state 39
    arrayIdentifier           go to state 41
    integer                   go to state 12
    simpleVariable            go to state 42
    variable                  go to state 43
    subscriptedVariable       go to state 44
    identifier                go to state 45
    varIdentifier             go to state 46
    unconditionalStatement    go to state 47
    conditionalStatement      go to state 48
    ifStatement               go to state 49
    ifClause                  go to state 50
    basicStatement            go to state 51
    unlabelledBasicStatement  go to state 52
    dummyStatement            go to state 53
    returnStatement           go to state 54
    assignmentStatement       go to state 55
    forStatement              go to state 56
    empty                     go to state 57
    procedureStatement        go to state 58
    procedureIdentifier       go to state 59
    statement                 go to state 270


state 267

  143 identifierList: identifierList TOKEN_COMMA identifier .

    $default  reduce using rule 143 (identifierList)


state 268

  153 specificationIdentifierList: specifier identifierList TOKEN_SEMICOLON .

    $default  reduce using rule 153 (specificationIdentifierList)


state 269

  143 identifierList: identifierList . TOKEN_COMMA identifier
  154 specificationIdentifierList: specificationIdentifierList specifier identifierList . TOKEN_SEMICOLON

    TOKEN_COMMA      shift, and go to state 260
    TOKEN_SEMICOLON  shift, and go to state 271


state 270

  119 forStatement: TOKEN_FOR variable TOKEN_ASSIGN arithmeticExpression TOKEN_STEP arithmeticExpression TOKEN_UNTIL arithmeticExpression TOKEN_DO statement .

    $default  reduce using rule 119 (forStatement)


state 271

  154 specificationIdentifierList: specificationIdentifierList specifier identifierList TOKEN_SEMICOLON .

    $default  reduce using rule 154 (specificationIdentifierList)
