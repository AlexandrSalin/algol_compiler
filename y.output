Terminals unused in grammar

   TOKEN_OPERATOR
   TOKEN_OR
   TOKEN_UNDERSCORE
   TOKEN_SPECIFIER
   TOKEN_LIBRARY
   TOKEN_BRACKET
   TOKEN_CONTINUE
   TOKEN_LESS_EQUAL
   TOKEN_GREATER
   TOKEN_GREATER_EQUAL
   TOKEN_EQUAL
   TOKEN_LESS
   TOKEN_NOTEQUAL
   TOKEN_GOTO
   TOKEN_WHILE
   TOKEN_BOOLEAN
   TOKEN_TYPE_OWN
   TOKEN_TYPE_ARRAY
   TOKEN_TYPE_SWITCH
   TOKEN_TYPE_PROCEDURE
   TOKEN_TYPE_STRING
   TOKEN_TYPE_VALUE
   TOKEN_LTRSTRING
   TOKEN_ASSIGN_IDENTIFIER
   TOKEN_LABEL_IDENTIFIER
   TOKEN_BOOL_IDENTIFIER
   TOKEN_NOT_EQUAL
   TOKEN_RELOP


State 84 conflicts: 6 reduce/reduce


Grammar

    0 $accept: program $end

    1 $@1: /* empty */

    2 blockHead: TOKEN_BEGIN $@1 declaration
    3          | blockHead TOKEN_SEMICOLON declaration

    4 unlabelledBlock: blockHead TOKEN_SEMICOLON compoundTail

    5 block: unlabelledBlock
    6      | tlabel block

    7 tlabel: label TOKEN_COLON

    8 label: identifier
    9      | integer

   10 program: compoundStatement
   11        | block

   12 $@2: /* empty */

   13 unlabelledCompound: TOKEN_BEGIN $@2 compoundTail

   14 compoundStatement: unlabelledCompound
   15                  | tlabel compoundStatement

   16 compoundTail: statement TOKEN_END
   17             | statement TOKEN_SEMICOLON compoundTail

   18 declaration: typeDeclaration
   19            | arrayDeclaration
   20            | procedureDeclaration

   21 lowerBound: arithmeticExpression

   22 upperBound: arithmeticExpression

   23 boundPair: lowerBound TOKEN_COLON upperBound

   24 boundPairList: boundPair
   25              | boundPairList TOKEN_COMMA boundPair

   26 arrayIdentifier: identifier

   27 arraySegment: arrayIdentifier TOKEN_OPEN_SQUARE_BRACKET boundPairList TOKEN_CLOSE_SQUARE_BRACKET
   28             | arrayIdentifier TOKEN_COMMA arraySegment

   29 arrayList: arraySegment

   30 @3: /* empty */

   31 arrayList: arrayList TOKEN_COMMA @3 arraySegment

   32 arrayDeclaration: TOKEN_ARRAY arrayList
   33                 | type TOKEN_ARRAY arrayList

   34 expression: arithmeticExpression
   35           | booleanExpression

   36 arithmeticExpression: simpleArithmeticExpression
   37                     | ifClause simpleArithmeticExpression TOKEN_ELSE arithmeticExpression

   38 simpleArithmeticExpression: term
   39                           | TOKEN_PLUS term
   40                           | TOKEN_MINUS term
   41                           | simpleArithmeticExpression TOKEN_PLUS term
   42                           | simpleArithmeticExpression TOKEN_MINUS term

   43 term: factor
   44     | term TOKEN_MULTIPLY factor
   45     | term TOKEN_DIVIDE factor

   46 factor: primary
   47       | factor TOKEN_POWER primary

   48 primary: unsignedNumber
   49        | variable
   50        | TOKEN_OPEN_BRACKET arithmeticExpression TOKEN_CLOSE_BRACKET

   51 unsignedNumber: realNumber
   52               | integer

   53 realNumber: TOKEN_REAL_NUM

   54 integer: TOKEN_INTEGER

   55 simpleVariable: varIdentifier

   56 variable: simpleVariable
   57         | subscriptedVariable

   58 subscriptedVariable: arrayIdentifier TOKEN_OPEN_SQUARE_BRACKET subscriptList TOKEN_CLOSE_SQUARE_BRACKET

   59 subscriptList: subscriptExpression
   60              | subscriptList TOKEN_COMMA subscriptExpression

   61 subscriptExpression: arithmeticExpression

   62 identifier: TOKEN_IDENTIFIER

   63 booleanExpression: simpleBoolean

   64 simpleBoolean: implication
   65              | simpleBoolean TOKEN_EQUIV implication

   66 implication: booleanTerm
   67            | implication TOKEN_IMPLY booleanTerm

   68 booleanTerm: booleanFactor
   69            | booleanTerm TOKEN_OR_OP booleanFactor

   70 booleanFactor: booleanSecondary
   71              | booleanFactor TOKEN_AND_OP booleanSecondary

   72 booleanSecondary: booleanPrimary
   73                 | TOKEN_NOT_OP booleanPrimary

   74 booleanPrimary: logicalValue
   75               | boolVariable
   76               | relation
   77               | TOKEN_OPEN_BRACKET booleanExpression TOKEN_CLOSE_BRACKET

   78 logicalValue: TOKEN_LOGICAL_VALUE

   79 relation: simpleArithmeticExpression relationalOperator simpleArithmeticExpression

   80 boolVariable: variable

   81 relationalOperator: TOKEN_REL_OP

   82 listType: varIdentifier

   83 @4: /* empty */

   84 listType: listType TOKEN_COMMA @4 varIdentifier

   85 type: TOKEN_TYPE_REAL
   86     | TOKEN_TYPE_INTEGER
   87     | TOKEN_TYPE_BOOLEAN

   88 typeDeclaration: type listType

   89 varIdentifier: identifier

   90 unconditionalStatement: basicStatement
   91                       | compoundStatement
   92                       | block

   93 conditionalStatement: ifStatement
   94                     | ifClause unconditionalStatement TOKEN_ELSE statement
   95                     | ifClause forStatement
   96                     | tlabel conditionalStatement

   97 ifStatement: ifClause unconditionalStatement

   98 ifClause: TOKEN_IF booleanExpression TOKEN_THEN

   99 basicStatement: unlabelledBasicStatement
  100               | label basicStatement

  101 unlabelledBasicStatement: assignmentStatement
  102                         | dummyStatement

  103 @5: /* empty */

  104 unlabelledBasicStatement: procedureStatement @5 returnStatement

  105 dummyStatement: empty

  106 returnStatement: TOKEN_RETURN expression

  107 assignmentStatement: identifier TOKEN_ASSIGN arithmeticExpression
  108                    | identifier TOKEN_ASSIGN booleanExpression

  109 forStatement: TOKEN_FOR variable TOKEN_ASSIGN arithmeticExpression TOKEN_STEP arithmeticExpression TOKEN_UNTIL arithmeticExpression TOKEN_DO statement

  110 empty: /* empty */

  111 procedureStatement: procedureIdentifier actualParameterPart

  112 procedureIdentifier: identifier

  113 actualParameterPart: empty
  114                    | TOKEN_OPEN_BRACKET actualParameterList TOKEN_CLOSE_BRACKET

  115 actualParameterList: actualParameter
  116                    | actualParameterList parameterDelimiter actualParameter

  117 actualParameter: expression

  118 parameterDelimiter: TOKEN_COMMA
  119                   | TOKEN_CLOSE_SQUARE_BRACKET identifier TOKEN_COLON TOKEN_OPEN_SQUARE_BRACKET

  120 statement: unconditionalStatement
  121          | conditionalStatement
  122          | forStatement
  123          | TOKEN_PRINT expression

  124 formalParameter: identifier

  125 formalParameterList: formalParameter

  126 $@6: /* empty */

  127 formalParameterList: formalParameterList parameterDelimiter $@6 formalParameter

  128 formalParameterPart: empty

  129 $@7: /* empty */

  130 formalParameterPart: TOKEN_OPEN_BRACKET $@7 formalParameterList TOKEN_CLOSE_BRACKET

  131 identifierList: identifier
  132               | identifierList TOKEN_COMMA identifier

  133 valuePart: TOKEN_VALUE identifierList TOKEN_SEMICOLON
  134          | empty

  135 specifier: type
  136          | type TOKEN_ARRAY
  137          | TOKEN_TYPE_LABEL
  138          | TOKEN_SWITCH
  139          | type TOKEN_PROCEDURE

  140 specificationPart: empty
  141                  | specificationIdentifierList

  142 specificationIdentifierList: specifier identifierList TOKEN_SEMICOLON
  143                            | specificationIdentifierList specifier identifierList TOKEN_SEMICOLON

  144 @8: /* empty */

  145 $@9: /* empty */

  146 procedureHeading: procedureIdentifier @8 formalParameterPart TOKEN_SEMICOLON $@9 valuePart specificationPart

  147 procedureBody: statement

  148 procedureDeclaration: TOKEN_PROCEDURE procedureHeading procedureBody
  149                     | type TOKEN_PROCEDURE procedureHeading procedureBody


Terminals, with rules where they appear

$end (0) 0
error (256)
TOKEN_PRINT (258) 123
TOKEN_IDENTIFIER (259) 62
TOKEN_BEGIN (260) 2 13
TOKEN_END (261) 16
TOKEN_LOGICAL_VALUE (262) 78
TOKEN_OPERATOR (263)
TOKEN_OR (264)
TOKEN_PROCEDURE (265) 139 148 149
TOKEN_PLUS (266) 39 41
TOKEN_MINUS (267) 40 42
TOKEN_DIVIDE (268) 45
TOKEN_POWER (269) 47
TOKEN_MULTIPLY (270) 44
TOKEN_COMMA (271) 25 28 31 60 84 118 132
TOKEN_UNDERSCORE (272)
TOKEN_SPECIFIER (273)
TOKEN_LIBRARY (274)
TOKEN_BRACKET (275)
TOKEN_OPEN_BRACKET (276) 50 77 114 130
TOKEN_CLOSE_BRACKET (277) 50 77 114 130
TOKEN_OPEN_SQUARE_BRACKET (278) 27 58 119
TOKEN_CLOSE_SQUARE_BRACKET (279) 27 58 119
TOKEN_CONTINUE (280)
TOKEN_REAL_NUM (281) 53
TOKEN_INTEGER (282) 54
TOKEN_COLON (283) 7 23 119
TOKEN_REL_OP (284) 81
TOKEN_LESS_EQUAL (285)
TOKEN_GREATER (286)
TOKEN_GREATER_EQUAL (287)
TOKEN_EQUAL (288)
TOKEN_LESS (289)
TOKEN_NOTEQUAL (290)
TOKEN_EQUIV (291) 65
TOKEN_AND_OP (292) 71
TOKEN_OR_OP (293) 69
TOKEN_NOT_OP (294) 73
TOKEN_GOTO (295)
TOKEN_FOR (296) 109
TOKEN_DO (297) 109
TOKEN_WHILE (298)
TOKEN_STEP (299) 109
TOKEN_UNTIL (300) 109
TOKEN_IF (301) 98
TOKEN_THEN (302) 98
TOKEN_ELSE (303) 37 94
TOKEN_SWITCH (304) 138
TOKEN_VALUE (305) 133
TOKEN_BOOLEAN (306)
TOKEN_TYPE_OWN (307)
TOKEN_TYPE_INTEGER (308) 86
TOKEN_TYPE_REAL (309) 85
TOKEN_TYPE_BOOLEAN (310) 87
TOKEN_TYPE_ARRAY (311)
TOKEN_TYPE_SWITCH (312)
TOKEN_TYPE_PROCEDURE (313)
TOKEN_TYPE_STRING (314)
TOKEN_TYPE_LABEL (315) 137
TOKEN_TYPE_VALUE (316)
TOKEN_ARRAY (317) 32 33 136
TOKEN_IMPLY (318) 67
TOKEN_SEMICOLON (319) 3 4 17 133 142 143 146
TOKEN_LTRSTRING (320)
TOKEN_RETURN (321) 106
TOKEN_ASSIGN_IDENTIFIER (322)
TOKEN_LABEL_IDENTIFIER (323)
TOKEN_BOOL_IDENTIFIER (324)
TOKEN_ASSIGN (325) 107 108 109
TOKEN_NOT_EQUAL (326)
TOKEN_RELOP (327)


Nonterminals, with rules where they appear

$accept (73)
    on left: 0
blockHead (74)
    on left: 2 3, on right: 3 4
$@1 (75)
    on left: 1, on right: 2
unlabelledBlock (76)
    on left: 4, on right: 5
block (77)
    on left: 5 6, on right: 6 11 92
tlabel (78)
    on left: 7, on right: 6 15 96
label (79)
    on left: 8 9, on right: 7 100
program (80)
    on left: 10 11, on right: 0
unlabelledCompound (81)
    on left: 13, on right: 14
$@2 (82)
    on left: 12, on right: 13
compoundStatement (83)
    on left: 14 15, on right: 10 15 91
compoundTail (84)
    on left: 16 17, on right: 4 13 17
declaration (85)
    on left: 18 19 20, on right: 2 3
lowerBound (86)
    on left: 21, on right: 23
upperBound (87)
    on left: 22, on right: 23
boundPair (88)
    on left: 23, on right: 24 25
boundPairList (89)
    on left: 24 25, on right: 25 27
arrayIdentifier (90)
    on left: 26, on right: 27 28 58
arraySegment (91)
    on left: 27 28, on right: 28 29 31
arrayList (92)
    on left: 29 31, on right: 31 32 33
@3 (93)
    on left: 30, on right: 31
arrayDeclaration (94)
    on left: 32 33, on right: 19
expression (95)
    on left: 34 35, on right: 106 117 123
arithmeticExpression (96)
    on left: 36 37, on right: 21 22 34 37 50 61 107 109
simpleArithmeticExpression (97)
    on left: 38 39 40 41 42, on right: 36 37 41 42 79
term (98)
    on left: 43 44 45, on right: 38 39 40 41 42 44 45
factor (99)
    on left: 46 47, on right: 43 44 45 47
primary (100)
    on left: 48 49 50, on right: 46 47
unsignedNumber (101)
    on left: 51 52, on right: 48
realNumber (102)
    on left: 53, on right: 51
integer (103)
    on left: 54, on right: 9 52
simpleVariable (104)
    on left: 55, on right: 56
variable (105)
    on left: 56 57, on right: 49 80 109
subscriptedVariable (106)
    on left: 58, on right: 57
subscriptList (107)
    on left: 59 60, on right: 58 60
subscriptExpression (108)
    on left: 61, on right: 59 60
identifier (109)
    on left: 62, on right: 8 26 89 107 108 112 119 124 131 132
booleanExpression (110)
    on left: 63, on right: 35 77 98 108
simpleBoolean (111)
    on left: 64 65, on right: 63 65
implication (112)
    on left: 66 67, on right: 64 65 67
booleanTerm (113)
    on left: 68 69, on right: 66 67 69
booleanFactor (114)
    on left: 70 71, on right: 68 69 71
booleanSecondary (115)
    on left: 72 73, on right: 70 71
booleanPrimary (116)
    on left: 74 75 76 77, on right: 72 73
logicalValue (117)
    on left: 78, on right: 74
relation (118)
    on left: 79, on right: 76
boolVariable (119)
    on left: 80, on right: 75
relationalOperator (120)
    on left: 81, on right: 79
listType (121)
    on left: 82 84, on right: 84 88
@4 (122)
    on left: 83, on right: 84
type (123)
    on left: 85 86 87, on right: 33 88 135 136 139 149
typeDeclaration (124)
    on left: 88, on right: 18
varIdentifier (125)
    on left: 89, on right: 55 82 84
unconditionalStatement (126)
    on left: 90 91 92, on right: 94 97 120
conditionalStatement (127)
    on left: 93 94 95 96, on right: 96 121
ifStatement (128)
    on left: 97, on right: 93
ifClause (129)
    on left: 98, on right: 37 94 95 97
basicStatement (130)
    on left: 99 100, on right: 90 100
unlabelledBasicStatement (131)
    on left: 101 102 104, on right: 99
@5 (132)
    on left: 103, on right: 104
dummyStatement (133)
    on left: 105, on right: 102
returnStatement (134)
    on left: 106, on right: 104
assignmentStatement (135)
    on left: 107 108, on right: 101
forStatement (136)
    on left: 109, on right: 95 122
empty (137)
    on left: 110, on right: 105 113 128 134 140
procedureStatement (138)
    on left: 111, on right: 104
procedureIdentifier (139)
    on left: 112, on right: 111 146
actualParameterPart (140)
    on left: 113 114, on right: 111
actualParameterList (141)
    on left: 115 116, on right: 114 116
actualParameter (142)
    on left: 117, on right: 115 116
parameterDelimiter (143)
    on left: 118 119, on right: 116 127
statement (144)
    on left: 120 121 122 123, on right: 16 17 94 109 147
formalParameter (145)
    on left: 124, on right: 125 127
formalParameterList (146)
    on left: 125 127, on right: 127 130
$@6 (147)
    on left: 126, on right: 127
formalParameterPart (148)
    on left: 128 130, on right: 146
$@7 (149)
    on left: 129, on right: 130
identifierList (150)
    on left: 131 132, on right: 132 133 142 143
valuePart (151)
    on left: 133 134, on right: 146
specifier (152)
    on left: 135 136 137 138 139, on right: 142 143
specificationPart (153)
    on left: 140 141, on right: 146
specificationIdentifierList (154)
    on left: 142 143, on right: 141 143
procedureHeading (155)
    on left: 146, on right: 148 149
@8 (156)
    on left: 144, on right: 146
$@9 (157)
    on left: 145, on right: 146
procedureBody (158)
    on left: 147, on right: 148 149
procedureDeclaration (159)
    on left: 148 149, on right: 20


state 0

    0 $accept: . program $end

    TOKEN_IDENTIFIER  shift, and go to state 1
    TOKEN_BEGIN       shift, and go to state 2
    TOKEN_INTEGER     shift, and go to state 3

    blockHead           go to state 4
    unlabelledBlock     go to state 5
    block               go to state 6
    tlabel              go to state 7
    label               go to state 8
    program             go to state 9
    unlabelledCompound  go to state 10
    compoundStatement   go to state 11
    integer             go to state 12
    identifier          go to state 13


state 1

   62 identifier: TOKEN_IDENTIFIER .

    $default  reduce using rule 62 (identifier)


state 2

    2 blockHead: TOKEN_BEGIN . $@1 declaration
   13 unlabelledCompound: TOKEN_BEGIN . $@2 compoundTail

    TOKEN_PROCEDURE     reduce using rule 1 ($@1)
    TOKEN_TYPE_INTEGER  reduce using rule 1 ($@1)
    TOKEN_TYPE_REAL     reduce using rule 1 ($@1)
    TOKEN_TYPE_BOOLEAN  reduce using rule 1 ($@1)
    TOKEN_ARRAY         reduce using rule 1 ($@1)
    $default            reduce using rule 12 ($@2)

    $@1  go to state 14
    $@2  go to state 15


state 3

   54 integer: TOKEN_INTEGER .

    $default  reduce using rule 54 (integer)


state 4

    3 blockHead: blockHead . TOKEN_SEMICOLON declaration
    4 unlabelledBlock: blockHead . TOKEN_SEMICOLON compoundTail

    TOKEN_SEMICOLON  shift, and go to state 16


state 5

    5 block: unlabelledBlock .

    $default  reduce using rule 5 (block)


state 6

   11 program: block .

    $default  reduce using rule 11 (program)


state 7

    6 block: tlabel . block
   15 compoundStatement: tlabel . compoundStatement

    TOKEN_IDENTIFIER  shift, and go to state 1
    TOKEN_BEGIN       shift, and go to state 2
    TOKEN_INTEGER     shift, and go to state 3

    blockHead           go to state 4
    unlabelledBlock     go to state 5
    block               go to state 17
    tlabel              go to state 7
    label               go to state 8
    unlabelledCompound  go to state 10
    compoundStatement   go to state 18
    integer             go to state 12
    identifier          go to state 13


state 8

    7 tlabel: label . TOKEN_COLON

    TOKEN_COLON  shift, and go to state 19


state 9

    0 $accept: program . $end

    $end  shift, and go to state 20


state 10

   14 compoundStatement: unlabelledCompound .

    $default  reduce using rule 14 (compoundStatement)


state 11

   10 program: compoundStatement .

    $default  reduce using rule 10 (program)


state 12

    9 label: integer .

    $default  reduce using rule 9 (label)


state 13

    8 label: identifier .

    $default  reduce using rule 8 (label)


state 14

    2 blockHead: TOKEN_BEGIN $@1 . declaration

    TOKEN_PROCEDURE     shift, and go to state 21
    TOKEN_TYPE_INTEGER  shift, and go to state 22
    TOKEN_TYPE_REAL     shift, and go to state 23
    TOKEN_TYPE_BOOLEAN  shift, and go to state 24
    TOKEN_ARRAY         shift, and go to state 25

    declaration           go to state 26
    arrayDeclaration      go to state 27
    type                  go to state 28
    typeDeclaration       go to state 29
    procedureDeclaration  go to state 30


state 15

   13 unlabelledCompound: TOKEN_BEGIN $@2 . compoundTail

    TOKEN_PRINT       shift, and go to state 31
    TOKEN_IDENTIFIER  shift, and go to state 1
    TOKEN_BEGIN       shift, and go to state 2
    TOKEN_INTEGER     shift, and go to state 3
    TOKEN_FOR         shift, and go to state 32
    TOKEN_IF          shift, and go to state 33

    $default  reduce using rule 110 (empty)

    blockHead                 go to state 4
    unlabelledBlock           go to state 5
    block                     go to state 34
    tlabel                    go to state 35
    label                     go to state 36
    unlabelledCompound        go to state 10
    compoundStatement         go to state 37
    compoundTail              go to state 38
    integer                   go to state 12
    identifier                go to state 39
    unconditionalStatement    go to state 40
    conditionalStatement      go to state 41
    ifStatement               go to state 42
    ifClause                  go to state 43
    basicStatement            go to state 44
    unlabelledBasicStatement  go to state 45
    dummyStatement            go to state 46
    assignmentStatement       go to state 47
    forStatement              go to state 48
    empty                     go to state 49
    procedureStatement        go to state 50
    procedureIdentifier       go to state 51
    statement                 go to state 52


state 16

    3 blockHead: blockHead TOKEN_SEMICOLON . declaration
    4 unlabelledBlock: blockHead TOKEN_SEMICOLON . compoundTail

    TOKEN_PRINT         shift, and go to state 31
    TOKEN_IDENTIFIER    shift, and go to state 1
    TOKEN_BEGIN         shift, and go to state 2
    TOKEN_PROCEDURE     shift, and go to state 21
    TOKEN_INTEGER       shift, and go to state 3
    TOKEN_FOR           shift, and go to state 32
    TOKEN_IF            shift, and go to state 33
    TOKEN_TYPE_INTEGER  shift, and go to state 22
    TOKEN_TYPE_REAL     shift, and go to state 23
    TOKEN_TYPE_BOOLEAN  shift, and go to state 24
    TOKEN_ARRAY         shift, and go to state 25

    $default  reduce using rule 110 (empty)

    blockHead                 go to state 4
    unlabelledBlock           go to state 5
    block                     go to state 34
    tlabel                    go to state 35
    label                     go to state 36
    unlabelledCompound        go to state 10
    compoundStatement         go to state 37
    compoundTail              go to state 53
    declaration               go to state 54
    arrayDeclaration          go to state 27
    integer                   go to state 12
    identifier                go to state 39
    type                      go to state 28
    typeDeclaration           go to state 29
    unconditionalStatement    go to state 40
    conditionalStatement      go to state 41
    ifStatement               go to state 42
    ifClause                  go to state 43
    basicStatement            go to state 44
    unlabelledBasicStatement  go to state 45
    dummyStatement            go to state 46
    assignmentStatement       go to state 47
    forStatement              go to state 48
    empty                     go to state 49
    procedureStatement        go to state 50
    procedureIdentifier       go to state 51
    statement                 go to state 52
    procedureDeclaration      go to state 30


state 17

    6 block: tlabel block .

    $default  reduce using rule 6 (block)


state 18

   15 compoundStatement: tlabel compoundStatement .

    $default  reduce using rule 15 (compoundStatement)


state 19

    7 tlabel: label TOKEN_COLON .

    $default  reduce using rule 7 (tlabel)


state 20

    0 $accept: program $end .

    $default  accept


state 21

  148 procedureDeclaration: TOKEN_PROCEDURE . procedureHeading procedureBody

    TOKEN_IDENTIFIER  shift, and go to state 1

    identifier           go to state 55
    procedureIdentifier  go to state 56
    procedureHeading     go to state 57


state 22

   86 type: TOKEN_TYPE_INTEGER .

    $default  reduce using rule 86 (type)


state 23

   85 type: TOKEN_TYPE_REAL .

    $default  reduce using rule 85 (type)


state 24

   87 type: TOKEN_TYPE_BOOLEAN .

    $default  reduce using rule 87 (type)


state 25

   32 arrayDeclaration: TOKEN_ARRAY . arrayList

    TOKEN_IDENTIFIER  shift, and go to state 1

    arrayIdentifier  go to state 58
    arraySegment     go to state 59
    arrayList        go to state 60
    identifier       go to state 61


state 26

    2 blockHead: TOKEN_BEGIN $@1 declaration .

    $default  reduce using rule 2 (blockHead)


state 27

   19 declaration: arrayDeclaration .

    $default  reduce using rule 19 (declaration)


state 28

   33 arrayDeclaration: type . TOKEN_ARRAY arrayList
   88 typeDeclaration: type . listType
  149 procedureDeclaration: type . TOKEN_PROCEDURE procedureHeading procedureBody

    TOKEN_IDENTIFIER  shift, and go to state 1
    TOKEN_PROCEDURE   shift, and go to state 62
    TOKEN_ARRAY       shift, and go to state 63

    identifier     go to state 64
    listType       go to state 65
    varIdentifier  go to state 66


state 29

   18 declaration: typeDeclaration .

    $default  reduce using rule 18 (declaration)


state 30

   20 declaration: procedureDeclaration .

    $default  reduce using rule 20 (declaration)


state 31

  123 statement: TOKEN_PRINT . expression

    TOKEN_IDENTIFIER     shift, and go to state 1
    TOKEN_LOGICAL_VALUE  shift, and go to state 67
    TOKEN_PLUS           shift, and go to state 68
    TOKEN_MINUS          shift, and go to state 69
    TOKEN_OPEN_BRACKET   shift, and go to state 70
    TOKEN_REAL_NUM       shift, and go to state 71
    TOKEN_INTEGER        shift, and go to state 3
    TOKEN_NOT_OP         shift, and go to state 72
    TOKEN_IF             shift, and go to state 33

    arrayIdentifier             go to state 73
    expression                  go to state 74
    arithmeticExpression        go to state 75
    simpleArithmeticExpression  go to state 76
    term                        go to state 77
    factor                      go to state 78
    primary                     go to state 79
    unsignedNumber              go to state 80
    realNumber                  go to state 81
    integer                     go to state 82
    simpleVariable              go to state 83
    variable                    go to state 84
    subscriptedVariable         go to state 85
    identifier                  go to state 86
    booleanExpression           go to state 87
    simpleBoolean               go to state 88
    implication                 go to state 89
    booleanTerm                 go to state 90
    booleanFactor               go to state 91
    booleanSecondary            go to state 92
    booleanPrimary              go to state 93
    logicalValue                go to state 94
    relation                    go to state 95
    boolVariable                go to state 96
    varIdentifier               go to state 97
    ifClause                    go to state 98


state 32

  109 forStatement: TOKEN_FOR . variable TOKEN_ASSIGN arithmeticExpression TOKEN_STEP arithmeticExpression TOKEN_UNTIL arithmeticExpression TOKEN_DO statement

    TOKEN_IDENTIFIER  shift, and go to state 1

    arrayIdentifier      go to state 73
    simpleVariable       go to state 83
    variable             go to state 99
    subscriptedVariable  go to state 85
    identifier           go to state 86
    varIdentifier        go to state 97


state 33

   98 ifClause: TOKEN_IF . booleanExpression TOKEN_THEN

    TOKEN_IDENTIFIER     shift, and go to state 1
    TOKEN_LOGICAL_VALUE  shift, and go to state 67
    TOKEN_PLUS           shift, and go to state 68
    TOKEN_MINUS          shift, and go to state 69
    TOKEN_OPEN_BRACKET   shift, and go to state 70
    TOKEN_REAL_NUM       shift, and go to state 71
    TOKEN_INTEGER        shift, and go to state 3
    TOKEN_NOT_OP         shift, and go to state 72

    arrayIdentifier             go to state 73
    simpleArithmeticExpression  go to state 100
    term                        go to state 77
    factor                      go to state 78
    primary                     go to state 79
    unsignedNumber              go to state 80
    realNumber                  go to state 81
    integer                     go to state 82
    simpleVariable              go to state 83
    variable                    go to state 84
    subscriptedVariable         go to state 85
    identifier                  go to state 86
    booleanExpression           go to state 101
    simpleBoolean               go to state 88
    implication                 go to state 89
    booleanTerm                 go to state 90
    booleanFactor               go to state 91
    booleanSecondary            go to state 92
    booleanPrimary              go to state 93
    logicalValue                go to state 94
    relation                    go to state 95
    boolVariable                go to state 96
    varIdentifier               go to state 97


state 34

   92 unconditionalStatement: block .

    $default  reduce using rule 92 (unconditionalStatement)


state 35

    6 block: tlabel . block
   15 compoundStatement: tlabel . compoundStatement
   96 conditionalStatement: tlabel . conditionalStatement

    TOKEN_IDENTIFIER  shift, and go to state 1
    TOKEN_BEGIN       shift, and go to state 2
    TOKEN_INTEGER     shift, and go to state 3
    TOKEN_IF          shift, and go to state 33

    blockHead             go to state 4
    unlabelledBlock       go to state 5
    block                 go to state 17
    tlabel                go to state 35
    label                 go to state 8
    unlabelledCompound    go to state 10
    compoundStatement     go to state 18
    integer               go to state 12
    identifier            go to state 13
    conditionalStatement  go to state 102
    ifStatement           go to state 42
    ifClause              go to state 43


state 36

    7 tlabel: label . TOKEN_COLON
  100 basicStatement: label . basicStatement

    TOKEN_IDENTIFIER  shift, and go to state 1
    TOKEN_INTEGER     shift, and go to state 3
    TOKEN_COLON       shift, and go to state 19

    $default  reduce using rule 110 (empty)

    label                     go to state 103
    integer                   go to state 12
    identifier                go to state 39
    basicStatement            go to state 104
    unlabelledBasicStatement  go to state 45
    dummyStatement            go to state 46
    assignmentStatement       go to state 47
    empty                     go to state 49
    procedureStatement        go to state 50
    procedureIdentifier       go to state 51


state 37

   91 unconditionalStatement: compoundStatement .

    $default  reduce using rule 91 (unconditionalStatement)


state 38

   13 unlabelledCompound: TOKEN_BEGIN $@2 compoundTail .

    $default  reduce using rule 13 (unlabelledCompound)


state 39

    8 label: identifier .
  107 assignmentStatement: identifier . TOKEN_ASSIGN arithmeticExpression
  108                    | identifier . TOKEN_ASSIGN booleanExpression
  112 procedureIdentifier: identifier .

    TOKEN_ASSIGN  shift, and go to state 105

    TOKEN_OPEN_BRACKET  reduce using rule 112 (procedureIdentifier)
    TOKEN_RETURN        reduce using rule 112 (procedureIdentifier)
    $default            reduce using rule 8 (label)


state 40

  120 statement: unconditionalStatement .

    $default  reduce using rule 120 (statement)


state 41

  121 statement: conditionalStatement .

    $default  reduce using rule 121 (statement)


state 42

   93 conditionalStatement: ifStatement .

    $default  reduce using rule 93 (conditionalStatement)


state 43

   94 conditionalStatement: ifClause . unconditionalStatement TOKEN_ELSE statement
   95                     | ifClause . forStatement
   97 ifStatement: ifClause . unconditionalStatement

    TOKEN_IDENTIFIER  shift, and go to state 1
    TOKEN_BEGIN       shift, and go to state 2
    TOKEN_INTEGER     shift, and go to state 3
    TOKEN_FOR         shift, and go to state 32

    $default  reduce using rule 110 (empty)

    blockHead                 go to state 4
    unlabelledBlock           go to state 5
    block                     go to state 34
    tlabel                    go to state 7
    label                     go to state 36
    unlabelledCompound        go to state 10
    compoundStatement         go to state 37
    integer                   go to state 12
    identifier                go to state 39
    unconditionalStatement    go to state 106
    basicStatement            go to state 44
    unlabelledBasicStatement  go to state 45
    dummyStatement            go to state 46
    assignmentStatement       go to state 47
    forStatement              go to state 107
    empty                     go to state 49
    procedureStatement        go to state 50
    procedureIdentifier       go to state 51


state 44

   90 unconditionalStatement: basicStatement .

    $default  reduce using rule 90 (unconditionalStatement)


state 45

   99 basicStatement: unlabelledBasicStatement .

    $default  reduce using rule 99 (basicStatement)


state 46

  102 unlabelledBasicStatement: dummyStatement .

    $default  reduce using rule 102 (unlabelledBasicStatement)


state 47

  101 unlabelledBasicStatement: assignmentStatement .

    $default  reduce using rule 101 (unlabelledBasicStatement)


state 48

  122 statement: forStatement .

    $default  reduce using rule 122 (statement)


state 49

  105 dummyStatement: empty .

    $default  reduce using rule 105 (dummyStatement)


state 50

  104 unlabelledBasicStatement: procedureStatement . @5 returnStatement

    $default  reduce using rule 103 (@5)

    @5  go to state 108


state 51

  111 procedureStatement: procedureIdentifier . actualParameterPart

    TOKEN_OPEN_BRACKET  shift, and go to state 109

    $default  reduce using rule 110 (empty)

    empty                go to state 110
    actualParameterPart  go to state 111


state 52

   16 compoundTail: statement . TOKEN_END
   17             | statement . TOKEN_SEMICOLON compoundTail

    TOKEN_END        shift, and go to state 112
    TOKEN_SEMICOLON  shift, and go to state 113


state 53

    4 unlabelledBlock: blockHead TOKEN_SEMICOLON compoundTail .

    $default  reduce using rule 4 (unlabelledBlock)


state 54

    3 blockHead: blockHead TOKEN_SEMICOLON declaration .

    $default  reduce using rule 3 (blockHead)


state 55

  112 procedureIdentifier: identifier .

    $default  reduce using rule 112 (procedureIdentifier)


state 56

  146 procedureHeading: procedureIdentifier . @8 formalParameterPart TOKEN_SEMICOLON $@9 valuePart specificationPart

    $default  reduce using rule 144 (@8)

    @8  go to state 114


state 57

  148 procedureDeclaration: TOKEN_PROCEDURE procedureHeading . procedureBody

    TOKEN_PRINT       shift, and go to state 31
    TOKEN_IDENTIFIER  shift, and go to state 1
    TOKEN_BEGIN       shift, and go to state 2
    TOKEN_INTEGER     shift, and go to state 3
    TOKEN_FOR         shift, and go to state 32
    TOKEN_IF          shift, and go to state 33

    $default  reduce using rule 110 (empty)

    blockHead                 go to state 4
    unlabelledBlock           go to state 5
    block                     go to state 34
    tlabel                    go to state 35
    label                     go to state 36
    unlabelledCompound        go to state 10
    compoundStatement         go to state 37
    integer                   go to state 12
    identifier                go to state 39
    unconditionalStatement    go to state 40
    conditionalStatement      go to state 41
    ifStatement               go to state 42
    ifClause                  go to state 43
    basicStatement            go to state 44
    unlabelledBasicStatement  go to state 45
    dummyStatement            go to state 46
    assignmentStatement       go to state 47
    forStatement              go to state 48
    empty                     go to state 49
    procedureStatement        go to state 50
    procedureIdentifier       go to state 51
    statement                 go to state 115
    procedureBody             go to state 116


state 58

   27 arraySegment: arrayIdentifier . TOKEN_OPEN_SQUARE_BRACKET boundPairList TOKEN_CLOSE_SQUARE_BRACKET
   28             | arrayIdentifier . TOKEN_COMMA arraySegment

    TOKEN_COMMA                shift, and go to state 117
    TOKEN_OPEN_SQUARE_BRACKET  shift, and go to state 118


state 59

   29 arrayList: arraySegment .

    $default  reduce using rule 29 (arrayList)


state 60

   31 arrayList: arrayList . TOKEN_COMMA @3 arraySegment
   32 arrayDeclaration: TOKEN_ARRAY arrayList .

    TOKEN_COMMA  shift, and go to state 119

    $default  reduce using rule 32 (arrayDeclaration)


state 61

   26 arrayIdentifier: identifier .

    $default  reduce using rule 26 (arrayIdentifier)


state 62

  149 procedureDeclaration: type TOKEN_PROCEDURE . procedureHeading procedureBody

    TOKEN_IDENTIFIER  shift, and go to state 1

    identifier           go to state 55
    procedureIdentifier  go to state 56
    procedureHeading     go to state 120


state 63

   33 arrayDeclaration: type TOKEN_ARRAY . arrayList

    TOKEN_IDENTIFIER  shift, and go to state 1

    arrayIdentifier  go to state 58
    arraySegment     go to state 59
    arrayList        go to state 121
    identifier       go to state 61


state 64

   89 varIdentifier: identifier .

    $default  reduce using rule 89 (varIdentifier)


state 65

   84 listType: listType . TOKEN_COMMA @4 varIdentifier
   88 typeDeclaration: type listType .

    TOKEN_COMMA  shift, and go to state 122

    $default  reduce using rule 88 (typeDeclaration)


state 66

   82 listType: varIdentifier .

    $default  reduce using rule 82 (listType)


state 67

   78 logicalValue: TOKEN_LOGICAL_VALUE .

    $default  reduce using rule 78 (logicalValue)


state 68

   39 simpleArithmeticExpression: TOKEN_PLUS . term

    TOKEN_IDENTIFIER    shift, and go to state 1
    TOKEN_OPEN_BRACKET  shift, and go to state 123
    TOKEN_REAL_NUM      shift, and go to state 71
    TOKEN_INTEGER       shift, and go to state 3

    arrayIdentifier      go to state 73
    term                 go to state 124
    factor               go to state 78
    primary              go to state 79
    unsignedNumber       go to state 80
    realNumber           go to state 81
    integer              go to state 82
    simpleVariable       go to state 83
    variable             go to state 125
    subscriptedVariable  go to state 85
    identifier           go to state 86
    varIdentifier        go to state 97


state 69

   40 simpleArithmeticExpression: TOKEN_MINUS . term

    TOKEN_IDENTIFIER    shift, and go to state 1
    TOKEN_OPEN_BRACKET  shift, and go to state 123
    TOKEN_REAL_NUM      shift, and go to state 71
    TOKEN_INTEGER       shift, and go to state 3

    arrayIdentifier      go to state 73
    term                 go to state 126
    factor               go to state 78
    primary              go to state 79
    unsignedNumber       go to state 80
    realNumber           go to state 81
    integer              go to state 82
    simpleVariable       go to state 83
    variable             go to state 125
    subscriptedVariable  go to state 85
    identifier           go to state 86
    varIdentifier        go to state 97


state 70

   50 primary: TOKEN_OPEN_BRACKET . arithmeticExpression TOKEN_CLOSE_BRACKET
   77 booleanPrimary: TOKEN_OPEN_BRACKET . booleanExpression TOKEN_CLOSE_BRACKET

    TOKEN_IDENTIFIER     shift, and go to state 1
    TOKEN_LOGICAL_VALUE  shift, and go to state 67
    TOKEN_PLUS           shift, and go to state 68
    TOKEN_MINUS          shift, and go to state 69
    TOKEN_OPEN_BRACKET   shift, and go to state 70
    TOKEN_REAL_NUM       shift, and go to state 71
    TOKEN_INTEGER        shift, and go to state 3
    TOKEN_NOT_OP         shift, and go to state 72
    TOKEN_IF             shift, and go to state 33

    arrayIdentifier             go to state 73
    arithmeticExpression        go to state 127
    simpleArithmeticExpression  go to state 76
    term                        go to state 77
    factor                      go to state 78
    primary                     go to state 79
    unsignedNumber              go to state 80
    realNumber                  go to state 81
    integer                     go to state 82
    simpleVariable              go to state 83
    variable                    go to state 84
    subscriptedVariable         go to state 85
    identifier                  go to state 86
    booleanExpression           go to state 128
    simpleBoolean               go to state 88
    implication                 go to state 89
    booleanTerm                 go to state 90
    booleanFactor               go to state 91
    booleanSecondary            go to state 92
    booleanPrimary              go to state 93
    logicalValue                go to state 94
    relation                    go to state 95
    boolVariable                go to state 96
    varIdentifier               go to state 97
    ifClause                    go to state 98


state 71

   53 realNumber: TOKEN_REAL_NUM .

    $default  reduce using rule 53 (realNumber)


state 72

   73 booleanSecondary: TOKEN_NOT_OP . booleanPrimary

    TOKEN_IDENTIFIER     shift, and go to state 1
    TOKEN_LOGICAL_VALUE  shift, and go to state 67
    TOKEN_PLUS           shift, and go to state 68
    TOKEN_MINUS          shift, and go to state 69
    TOKEN_OPEN_BRACKET   shift, and go to state 70
    TOKEN_REAL_NUM       shift, and go to state 71
    TOKEN_INTEGER        shift, and go to state 3

    arrayIdentifier             go to state 73
    simpleArithmeticExpression  go to state 100
    term                        go to state 77
    factor                      go to state 78
    primary                     go to state 79
    unsignedNumber              go to state 80
    realNumber                  go to state 81
    integer                     go to state 82
    simpleVariable              go to state 83
    variable                    go to state 84
    subscriptedVariable         go to state 85
    identifier                  go to state 86
    booleanPrimary              go to state 129
    logicalValue                go to state 94
    relation                    go to state 95
    boolVariable                go to state 96
    varIdentifier               go to state 97


state 73

   58 subscriptedVariable: arrayIdentifier . TOKEN_OPEN_SQUARE_BRACKET subscriptList TOKEN_CLOSE_SQUARE_BRACKET

    TOKEN_OPEN_SQUARE_BRACKET  shift, and go to state 130


state 74

  123 statement: TOKEN_PRINT expression .

    $default  reduce using rule 123 (statement)


state 75

   34 expression: arithmeticExpression .

    $default  reduce using rule 34 (expression)


state 76

   36 arithmeticExpression: simpleArithmeticExpression .
   41 simpleArithmeticExpression: simpleArithmeticExpression . TOKEN_PLUS term
   42                           | simpleArithmeticExpression . TOKEN_MINUS term
   79 relation: simpleArithmeticExpression . relationalOperator simpleArithmeticExpression

    TOKEN_PLUS    shift, and go to state 131
    TOKEN_MINUS   shift, and go to state 132
    TOKEN_REL_OP  shift, and go to state 133

    $default  reduce using rule 36 (arithmeticExpression)

    relationalOperator  go to state 134


state 77

   38 simpleArithmeticExpression: term .
   44 term: term . TOKEN_MULTIPLY factor
   45     | term . TOKEN_DIVIDE factor

    TOKEN_DIVIDE    shift, and go to state 135
    TOKEN_MULTIPLY  shift, and go to state 136

    $default  reduce using rule 38 (simpleArithmeticExpression)


state 78

   43 term: factor .
   47 factor: factor . TOKEN_POWER primary

    TOKEN_POWER  shift, and go to state 137

    $default  reduce using rule 43 (term)


state 79

   46 factor: primary .

    $default  reduce using rule 46 (factor)


state 80

   48 primary: unsignedNumber .

    $default  reduce using rule 48 (primary)


state 81

   51 unsignedNumber: realNumber .

    $default  reduce using rule 51 (unsignedNumber)


state 82

   52 unsignedNumber: integer .

    $default  reduce using rule 52 (unsignedNumber)


state 83

   56 variable: simpleVariable .

    $default  reduce using rule 56 (variable)


state 84

   49 primary: variable .
   80 boolVariable: variable .

    TOKEN_END                   reduce using rule 49 (primary)
    TOKEN_END                   [reduce using rule 80 (boolVariable)]
    TOKEN_COMMA                 reduce using rule 49 (primary)
    TOKEN_COMMA                 [reduce using rule 80 (boolVariable)]
    TOKEN_CLOSE_BRACKET         reduce using rule 49 (primary)
    TOKEN_CLOSE_BRACKET         [reduce using rule 80 (boolVariable)]
    TOKEN_CLOSE_SQUARE_BRACKET  reduce using rule 49 (primary)
    TOKEN_CLOSE_SQUARE_BRACKET  [reduce using rule 80 (boolVariable)]
    TOKEN_EQUIV                 reduce using rule 80 (boolVariable)
    TOKEN_AND_OP                reduce using rule 80 (boolVariable)
    TOKEN_OR_OP                 reduce using rule 80 (boolVariable)
    TOKEN_THEN                  reduce using rule 80 (boolVariable)
    TOKEN_ELSE                  reduce using rule 49 (primary)
    TOKEN_ELSE                  [reduce using rule 80 (boolVariable)]
    TOKEN_IMPLY                 reduce using rule 80 (boolVariable)
    TOKEN_SEMICOLON             reduce using rule 49 (primary)
    TOKEN_SEMICOLON             [reduce using rule 80 (boolVariable)]
    $default                    reduce using rule 49 (primary)


state 85

   57 variable: subscriptedVariable .

    $default  reduce using rule 57 (variable)


state 86

   26 arrayIdentifier: identifier .
   89 varIdentifier: identifier .

    TOKEN_OPEN_SQUARE_BRACKET  reduce using rule 26 (arrayIdentifier)
    $default                   reduce using rule 89 (varIdentifier)


state 87

   35 expression: booleanExpression .

    $default  reduce using rule 35 (expression)


state 88

   63 booleanExpression: simpleBoolean .
   65 simpleBoolean: simpleBoolean . TOKEN_EQUIV implication

    TOKEN_EQUIV  shift, and go to state 138

    $default  reduce using rule 63 (booleanExpression)


state 89

   64 simpleBoolean: implication .
   67 implication: implication . TOKEN_IMPLY booleanTerm

    TOKEN_IMPLY  shift, and go to state 139

    $default  reduce using rule 64 (simpleBoolean)


state 90

   66 implication: booleanTerm .
   69 booleanTerm: booleanTerm . TOKEN_OR_OP booleanFactor

    TOKEN_OR_OP  shift, and go to state 140

    $default  reduce using rule 66 (implication)


state 91

   68 booleanTerm: booleanFactor .
   71 booleanFactor: booleanFactor . TOKEN_AND_OP booleanSecondary

    TOKEN_AND_OP  shift, and go to state 141

    $default  reduce using rule 68 (booleanTerm)


state 92

   70 booleanFactor: booleanSecondary .

    $default  reduce using rule 70 (booleanFactor)


state 93

   72 booleanSecondary: booleanPrimary .

    $default  reduce using rule 72 (booleanSecondary)


state 94

   74 booleanPrimary: logicalValue .

    $default  reduce using rule 74 (booleanPrimary)


state 95

   76 booleanPrimary: relation .

    $default  reduce using rule 76 (booleanPrimary)


state 96

   75 booleanPrimary: boolVariable .

    $default  reduce using rule 75 (booleanPrimary)


state 97

   55 simpleVariable: varIdentifier .

    $default  reduce using rule 55 (simpleVariable)


state 98

   37 arithmeticExpression: ifClause . simpleArithmeticExpression TOKEN_ELSE arithmeticExpression

    TOKEN_IDENTIFIER    shift, and go to state 1
    TOKEN_PLUS          shift, and go to state 68
    TOKEN_MINUS         shift, and go to state 69
    TOKEN_OPEN_BRACKET  shift, and go to state 123
    TOKEN_REAL_NUM      shift, and go to state 71
    TOKEN_INTEGER       shift, and go to state 3

    arrayIdentifier             go to state 73
    simpleArithmeticExpression  go to state 142
    term                        go to state 77
    factor                      go to state 78
    primary                     go to state 79
    unsignedNumber              go to state 80
    realNumber                  go to state 81
    integer                     go to state 82
    simpleVariable              go to state 83
    variable                    go to state 125
    subscriptedVariable         go to state 85
    identifier                  go to state 86
    varIdentifier               go to state 97


state 99

  109 forStatement: TOKEN_FOR variable . TOKEN_ASSIGN arithmeticExpression TOKEN_STEP arithmeticExpression TOKEN_UNTIL arithmeticExpression TOKEN_DO statement

    TOKEN_ASSIGN  shift, and go to state 143


state 100

   41 simpleArithmeticExpression: simpleArithmeticExpression . TOKEN_PLUS term
   42                           | simpleArithmeticExpression . TOKEN_MINUS term
   79 relation: simpleArithmeticExpression . relationalOperator simpleArithmeticExpression

    TOKEN_PLUS    shift, and go to state 131
    TOKEN_MINUS   shift, and go to state 132
    TOKEN_REL_OP  shift, and go to state 133

    relationalOperator  go to state 134


state 101

   98 ifClause: TOKEN_IF booleanExpression . TOKEN_THEN

    TOKEN_THEN  shift, and go to state 144


state 102

   96 conditionalStatement: tlabel conditionalStatement .

    $default  reduce using rule 96 (conditionalStatement)


state 103

  100 basicStatement: label . basicStatement

    TOKEN_IDENTIFIER  shift, and go to state 1
    TOKEN_INTEGER     shift, and go to state 3

    $default  reduce using rule 110 (empty)

    label                     go to state 103
    integer                   go to state 12
    identifier                go to state 39
    basicStatement            go to state 104
    unlabelledBasicStatement  go to state 45
    dummyStatement            go to state 46
    assignmentStatement       go to state 47
    empty                     go to state 49
    procedureStatement        go to state 50
    procedureIdentifier       go to state 51


state 104

  100 basicStatement: label basicStatement .

    $default  reduce using rule 100 (basicStatement)


state 105

  107 assignmentStatement: identifier TOKEN_ASSIGN . arithmeticExpression
  108                    | identifier TOKEN_ASSIGN . booleanExpression

    TOKEN_IDENTIFIER     shift, and go to state 1
    TOKEN_LOGICAL_VALUE  shift, and go to state 67
    TOKEN_PLUS           shift, and go to state 68
    TOKEN_MINUS          shift, and go to state 69
    TOKEN_OPEN_BRACKET   shift, and go to state 70
    TOKEN_REAL_NUM       shift, and go to state 71
    TOKEN_INTEGER        shift, and go to state 3
    TOKEN_NOT_OP         shift, and go to state 72
    TOKEN_IF             shift, and go to state 33

    arrayIdentifier             go to state 73
    arithmeticExpression        go to state 145
    simpleArithmeticExpression  go to state 76
    term                        go to state 77
    factor                      go to state 78
    primary                     go to state 79
    unsignedNumber              go to state 80
    realNumber                  go to state 81
    integer                     go to state 82
    simpleVariable              go to state 83
    variable                    go to state 84
    subscriptedVariable         go to state 85
    identifier                  go to state 86
    booleanExpression           go to state 146
    simpleBoolean               go to state 88
    implication                 go to state 89
    booleanTerm                 go to state 90
    booleanFactor               go to state 91
    booleanSecondary            go to state 92
    booleanPrimary              go to state 93
    logicalValue                go to state 94
    relation                    go to state 95
    boolVariable                go to state 96
    varIdentifier               go to state 97
    ifClause                    go to state 98


state 106

   94 conditionalStatement: ifClause unconditionalStatement . TOKEN_ELSE statement
   97 ifStatement: ifClause unconditionalStatement .

    TOKEN_ELSE  shift, and go to state 147

    $default  reduce using rule 97 (ifStatement)


state 107

   95 conditionalStatement: ifClause forStatement .

    $default  reduce using rule 95 (conditionalStatement)


state 108

  104 unlabelledBasicStatement: procedureStatement @5 . returnStatement

    TOKEN_RETURN  shift, and go to state 148

    returnStatement  go to state 149


state 109

  114 actualParameterPart: TOKEN_OPEN_BRACKET . actualParameterList TOKEN_CLOSE_BRACKET

    TOKEN_IDENTIFIER     shift, and go to state 1
    TOKEN_LOGICAL_VALUE  shift, and go to state 67
    TOKEN_PLUS           shift, and go to state 68
    TOKEN_MINUS          shift, and go to state 69
    TOKEN_OPEN_BRACKET   shift, and go to state 70
    TOKEN_REAL_NUM       shift, and go to state 71
    TOKEN_INTEGER        shift, and go to state 3
    TOKEN_NOT_OP         shift, and go to state 72
    TOKEN_IF             shift, and go to state 33

    arrayIdentifier             go to state 73
    expression                  go to state 150
    arithmeticExpression        go to state 75
    simpleArithmeticExpression  go to state 76
    term                        go to state 77
    factor                      go to state 78
    primary                     go to state 79
    unsignedNumber              go to state 80
    realNumber                  go to state 81
    integer                     go to state 82
    simpleVariable              go to state 83
    variable                    go to state 84
    subscriptedVariable         go to state 85
    identifier                  go to state 86
    booleanExpression           go to state 87
    simpleBoolean               go to state 88
    implication                 go to state 89
    booleanTerm                 go to state 90
    booleanFactor               go to state 91
    booleanSecondary            go to state 92
    booleanPrimary              go to state 93
    logicalValue                go to state 94
    relation                    go to state 95
    boolVariable                go to state 96
    varIdentifier               go to state 97
    ifClause                    go to state 98
    actualParameterList         go to state 151
    actualParameter             go to state 152


state 110

  113 actualParameterPart: empty .

    $default  reduce using rule 113 (actualParameterPart)


state 111

  111 procedureStatement: procedureIdentifier actualParameterPart .

    $default  reduce using rule 111 (procedureStatement)


state 112

   16 compoundTail: statement TOKEN_END .

    $default  reduce using rule 16 (compoundTail)


state 113

   17 compoundTail: statement TOKEN_SEMICOLON . compoundTail

    TOKEN_PRINT       shift, and go to state 31
    TOKEN_IDENTIFIER  shift, and go to state 1
    TOKEN_BEGIN       shift, and go to state 2
    TOKEN_INTEGER     shift, and go to state 3
    TOKEN_FOR         shift, and go to state 32
    TOKEN_IF          shift, and go to state 33

    $default  reduce using rule 110 (empty)

    blockHead                 go to state 4
    unlabelledBlock           go to state 5
    block                     go to state 34
    tlabel                    go to state 35
    label                     go to state 36
    unlabelledCompound        go to state 10
    compoundStatement         go to state 37
    compoundTail              go to state 153
    integer                   go to state 12
    identifier                go to state 39
    unconditionalStatement    go to state 40
    conditionalStatement      go to state 41
    ifStatement               go to state 42
    ifClause                  go to state 43
    basicStatement            go to state 44
    unlabelledBasicStatement  go to state 45
    dummyStatement            go to state 46
    assignmentStatement       go to state 47
    forStatement              go to state 48
    empty                     go to state 49
    procedureStatement        go to state 50
    procedureIdentifier       go to state 51
    statement                 go to state 52


state 114

  146 procedureHeading: procedureIdentifier @8 . formalParameterPart TOKEN_SEMICOLON $@9 valuePart specificationPart

    TOKEN_OPEN_BRACKET  shift, and go to state 154

    $default  reduce using rule 110 (empty)

    empty                go to state 155
    formalParameterPart  go to state 156


state 115

  147 procedureBody: statement .

    $default  reduce using rule 147 (procedureBody)


state 116

  148 procedureDeclaration: TOKEN_PROCEDURE procedureHeading procedureBody .

    $default  reduce using rule 148 (procedureDeclaration)


state 117

   28 arraySegment: arrayIdentifier TOKEN_COMMA . arraySegment

    TOKEN_IDENTIFIER  shift, and go to state 1

    arrayIdentifier  go to state 58
    arraySegment     go to state 157
    identifier       go to state 61


state 118

   27 arraySegment: arrayIdentifier TOKEN_OPEN_SQUARE_BRACKET . boundPairList TOKEN_CLOSE_SQUARE_BRACKET

    TOKEN_IDENTIFIER    shift, and go to state 1
    TOKEN_PLUS          shift, and go to state 68
    TOKEN_MINUS         shift, and go to state 69
    TOKEN_OPEN_BRACKET  shift, and go to state 123
    TOKEN_REAL_NUM      shift, and go to state 71
    TOKEN_INTEGER       shift, and go to state 3
    TOKEN_IF            shift, and go to state 33

    lowerBound                  go to state 158
    boundPair                   go to state 159
    boundPairList               go to state 160
    arrayIdentifier             go to state 73
    arithmeticExpression        go to state 161
    simpleArithmeticExpression  go to state 162
    term                        go to state 77
    factor                      go to state 78
    primary                     go to state 79
    unsignedNumber              go to state 80
    realNumber                  go to state 81
    integer                     go to state 82
    simpleVariable              go to state 83
    variable                    go to state 125
    subscriptedVariable         go to state 85
    identifier                  go to state 86
    varIdentifier               go to state 97
    ifClause                    go to state 98


state 119

   31 arrayList: arrayList TOKEN_COMMA . @3 arraySegment

    $default  reduce using rule 30 (@3)

    @3  go to state 163


state 120

  149 procedureDeclaration: type TOKEN_PROCEDURE procedureHeading . procedureBody

    TOKEN_PRINT       shift, and go to state 31
    TOKEN_IDENTIFIER  shift, and go to state 1
    TOKEN_BEGIN       shift, and go to state 2
    TOKEN_INTEGER     shift, and go to state 3
    TOKEN_FOR         shift, and go to state 32
    TOKEN_IF          shift, and go to state 33

    $default  reduce using rule 110 (empty)

    blockHead                 go to state 4
    unlabelledBlock           go to state 5
    block                     go to state 34
    tlabel                    go to state 35
    label                     go to state 36
    unlabelledCompound        go to state 10
    compoundStatement         go to state 37
    integer                   go to state 12
    identifier                go to state 39
    unconditionalStatement    go to state 40
    conditionalStatement      go to state 41
    ifStatement               go to state 42
    ifClause                  go to state 43
    basicStatement            go to state 44
    unlabelledBasicStatement  go to state 45
    dummyStatement            go to state 46
    assignmentStatement       go to state 47
    forStatement              go to state 48
    empty                     go to state 49
    procedureStatement        go to state 50
    procedureIdentifier       go to state 51
    statement                 go to state 115
    procedureBody             go to state 164


state 121

   31 arrayList: arrayList . TOKEN_COMMA @3 arraySegment
   33 arrayDeclaration: type TOKEN_ARRAY arrayList .

    TOKEN_COMMA  shift, and go to state 119

    $default  reduce using rule 33 (arrayDeclaration)


state 122

   84 listType: listType TOKEN_COMMA . @4 varIdentifier

    $default  reduce using rule 83 (@4)

    @4  go to state 165


state 123

   50 primary: TOKEN_OPEN_BRACKET . arithmeticExpression TOKEN_CLOSE_BRACKET

    TOKEN_IDENTIFIER    shift, and go to state 1
    TOKEN_PLUS          shift, and go to state 68
    TOKEN_MINUS         shift, and go to state 69
    TOKEN_OPEN_BRACKET  shift, and go to state 123
    TOKEN_REAL_NUM      shift, and go to state 71
    TOKEN_INTEGER       shift, and go to state 3
    TOKEN_IF            shift, and go to state 33

    arrayIdentifier             go to state 73
    arithmeticExpression        go to state 127
    simpleArithmeticExpression  go to state 162
    term                        go to state 77
    factor                      go to state 78
    primary                     go to state 79
    unsignedNumber              go to state 80
    realNumber                  go to state 81
    integer                     go to state 82
    simpleVariable              go to state 83
    variable                    go to state 125
    subscriptedVariable         go to state 85
    identifier                  go to state 86
    varIdentifier               go to state 97
    ifClause                    go to state 98


state 124

   39 simpleArithmeticExpression: TOKEN_PLUS term .
   44 term: term . TOKEN_MULTIPLY factor
   45     | term . TOKEN_DIVIDE factor

    TOKEN_DIVIDE    shift, and go to state 135
    TOKEN_MULTIPLY  shift, and go to state 136

    $default  reduce using rule 39 (simpleArithmeticExpression)


state 125

   49 primary: variable .

    $default  reduce using rule 49 (primary)


state 126

   40 simpleArithmeticExpression: TOKEN_MINUS term .
   44 term: term . TOKEN_MULTIPLY factor
   45     | term . TOKEN_DIVIDE factor

    TOKEN_DIVIDE    shift, and go to state 135
    TOKEN_MULTIPLY  shift, and go to state 136

    $default  reduce using rule 40 (simpleArithmeticExpression)


state 127

   50 primary: TOKEN_OPEN_BRACKET arithmeticExpression . TOKEN_CLOSE_BRACKET

    TOKEN_CLOSE_BRACKET  shift, and go to state 166


state 128

   77 booleanPrimary: TOKEN_OPEN_BRACKET booleanExpression . TOKEN_CLOSE_BRACKET

    TOKEN_CLOSE_BRACKET  shift, and go to state 167


state 129

   73 booleanSecondary: TOKEN_NOT_OP booleanPrimary .

    $default  reduce using rule 73 (booleanSecondary)


state 130

   58 subscriptedVariable: arrayIdentifier TOKEN_OPEN_SQUARE_BRACKET . subscriptList TOKEN_CLOSE_SQUARE_BRACKET

    TOKEN_IDENTIFIER    shift, and go to state 1
    TOKEN_PLUS          shift, and go to state 68
    TOKEN_MINUS         shift, and go to state 69
    TOKEN_OPEN_BRACKET  shift, and go to state 123
    TOKEN_REAL_NUM      shift, and go to state 71
    TOKEN_INTEGER       shift, and go to state 3
    TOKEN_IF            shift, and go to state 33

    arrayIdentifier             go to state 73
    arithmeticExpression        go to state 168
    simpleArithmeticExpression  go to state 162
    term                        go to state 77
    factor                      go to state 78
    primary                     go to state 79
    unsignedNumber              go to state 80
    realNumber                  go to state 81
    integer                     go to state 82
    simpleVariable              go to state 83
    variable                    go to state 125
    subscriptedVariable         go to state 85
    subscriptList               go to state 169
    subscriptExpression         go to state 170
    identifier                  go to state 86
    varIdentifier               go to state 97
    ifClause                    go to state 98


state 131

   41 simpleArithmeticExpression: simpleArithmeticExpression TOKEN_PLUS . term

    TOKEN_IDENTIFIER    shift, and go to state 1
    TOKEN_OPEN_BRACKET  shift, and go to state 123
    TOKEN_REAL_NUM      shift, and go to state 71
    TOKEN_INTEGER       shift, and go to state 3

    arrayIdentifier      go to state 73
    term                 go to state 171
    factor               go to state 78
    primary              go to state 79
    unsignedNumber       go to state 80
    realNumber           go to state 81
    integer              go to state 82
    simpleVariable       go to state 83
    variable             go to state 125
    subscriptedVariable  go to state 85
    identifier           go to state 86
    varIdentifier        go to state 97


state 132

   42 simpleArithmeticExpression: simpleArithmeticExpression TOKEN_MINUS . term

    TOKEN_IDENTIFIER    shift, and go to state 1
    TOKEN_OPEN_BRACKET  shift, and go to state 123
    TOKEN_REAL_NUM      shift, and go to state 71
    TOKEN_INTEGER       shift, and go to state 3

    arrayIdentifier      go to state 73
    term                 go to state 172
    factor               go to state 78
    primary              go to state 79
    unsignedNumber       go to state 80
    realNumber           go to state 81
    integer              go to state 82
    simpleVariable       go to state 83
    variable             go to state 125
    subscriptedVariable  go to state 85
    identifier           go to state 86
    varIdentifier        go to state 97


state 133

   81 relationalOperator: TOKEN_REL_OP .

    $default  reduce using rule 81 (relationalOperator)


state 134

   79 relation: simpleArithmeticExpression relationalOperator . simpleArithmeticExpression

    TOKEN_IDENTIFIER    shift, and go to state 1
    TOKEN_PLUS          shift, and go to state 68
    TOKEN_MINUS         shift, and go to state 69
    TOKEN_OPEN_BRACKET  shift, and go to state 123
    TOKEN_REAL_NUM      shift, and go to state 71
    TOKEN_INTEGER       shift, and go to state 3

    arrayIdentifier             go to state 73
    simpleArithmeticExpression  go to state 173
    term                        go to state 77
    factor                      go to state 78
    primary                     go to state 79
    unsignedNumber              go to state 80
    realNumber                  go to state 81
    integer                     go to state 82
    simpleVariable              go to state 83
    variable                    go to state 125
    subscriptedVariable         go to state 85
    identifier                  go to state 86
    varIdentifier               go to state 97


state 135

   45 term: term TOKEN_DIVIDE . factor

    TOKEN_IDENTIFIER    shift, and go to state 1
    TOKEN_OPEN_BRACKET  shift, and go to state 123
    TOKEN_REAL_NUM      shift, and go to state 71
    TOKEN_INTEGER       shift, and go to state 3

    arrayIdentifier      go to state 73
    factor               go to state 174
    primary              go to state 79
    unsignedNumber       go to state 80
    realNumber           go to state 81
    integer              go to state 82
    simpleVariable       go to state 83
    variable             go to state 125
    subscriptedVariable  go to state 85
    identifier           go to state 86
    varIdentifier        go to state 97


state 136

   44 term: term TOKEN_MULTIPLY . factor

    TOKEN_IDENTIFIER    shift, and go to state 1
    TOKEN_OPEN_BRACKET  shift, and go to state 123
    TOKEN_REAL_NUM      shift, and go to state 71
    TOKEN_INTEGER       shift, and go to state 3

    arrayIdentifier      go to state 73
    factor               go to state 175
    primary              go to state 79
    unsignedNumber       go to state 80
    realNumber           go to state 81
    integer              go to state 82
    simpleVariable       go to state 83
    variable             go to state 125
    subscriptedVariable  go to state 85
    identifier           go to state 86
    varIdentifier        go to state 97


state 137

   47 factor: factor TOKEN_POWER . primary

    TOKEN_IDENTIFIER    shift, and go to state 1
    TOKEN_OPEN_BRACKET  shift, and go to state 123
    TOKEN_REAL_NUM      shift, and go to state 71
    TOKEN_INTEGER       shift, and go to state 3

    arrayIdentifier      go to state 73
    primary              go to state 176
    unsignedNumber       go to state 80
    realNumber           go to state 81
    integer              go to state 82
    simpleVariable       go to state 83
    variable             go to state 125
    subscriptedVariable  go to state 85
    identifier           go to state 86
    varIdentifier        go to state 97


state 138

   65 simpleBoolean: simpleBoolean TOKEN_EQUIV . implication

    TOKEN_IDENTIFIER     shift, and go to state 1
    TOKEN_LOGICAL_VALUE  shift, and go to state 67
    TOKEN_PLUS           shift, and go to state 68
    TOKEN_MINUS          shift, and go to state 69
    TOKEN_OPEN_BRACKET   shift, and go to state 70
    TOKEN_REAL_NUM       shift, and go to state 71
    TOKEN_INTEGER        shift, and go to state 3
    TOKEN_NOT_OP         shift, and go to state 72

    arrayIdentifier             go to state 73
    simpleArithmeticExpression  go to state 100
    term                        go to state 77
    factor                      go to state 78
    primary                     go to state 79
    unsignedNumber              go to state 80
    realNumber                  go to state 81
    integer                     go to state 82
    simpleVariable              go to state 83
    variable                    go to state 84
    subscriptedVariable         go to state 85
    identifier                  go to state 86
    implication                 go to state 177
    booleanTerm                 go to state 90
    booleanFactor               go to state 91
    booleanSecondary            go to state 92
    booleanPrimary              go to state 93
    logicalValue                go to state 94
    relation                    go to state 95
    boolVariable                go to state 96
    varIdentifier               go to state 97


state 139

   67 implication: implication TOKEN_IMPLY . booleanTerm

    TOKEN_IDENTIFIER     shift, and go to state 1
    TOKEN_LOGICAL_VALUE  shift, and go to state 67
    TOKEN_PLUS           shift, and go to state 68
    TOKEN_MINUS          shift, and go to state 69
    TOKEN_OPEN_BRACKET   shift, and go to state 70
    TOKEN_REAL_NUM       shift, and go to state 71
    TOKEN_INTEGER        shift, and go to state 3
    TOKEN_NOT_OP         shift, and go to state 72

    arrayIdentifier             go to state 73
    simpleArithmeticExpression  go to state 100
    term                        go to state 77
    factor                      go to state 78
    primary                     go to state 79
    unsignedNumber              go to state 80
    realNumber                  go to state 81
    integer                     go to state 82
    simpleVariable              go to state 83
    variable                    go to state 84
    subscriptedVariable         go to state 85
    identifier                  go to state 86
    booleanTerm                 go to state 178
    booleanFactor               go to state 91
    booleanSecondary            go to state 92
    booleanPrimary              go to state 93
    logicalValue                go to state 94
    relation                    go to state 95
    boolVariable                go to state 96
    varIdentifier               go to state 97


state 140

   69 booleanTerm: booleanTerm TOKEN_OR_OP . booleanFactor

    TOKEN_IDENTIFIER     shift, and go to state 1
    TOKEN_LOGICAL_VALUE  shift, and go to state 67
    TOKEN_PLUS           shift, and go to state 68
    TOKEN_MINUS          shift, and go to state 69
    TOKEN_OPEN_BRACKET   shift, and go to state 70
    TOKEN_REAL_NUM       shift, and go to state 71
    TOKEN_INTEGER        shift, and go to state 3
    TOKEN_NOT_OP         shift, and go to state 72

    arrayIdentifier             go to state 73
    simpleArithmeticExpression  go to state 100
    term                        go to state 77
    factor                      go to state 78
    primary                     go to state 79
    unsignedNumber              go to state 80
    realNumber                  go to state 81
    integer                     go to state 82
    simpleVariable              go to state 83
    variable                    go to state 84
    subscriptedVariable         go to state 85
    identifier                  go to state 86
    booleanFactor               go to state 179
    booleanSecondary            go to state 92
    booleanPrimary              go to state 93
    logicalValue                go to state 94
    relation                    go to state 95
    boolVariable                go to state 96
    varIdentifier               go to state 97


state 141

   71 booleanFactor: booleanFactor TOKEN_AND_OP . booleanSecondary

    TOKEN_IDENTIFIER     shift, and go to state 1
    TOKEN_LOGICAL_VALUE  shift, and go to state 67
    TOKEN_PLUS           shift, and go to state 68
    TOKEN_MINUS          shift, and go to state 69
    TOKEN_OPEN_BRACKET   shift, and go to state 70
    TOKEN_REAL_NUM       shift, and go to state 71
    TOKEN_INTEGER        shift, and go to state 3
    TOKEN_NOT_OP         shift, and go to state 72

    arrayIdentifier             go to state 73
    simpleArithmeticExpression  go to state 100
    term                        go to state 77
    factor                      go to state 78
    primary                     go to state 79
    unsignedNumber              go to state 80
    realNumber                  go to state 81
    integer                     go to state 82
    simpleVariable              go to state 83
    variable                    go to state 84
    subscriptedVariable         go to state 85
    identifier                  go to state 86
    booleanSecondary            go to state 180
    booleanPrimary              go to state 93
    logicalValue                go to state 94
    relation                    go to state 95
    boolVariable                go to state 96
    varIdentifier               go to state 97


state 142

   37 arithmeticExpression: ifClause simpleArithmeticExpression . TOKEN_ELSE arithmeticExpression
   41 simpleArithmeticExpression: simpleArithmeticExpression . TOKEN_PLUS term
   42                           | simpleArithmeticExpression . TOKEN_MINUS term

    TOKEN_PLUS   shift, and go to state 131
    TOKEN_MINUS  shift, and go to state 132
    TOKEN_ELSE   shift, and go to state 181


state 143

  109 forStatement: TOKEN_FOR variable TOKEN_ASSIGN . arithmeticExpression TOKEN_STEP arithmeticExpression TOKEN_UNTIL arithmeticExpression TOKEN_DO statement

    TOKEN_IDENTIFIER    shift, and go to state 1
    TOKEN_PLUS          shift, and go to state 68
    TOKEN_MINUS         shift, and go to state 69
    TOKEN_OPEN_BRACKET  shift, and go to state 123
    TOKEN_REAL_NUM      shift, and go to state 71
    TOKEN_INTEGER       shift, and go to state 3
    TOKEN_IF            shift, and go to state 33

    arrayIdentifier             go to state 73
    arithmeticExpression        go to state 182
    simpleArithmeticExpression  go to state 162
    term                        go to state 77
    factor                      go to state 78
    primary                     go to state 79
    unsignedNumber              go to state 80
    realNumber                  go to state 81
    integer                     go to state 82
    simpleVariable              go to state 83
    variable                    go to state 125
    subscriptedVariable         go to state 85
    identifier                  go to state 86
    varIdentifier               go to state 97
    ifClause                    go to state 98


state 144

   98 ifClause: TOKEN_IF booleanExpression TOKEN_THEN .

    $default  reduce using rule 98 (ifClause)


state 145

  107 assignmentStatement: identifier TOKEN_ASSIGN arithmeticExpression .

    $default  reduce using rule 107 (assignmentStatement)


state 146

  108 assignmentStatement: identifier TOKEN_ASSIGN booleanExpression .

    $default  reduce using rule 108 (assignmentStatement)


state 147

   94 conditionalStatement: ifClause unconditionalStatement TOKEN_ELSE . statement

    TOKEN_PRINT       shift, and go to state 31
    TOKEN_IDENTIFIER  shift, and go to state 1
    TOKEN_BEGIN       shift, and go to state 2
    TOKEN_INTEGER     shift, and go to state 3
    TOKEN_FOR         shift, and go to state 32
    TOKEN_IF          shift, and go to state 33

    $default  reduce using rule 110 (empty)

    blockHead                 go to state 4
    unlabelledBlock           go to state 5
    block                     go to state 34
    tlabel                    go to state 35
    label                     go to state 36
    unlabelledCompound        go to state 10
    compoundStatement         go to state 37
    integer                   go to state 12
    identifier                go to state 39
    unconditionalStatement    go to state 40
    conditionalStatement      go to state 41
    ifStatement               go to state 42
    ifClause                  go to state 43
    basicStatement            go to state 44
    unlabelledBasicStatement  go to state 45
    dummyStatement            go to state 46
    assignmentStatement       go to state 47
    forStatement              go to state 48
    empty                     go to state 49
    procedureStatement        go to state 50
    procedureIdentifier       go to state 51
    statement                 go to state 183


state 148

  106 returnStatement: TOKEN_RETURN . expression

    TOKEN_IDENTIFIER     shift, and go to state 1
    TOKEN_LOGICAL_VALUE  shift, and go to state 67
    TOKEN_PLUS           shift, and go to state 68
    TOKEN_MINUS          shift, and go to state 69
    TOKEN_OPEN_BRACKET   shift, and go to state 70
    TOKEN_REAL_NUM       shift, and go to state 71
    TOKEN_INTEGER        shift, and go to state 3
    TOKEN_NOT_OP         shift, and go to state 72
    TOKEN_IF             shift, and go to state 33

    arrayIdentifier             go to state 73
    expression                  go to state 184
    arithmeticExpression        go to state 75
    simpleArithmeticExpression  go to state 76
    term                        go to state 77
    factor                      go to state 78
    primary                     go to state 79
    unsignedNumber              go to state 80
    realNumber                  go to state 81
    integer                     go to state 82
    simpleVariable              go to state 83
    variable                    go to state 84
    subscriptedVariable         go to state 85
    identifier                  go to state 86
    booleanExpression           go to state 87
    simpleBoolean               go to state 88
    implication                 go to state 89
    booleanTerm                 go to state 90
    booleanFactor               go to state 91
    booleanSecondary            go to state 92
    booleanPrimary              go to state 93
    logicalValue                go to state 94
    relation                    go to state 95
    boolVariable                go to state 96
    varIdentifier               go to state 97
    ifClause                    go to state 98


state 149

  104 unlabelledBasicStatement: procedureStatement @5 returnStatement .

    $default  reduce using rule 104 (unlabelledBasicStatement)


state 150

  117 actualParameter: expression .

    $default  reduce using rule 117 (actualParameter)


state 151

  114 actualParameterPart: TOKEN_OPEN_BRACKET actualParameterList . TOKEN_CLOSE_BRACKET
  116 actualParameterList: actualParameterList . parameterDelimiter actualParameter

    TOKEN_COMMA                 shift, and go to state 185
    TOKEN_CLOSE_BRACKET         shift, and go to state 186
    TOKEN_CLOSE_SQUARE_BRACKET  shift, and go to state 187

    parameterDelimiter  go to state 188


state 152

  115 actualParameterList: actualParameter .

    $default  reduce using rule 115 (actualParameterList)


state 153

   17 compoundTail: statement TOKEN_SEMICOLON compoundTail .

    $default  reduce using rule 17 (compoundTail)


state 154

  130 formalParameterPart: TOKEN_OPEN_BRACKET . $@7 formalParameterList TOKEN_CLOSE_BRACKET

    $default  reduce using rule 129 ($@7)

    $@7  go to state 189


state 155

  128 formalParameterPart: empty .

    $default  reduce using rule 128 (formalParameterPart)


state 156

  146 procedureHeading: procedureIdentifier @8 formalParameterPart . TOKEN_SEMICOLON $@9 valuePart specificationPart

    TOKEN_SEMICOLON  shift, and go to state 190


state 157

   28 arraySegment: arrayIdentifier TOKEN_COMMA arraySegment .

    $default  reduce using rule 28 (arraySegment)


state 158

   23 boundPair: lowerBound . TOKEN_COLON upperBound

    TOKEN_COLON  shift, and go to state 191


state 159

   24 boundPairList: boundPair .

    $default  reduce using rule 24 (boundPairList)


state 160

   25 boundPairList: boundPairList . TOKEN_COMMA boundPair
   27 arraySegment: arrayIdentifier TOKEN_OPEN_SQUARE_BRACKET boundPairList . TOKEN_CLOSE_SQUARE_BRACKET

    TOKEN_COMMA                 shift, and go to state 192
    TOKEN_CLOSE_SQUARE_BRACKET  shift, and go to state 193


state 161

   21 lowerBound: arithmeticExpression .

    $default  reduce using rule 21 (lowerBound)


state 162

   36 arithmeticExpression: simpleArithmeticExpression .
   41 simpleArithmeticExpression: simpleArithmeticExpression . TOKEN_PLUS term
   42                           | simpleArithmeticExpression . TOKEN_MINUS term

    TOKEN_PLUS   shift, and go to state 131
    TOKEN_MINUS  shift, and go to state 132

    $default  reduce using rule 36 (arithmeticExpression)


state 163

   31 arrayList: arrayList TOKEN_COMMA @3 . arraySegment

    TOKEN_IDENTIFIER  shift, and go to state 1

    arrayIdentifier  go to state 58
    arraySegment     go to state 194
    identifier       go to state 61


state 164

  149 procedureDeclaration: type TOKEN_PROCEDURE procedureHeading procedureBody .

    $default  reduce using rule 149 (procedureDeclaration)


state 165

   84 listType: listType TOKEN_COMMA @4 . varIdentifier

    TOKEN_IDENTIFIER  shift, and go to state 1

    identifier     go to state 64
    varIdentifier  go to state 195


state 166

   50 primary: TOKEN_OPEN_BRACKET arithmeticExpression TOKEN_CLOSE_BRACKET .

    $default  reduce using rule 50 (primary)


state 167

   77 booleanPrimary: TOKEN_OPEN_BRACKET booleanExpression TOKEN_CLOSE_BRACKET .

    $default  reduce using rule 77 (booleanPrimary)


state 168

   61 subscriptExpression: arithmeticExpression .

    $default  reduce using rule 61 (subscriptExpression)


state 169

   58 subscriptedVariable: arrayIdentifier TOKEN_OPEN_SQUARE_BRACKET subscriptList . TOKEN_CLOSE_SQUARE_BRACKET
   60 subscriptList: subscriptList . TOKEN_COMMA subscriptExpression

    TOKEN_COMMA                 shift, and go to state 196
    TOKEN_CLOSE_SQUARE_BRACKET  shift, and go to state 197


state 170

   59 subscriptList: subscriptExpression .

    $default  reduce using rule 59 (subscriptList)


state 171

   41 simpleArithmeticExpression: simpleArithmeticExpression TOKEN_PLUS term .
   44 term: term . TOKEN_MULTIPLY factor
   45     | term . TOKEN_DIVIDE factor

    TOKEN_DIVIDE    shift, and go to state 135
    TOKEN_MULTIPLY  shift, and go to state 136

    $default  reduce using rule 41 (simpleArithmeticExpression)


state 172

   42 simpleArithmeticExpression: simpleArithmeticExpression TOKEN_MINUS term .
   44 term: term . TOKEN_MULTIPLY factor
   45     | term . TOKEN_DIVIDE factor

    TOKEN_DIVIDE    shift, and go to state 135
    TOKEN_MULTIPLY  shift, and go to state 136

    $default  reduce using rule 42 (simpleArithmeticExpression)


state 173

   41 simpleArithmeticExpression: simpleArithmeticExpression . TOKEN_PLUS term
   42                           | simpleArithmeticExpression . TOKEN_MINUS term
   79 relation: simpleArithmeticExpression relationalOperator simpleArithmeticExpression .

    TOKEN_PLUS   shift, and go to state 131
    TOKEN_MINUS  shift, and go to state 132

    $default  reduce using rule 79 (relation)


state 174

   45 term: term TOKEN_DIVIDE factor .
   47 factor: factor . TOKEN_POWER primary

    TOKEN_POWER  shift, and go to state 137

    $default  reduce using rule 45 (term)


state 175

   44 term: term TOKEN_MULTIPLY factor .
   47 factor: factor . TOKEN_POWER primary

    TOKEN_POWER  shift, and go to state 137

    $default  reduce using rule 44 (term)


state 176

   47 factor: factor TOKEN_POWER primary .

    $default  reduce using rule 47 (factor)


state 177

   65 simpleBoolean: simpleBoolean TOKEN_EQUIV implication .
   67 implication: implication . TOKEN_IMPLY booleanTerm

    TOKEN_IMPLY  shift, and go to state 139

    $default  reduce using rule 65 (simpleBoolean)


state 178

   67 implication: implication TOKEN_IMPLY booleanTerm .
   69 booleanTerm: booleanTerm . TOKEN_OR_OP booleanFactor

    TOKEN_OR_OP  shift, and go to state 140

    $default  reduce using rule 67 (implication)


state 179

   69 booleanTerm: booleanTerm TOKEN_OR_OP booleanFactor .
   71 booleanFactor: booleanFactor . TOKEN_AND_OP booleanSecondary

    TOKEN_AND_OP  shift, and go to state 141

    $default  reduce using rule 69 (booleanTerm)


state 180

   71 booleanFactor: booleanFactor TOKEN_AND_OP booleanSecondary .

    $default  reduce using rule 71 (booleanFactor)


state 181

   37 arithmeticExpression: ifClause simpleArithmeticExpression TOKEN_ELSE . arithmeticExpression

    TOKEN_IDENTIFIER    shift, and go to state 1
    TOKEN_PLUS          shift, and go to state 68
    TOKEN_MINUS         shift, and go to state 69
    TOKEN_OPEN_BRACKET  shift, and go to state 123
    TOKEN_REAL_NUM      shift, and go to state 71
    TOKEN_INTEGER       shift, and go to state 3
    TOKEN_IF            shift, and go to state 33

    arrayIdentifier             go to state 73
    arithmeticExpression        go to state 198
    simpleArithmeticExpression  go to state 162
    term                        go to state 77
    factor                      go to state 78
    primary                     go to state 79
    unsignedNumber              go to state 80
    realNumber                  go to state 81
    integer                     go to state 82
    simpleVariable              go to state 83
    variable                    go to state 125
    subscriptedVariable         go to state 85
    identifier                  go to state 86
    varIdentifier               go to state 97
    ifClause                    go to state 98


state 182

  109 forStatement: TOKEN_FOR variable TOKEN_ASSIGN arithmeticExpression . TOKEN_STEP arithmeticExpression TOKEN_UNTIL arithmeticExpression TOKEN_DO statement

    TOKEN_STEP  shift, and go to state 199


state 183

   94 conditionalStatement: ifClause unconditionalStatement TOKEN_ELSE statement .

    $default  reduce using rule 94 (conditionalStatement)


state 184

  106 returnStatement: TOKEN_RETURN expression .

    $default  reduce using rule 106 (returnStatement)


state 185

  118 parameterDelimiter: TOKEN_COMMA .

    $default  reduce using rule 118 (parameterDelimiter)


state 186

  114 actualParameterPart: TOKEN_OPEN_BRACKET actualParameterList TOKEN_CLOSE_BRACKET .

    $default  reduce using rule 114 (actualParameterPart)


state 187

  119 parameterDelimiter: TOKEN_CLOSE_SQUARE_BRACKET . identifier TOKEN_COLON TOKEN_OPEN_SQUARE_BRACKET

    TOKEN_IDENTIFIER  shift, and go to state 1

    identifier  go to state 200


state 188

  116 actualParameterList: actualParameterList parameterDelimiter . actualParameter

    TOKEN_IDENTIFIER     shift, and go to state 1
    TOKEN_LOGICAL_VALUE  shift, and go to state 67
    TOKEN_PLUS           shift, and go to state 68
    TOKEN_MINUS          shift, and go to state 69
    TOKEN_OPEN_BRACKET   shift, and go to state 70
    TOKEN_REAL_NUM       shift, and go to state 71
    TOKEN_INTEGER        shift, and go to state 3
    TOKEN_NOT_OP         shift, and go to state 72
    TOKEN_IF             shift, and go to state 33

    arrayIdentifier             go to state 73
    expression                  go to state 150
    arithmeticExpression        go to state 75
    simpleArithmeticExpression  go to state 76
    term                        go to state 77
    factor                      go to state 78
    primary                     go to state 79
    unsignedNumber              go to state 80
    realNumber                  go to state 81
    integer                     go to state 82
    simpleVariable              go to state 83
    variable                    go to state 84
    subscriptedVariable         go to state 85
    identifier                  go to state 86
    booleanExpression           go to state 87
    simpleBoolean               go to state 88
    implication                 go to state 89
    booleanTerm                 go to state 90
    booleanFactor               go to state 91
    booleanSecondary            go to state 92
    booleanPrimary              go to state 93
    logicalValue                go to state 94
    relation                    go to state 95
    boolVariable                go to state 96
    varIdentifier               go to state 97
    ifClause                    go to state 98
    actualParameter             go to state 201


state 189

  130 formalParameterPart: TOKEN_OPEN_BRACKET $@7 . formalParameterList TOKEN_CLOSE_BRACKET

    TOKEN_IDENTIFIER  shift, and go to state 1

    identifier           go to state 202
    formalParameter      go to state 203
    formalParameterList  go to state 204


state 190

  146 procedureHeading: procedureIdentifier @8 formalParameterPart TOKEN_SEMICOLON . $@9 valuePart specificationPart

    $default  reduce using rule 145 ($@9)

    $@9  go to state 205


state 191

   23 boundPair: lowerBound TOKEN_COLON . upperBound

    TOKEN_IDENTIFIER    shift, and go to state 1
    TOKEN_PLUS          shift, and go to state 68
    TOKEN_MINUS         shift, and go to state 69
    TOKEN_OPEN_BRACKET  shift, and go to state 123
    TOKEN_REAL_NUM      shift, and go to state 71
    TOKEN_INTEGER       shift, and go to state 3
    TOKEN_IF            shift, and go to state 33

    upperBound                  go to state 206
    arrayIdentifier             go to state 73
    arithmeticExpression        go to state 207
    simpleArithmeticExpression  go to state 162
    term                        go to state 77
    factor                      go to state 78
    primary                     go to state 79
    unsignedNumber              go to state 80
    realNumber                  go to state 81
    integer                     go to state 82
    simpleVariable              go to state 83
    variable                    go to state 125
    subscriptedVariable         go to state 85
    identifier                  go to state 86
    varIdentifier               go to state 97
    ifClause                    go to state 98


state 192

   25 boundPairList: boundPairList TOKEN_COMMA . boundPair

    TOKEN_IDENTIFIER    shift, and go to state 1
    TOKEN_PLUS          shift, and go to state 68
    TOKEN_MINUS         shift, and go to state 69
    TOKEN_OPEN_BRACKET  shift, and go to state 123
    TOKEN_REAL_NUM      shift, and go to state 71
    TOKEN_INTEGER       shift, and go to state 3
    TOKEN_IF            shift, and go to state 33

    lowerBound                  go to state 158
    boundPair                   go to state 208
    arrayIdentifier             go to state 73
    arithmeticExpression        go to state 161
    simpleArithmeticExpression  go to state 162
    term                        go to state 77
    factor                      go to state 78
    primary                     go to state 79
    unsignedNumber              go to state 80
    realNumber                  go to state 81
    integer                     go to state 82
    simpleVariable              go to state 83
    variable                    go to state 125
    subscriptedVariable         go to state 85
    identifier                  go to state 86
    varIdentifier               go to state 97
    ifClause                    go to state 98


state 193

   27 arraySegment: arrayIdentifier TOKEN_OPEN_SQUARE_BRACKET boundPairList TOKEN_CLOSE_SQUARE_BRACKET .

    $default  reduce using rule 27 (arraySegment)


state 194

   31 arrayList: arrayList TOKEN_COMMA @3 arraySegment .

    $default  reduce using rule 31 (arrayList)


state 195

   84 listType: listType TOKEN_COMMA @4 varIdentifier .

    $default  reduce using rule 84 (listType)


state 196

   60 subscriptList: subscriptList TOKEN_COMMA . subscriptExpression

    TOKEN_IDENTIFIER    shift, and go to state 1
    TOKEN_PLUS          shift, and go to state 68
    TOKEN_MINUS         shift, and go to state 69
    TOKEN_OPEN_BRACKET  shift, and go to state 123
    TOKEN_REAL_NUM      shift, and go to state 71
    TOKEN_INTEGER       shift, and go to state 3
    TOKEN_IF            shift, and go to state 33

    arrayIdentifier             go to state 73
    arithmeticExpression        go to state 168
    simpleArithmeticExpression  go to state 162
    term                        go to state 77
    factor                      go to state 78
    primary                     go to state 79
    unsignedNumber              go to state 80
    realNumber                  go to state 81
    integer                     go to state 82
    simpleVariable              go to state 83
    variable                    go to state 125
    subscriptedVariable         go to state 85
    subscriptExpression         go to state 209
    identifier                  go to state 86
    varIdentifier               go to state 97
    ifClause                    go to state 98


state 197

   58 subscriptedVariable: arrayIdentifier TOKEN_OPEN_SQUARE_BRACKET subscriptList TOKEN_CLOSE_SQUARE_BRACKET .

    $default  reduce using rule 58 (subscriptedVariable)


state 198

   37 arithmeticExpression: ifClause simpleArithmeticExpression TOKEN_ELSE arithmeticExpression .

    $default  reduce using rule 37 (arithmeticExpression)


state 199

  109 forStatement: TOKEN_FOR variable TOKEN_ASSIGN arithmeticExpression TOKEN_STEP . arithmeticExpression TOKEN_UNTIL arithmeticExpression TOKEN_DO statement

    TOKEN_IDENTIFIER    shift, and go to state 1
    TOKEN_PLUS          shift, and go to state 68
    TOKEN_MINUS         shift, and go to state 69
    TOKEN_OPEN_BRACKET  shift, and go to state 123
    TOKEN_REAL_NUM      shift, and go to state 71
    TOKEN_INTEGER       shift, and go to state 3
    TOKEN_IF            shift, and go to state 33

    arrayIdentifier             go to state 73
    arithmeticExpression        go to state 210
    simpleArithmeticExpression  go to state 162
    term                        go to state 77
    factor                      go to state 78
    primary                     go to state 79
    unsignedNumber              go to state 80
    realNumber                  go to state 81
    integer                     go to state 82
    simpleVariable              go to state 83
    variable                    go to state 125
    subscriptedVariable         go to state 85
    identifier                  go to state 86
    varIdentifier               go to state 97
    ifClause                    go to state 98


state 200

  119 parameterDelimiter: TOKEN_CLOSE_SQUARE_BRACKET identifier . TOKEN_COLON TOKEN_OPEN_SQUARE_BRACKET

    TOKEN_COLON  shift, and go to state 211


state 201

  116 actualParameterList: actualParameterList parameterDelimiter actualParameter .

    $default  reduce using rule 116 (actualParameterList)


state 202

  124 formalParameter: identifier .

    $default  reduce using rule 124 (formalParameter)


state 203

  125 formalParameterList: formalParameter .

    $default  reduce using rule 125 (formalParameterList)


state 204

  127 formalParameterList: formalParameterList . parameterDelimiter $@6 formalParameter
  130 formalParameterPart: TOKEN_OPEN_BRACKET $@7 formalParameterList . TOKEN_CLOSE_BRACKET

    TOKEN_COMMA                 shift, and go to state 185
    TOKEN_CLOSE_BRACKET         shift, and go to state 212
    TOKEN_CLOSE_SQUARE_BRACKET  shift, and go to state 187

    parameterDelimiter  go to state 213


state 205

  146 procedureHeading: procedureIdentifier @8 formalParameterPart TOKEN_SEMICOLON $@9 . valuePart specificationPart

    TOKEN_VALUE  shift, and go to state 214

    $default  reduce using rule 110 (empty)

    empty      go to state 215
    valuePart  go to state 216


state 206

   23 boundPair: lowerBound TOKEN_COLON upperBound .

    $default  reduce using rule 23 (boundPair)


state 207

   22 upperBound: arithmeticExpression .

    $default  reduce using rule 22 (upperBound)


state 208

   25 boundPairList: boundPairList TOKEN_COMMA boundPair .

    $default  reduce using rule 25 (boundPairList)


state 209

   60 subscriptList: subscriptList TOKEN_COMMA subscriptExpression .

    $default  reduce using rule 60 (subscriptList)


state 210

  109 forStatement: TOKEN_FOR variable TOKEN_ASSIGN arithmeticExpression TOKEN_STEP arithmeticExpression . TOKEN_UNTIL arithmeticExpression TOKEN_DO statement

    TOKEN_UNTIL  shift, and go to state 217


state 211

  119 parameterDelimiter: TOKEN_CLOSE_SQUARE_BRACKET identifier TOKEN_COLON . TOKEN_OPEN_SQUARE_BRACKET

    TOKEN_OPEN_SQUARE_BRACKET  shift, and go to state 218


state 212

  130 formalParameterPart: TOKEN_OPEN_BRACKET $@7 formalParameterList TOKEN_CLOSE_BRACKET .

    $default  reduce using rule 130 (formalParameterPart)


state 213

  127 formalParameterList: formalParameterList parameterDelimiter . $@6 formalParameter

    $default  reduce using rule 126 ($@6)

    $@6  go to state 219


state 214

  133 valuePart: TOKEN_VALUE . identifierList TOKEN_SEMICOLON

    TOKEN_IDENTIFIER  shift, and go to state 1

    identifier      go to state 220
    identifierList  go to state 221


state 215

  134 valuePart: empty .

    $default  reduce using rule 134 (valuePart)


state 216

  146 procedureHeading: procedureIdentifier @8 formalParameterPart TOKEN_SEMICOLON $@9 valuePart . specificationPart

    TOKEN_SWITCH        shift, and go to state 222
    TOKEN_TYPE_INTEGER  shift, and go to state 22
    TOKEN_TYPE_REAL     shift, and go to state 23
    TOKEN_TYPE_BOOLEAN  shift, and go to state 24
    TOKEN_TYPE_LABEL    shift, and go to state 223

    $default  reduce using rule 110 (empty)

    type                         go to state 224
    empty                        go to state 225
    specifier                    go to state 226
    specificationPart            go to state 227
    specificationIdentifierList  go to state 228


state 217

  109 forStatement: TOKEN_FOR variable TOKEN_ASSIGN arithmeticExpression TOKEN_STEP arithmeticExpression TOKEN_UNTIL . arithmeticExpression TOKEN_DO statement

    TOKEN_IDENTIFIER    shift, and go to state 1
    TOKEN_PLUS          shift, and go to state 68
    TOKEN_MINUS         shift, and go to state 69
    TOKEN_OPEN_BRACKET  shift, and go to state 123
    TOKEN_REAL_NUM      shift, and go to state 71
    TOKEN_INTEGER       shift, and go to state 3
    TOKEN_IF            shift, and go to state 33

    arrayIdentifier             go to state 73
    arithmeticExpression        go to state 229
    simpleArithmeticExpression  go to state 162
    term                        go to state 77
    factor                      go to state 78
    primary                     go to state 79
    unsignedNumber              go to state 80
    realNumber                  go to state 81
    integer                     go to state 82
    simpleVariable              go to state 83
    variable                    go to state 125
    subscriptedVariable         go to state 85
    identifier                  go to state 86
    varIdentifier               go to state 97
    ifClause                    go to state 98


state 218

  119 parameterDelimiter: TOKEN_CLOSE_SQUARE_BRACKET identifier TOKEN_COLON TOKEN_OPEN_SQUARE_BRACKET .

    $default  reduce using rule 119 (parameterDelimiter)


state 219

  127 formalParameterList: formalParameterList parameterDelimiter $@6 . formalParameter

    TOKEN_IDENTIFIER  shift, and go to state 1

    identifier       go to state 202
    formalParameter  go to state 230


state 220

  131 identifierList: identifier .

    $default  reduce using rule 131 (identifierList)


state 221

  132 identifierList: identifierList . TOKEN_COMMA identifier
  133 valuePart: TOKEN_VALUE identifierList . TOKEN_SEMICOLON

    TOKEN_COMMA      shift, and go to state 231
    TOKEN_SEMICOLON  shift, and go to state 232


state 222

  138 specifier: TOKEN_SWITCH .

    $default  reduce using rule 138 (specifier)


state 223

  137 specifier: TOKEN_TYPE_LABEL .

    $default  reduce using rule 137 (specifier)


state 224

  135 specifier: type .
  136          | type . TOKEN_ARRAY
  139          | type . TOKEN_PROCEDURE

    TOKEN_PROCEDURE  shift, and go to state 233
    TOKEN_ARRAY      shift, and go to state 234

    $default  reduce using rule 135 (specifier)


state 225

  140 specificationPart: empty .

    $default  reduce using rule 140 (specificationPart)


state 226

  142 specificationIdentifierList: specifier . identifierList TOKEN_SEMICOLON

    TOKEN_IDENTIFIER  shift, and go to state 1

    identifier      go to state 220
    identifierList  go to state 235


state 227

  146 procedureHeading: procedureIdentifier @8 formalParameterPart TOKEN_SEMICOLON $@9 valuePart specificationPart .

    $default  reduce using rule 146 (procedureHeading)


state 228

  141 specificationPart: specificationIdentifierList .
  143 specificationIdentifierList: specificationIdentifierList . specifier identifierList TOKEN_SEMICOLON

    TOKEN_SWITCH        shift, and go to state 222
    TOKEN_TYPE_INTEGER  shift, and go to state 22
    TOKEN_TYPE_REAL     shift, and go to state 23
    TOKEN_TYPE_BOOLEAN  shift, and go to state 24
    TOKEN_TYPE_LABEL    shift, and go to state 223

    $default  reduce using rule 141 (specificationPart)

    type       go to state 224
    specifier  go to state 236


state 229

  109 forStatement: TOKEN_FOR variable TOKEN_ASSIGN arithmeticExpression TOKEN_STEP arithmeticExpression TOKEN_UNTIL arithmeticExpression . TOKEN_DO statement

    TOKEN_DO  shift, and go to state 237


state 230

  127 formalParameterList: formalParameterList parameterDelimiter $@6 formalParameter .

    $default  reduce using rule 127 (formalParameterList)


state 231

  132 identifierList: identifierList TOKEN_COMMA . identifier

    TOKEN_IDENTIFIER  shift, and go to state 1

    identifier  go to state 238


state 232

  133 valuePart: TOKEN_VALUE identifierList TOKEN_SEMICOLON .

    $default  reduce using rule 133 (valuePart)


state 233

  139 specifier: type TOKEN_PROCEDURE .

    $default  reduce using rule 139 (specifier)


state 234

  136 specifier: type TOKEN_ARRAY .

    $default  reduce using rule 136 (specifier)


state 235

  132 identifierList: identifierList . TOKEN_COMMA identifier
  142 specificationIdentifierList: specifier identifierList . TOKEN_SEMICOLON

    TOKEN_COMMA      shift, and go to state 231
    TOKEN_SEMICOLON  shift, and go to state 239


state 236

  143 specificationIdentifierList: specificationIdentifierList specifier . identifierList TOKEN_SEMICOLON

    TOKEN_IDENTIFIER  shift, and go to state 1

    identifier      go to state 220
    identifierList  go to state 240


state 237

  109 forStatement: TOKEN_FOR variable TOKEN_ASSIGN arithmeticExpression TOKEN_STEP arithmeticExpression TOKEN_UNTIL arithmeticExpression TOKEN_DO . statement

    TOKEN_PRINT       shift, and go to state 31
    TOKEN_IDENTIFIER  shift, and go to state 1
    TOKEN_BEGIN       shift, and go to state 2
    TOKEN_INTEGER     shift, and go to state 3
    TOKEN_FOR         shift, and go to state 32
    TOKEN_IF          shift, and go to state 33

    $default  reduce using rule 110 (empty)

    blockHead                 go to state 4
    unlabelledBlock           go to state 5
    block                     go to state 34
    tlabel                    go to state 35
    label                     go to state 36
    unlabelledCompound        go to state 10
    compoundStatement         go to state 37
    integer                   go to state 12
    identifier                go to state 39
    unconditionalStatement    go to state 40
    conditionalStatement      go to state 41
    ifStatement               go to state 42
    ifClause                  go to state 43
    basicStatement            go to state 44
    unlabelledBasicStatement  go to state 45
    dummyStatement            go to state 46
    assignmentStatement       go to state 47
    forStatement              go to state 48
    empty                     go to state 49
    procedureStatement        go to state 50
    procedureIdentifier       go to state 51
    statement                 go to state 241


state 238

  132 identifierList: identifierList TOKEN_COMMA identifier .

    $default  reduce using rule 132 (identifierList)


state 239

  142 specificationIdentifierList: specifier identifierList TOKEN_SEMICOLON .

    $default  reduce using rule 142 (specificationIdentifierList)


state 240

  132 identifierList: identifierList . TOKEN_COMMA identifier
  143 specificationIdentifierList: specificationIdentifierList specifier identifierList . TOKEN_SEMICOLON

    TOKEN_COMMA      shift, and go to state 231
    TOKEN_SEMICOLON  shift, and go to state 242


state 241

  109 forStatement: TOKEN_FOR variable TOKEN_ASSIGN arithmeticExpression TOKEN_STEP arithmeticExpression TOKEN_UNTIL arithmeticExpression TOKEN_DO statement .

    $default  reduce using rule 109 (forStatement)


state 242

  143 specificationIdentifierList: specificationIdentifierList specifier identifierList TOKEN_SEMICOLON .

    $default  reduce using rule 143 (specificationIdentifierList)
