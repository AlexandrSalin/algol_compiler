Terminals unused in grammar

   TOKEN_OPERATOR
   TOKEN_OR
   TOKEN_UNDERSCORE
   TOKEN_SPECIFIER
   TOKEN_LIBRARY
   TOKEN_BRACKET
   TOKEN_CONTINUE
   TOKEN_LESS_EQUAL
   TOKEN_GREATER
   TOKEN_GREATER_EQUAL
   TOKEN_EQUAL
   TOKEN_LESS
   TOKEN_NOTEQUAL
   TOKEN_GOTO
   TOKEN_WHILE
   TOKEN_BOOLEAN
   TOKEN_TYPE_OWN
   TOKEN_TYPE_ARRAY
   TOKEN_TYPE_SWITCH
   TOKEN_TYPE_PROCEDURE
   TOKEN_TYPE_STRING
   TOKEN_TYPE_VALUE
   TOKEN_LTRSTRING
   TOKEN_ASSIGN_IDENTIFIER
   TOKEN_LABEL_IDENTIFIER
   TOKEN_BOOL_IDENTIFIER
   TOKEN_NOT_EQUAL


Grammar

    0 $accept: program $end

    1 blockHead: TOKEN_BEGIN declaration
    2          | blockHead TOKEN_SEMICOLON declaration

    3 unlabelledBlock: blockHead TOKEN_SEMICOLON compoundTail

    4 block: unlabelledBlock
    5      | tlabel block

    6 tlabel: label TOKEN_COLON

    7 label: identifier
    8      | integer

    9 program: compoundStatement
   10        | block

   11 @1: /* empty */

   12 unlabelledCompound: TOKEN_BEGIN @1

   13 compoundStatement: unlabelledCompound
   14                  | tlabel compoundStatement

   15 compoundTail: statement TOKEN_END
   16             | statement TOKEN_SEMICOLON compoundTail

   17 declaration: typeDeclaration
   18            | arrayDeclaration
   19            | switchDeclaration
   20            | procedureDeclaration

   21 lowerBound: arithmeticExpression

   22 switchList: designationalExpression
   23           | switchList TOKEN_COMMA designationalExpression

   24 switchDeclaration: TOKEN_SWITCH switchIdentifier TOKEN_ASSIGN switchList

   25 upperBound: arithmeticExpression

   26 boundPair: lowerBound TOKEN_COLON upperBound

   27 boundPairList: boundPair
   28              | boundPairList TOKEN_COMMA boundPair

   29 arrayIdentifier: identifier

   30 arraySegment: arrayIdentifier TOKEN_OPEN_SQUARE_BRACKET boundPairList TOKEN_CLOSE_SQUARE_BRACKET
   31             | arrayIdentifier TOKEN_COMMA arraySegment

   32 arrayList: arraySegment
   33          | arrayList TOKEN_COMMA arraySegment

   34 arrayDeclaration: type TOKEN_ARRAY arrayList

   35 expression: arithmeticExpression
   36           | booleanExpression
   37           | designationalExpression

   38 switchIdentifier: identifier

   39 switchDesignator: switchIdentifier TOKEN_OPEN_CURLY_BRACKET subscriptExpression TOKEN_CLOSE_CURLY_BRACKET

   40 simpleDesignationalExpression: tlabel
   41                              | switchDesignator
   42                              | TOKEN_OPEN_BRACKET designationalExpression TOKEN_CLOSE_BRACKET

   43 designationalExpression: simpleDesignationalExpression
   44                        | ifClause simpleDesignationalExpression TOKEN_ELSE designationalExpression

   45 arithmeticExpression: simpleArithmeticExpression

   46 simpleArithmeticExpression: term
   47                           | TOKEN_PLUS term
   48                           | TOKEN_MINUS term
   49                           | simpleArithmeticExpression TOKEN_PLUS term
   50                           | simpleArithmeticExpression TOKEN_MINUS term

   51 term: factor
   52     | term TOKEN_MULTIPLY factor
   53     | term TOKEN_DIVIDE factor

   54 factor: primary
   55       | factor TOKEN_POWER primary

   56 primary: unsignedNumber
   57        | functionDesignator
   58        | variable
   59        | TOKEN_OPEN_BRACKET arithmeticExpression TOKEN_CLOSE_BRACKET

   60 unsignedNumber: realNumber
   61               | integer

   62 realNumber: TOKEN_REAL_NUM

   63 integer: TOKEN_INTEGER

   64 simpleVariable: varIdentifier

   65 variable: simpleVariable
   66         | subscriptedVariable

   67 subscriptedVariable: arrayIdentifier TOKEN_OPEN_SQUARE_BRACKET subscriptList TOKEN_CLOSE_SQUARE_BRACKET

   68 subscriptList: subscriptExpression
   69              | subscriptList TOKEN_COMMA subscriptExpression

   70 subscriptExpression: arithmeticExpression

   71 identifier: TOKEN_IDENTIFIER

   72 booleanExpression: simpleBoolean

   73 simpleBoolean: implication
   74              | simpleBoolean TOKEN_EQUIV implication

   75 implication: booleanTerm
   76            | implication TOKEN_IMPLY booleanTerm

   77 booleanTerm: booleanFactor
   78            | booleanTerm TOKEN_OR_OP booleanFactor

   79 booleanFactor: booleanSecondary
   80              | booleanFactor TOKEN_AND_OP booleanSecondary

   81 booleanSecondary: booleanPrimary
   82                 | TOKEN_NOT_OP booleanPrimary

   83 booleanPrimary: logicalValue
   84               | relation
   85               | TOKEN_OPEN_BRACKET booleanExpression TOKEN_CLOSE_BRACKET

   86 logicalValue: TOKEN_LOGICAL_VALUE

   87 relation: simpleArithmeticExpression relationalOperator simpleArithmeticExpression

   88 relationalOperator: TOKEN_REL_OP

   89 listType: varIdentifier
   90         | listType TOKEN_COMMA varIdentifier

   91 type: TOKEN_TYPE_REAL
   92     | TOKEN_TYPE_INTEGER
   93     | TOKEN_TYPE_BOOLEAN

   94 typeDeclaration: type listType

   95 varIdentifier: identifier

   96 unconditionalStatement: basicStatement
   97                       | compoundStatement
   98                       | block

   99 conditionalStatement: ifStatement
  100                     | ifStatement TOKEN_ELSE statement
  101                     | ifClause forStatement
  102                     | tlabel conditionalStatement

  103 ifStatement: ifClause unconditionalStatement

  104 ifClause: TOKEN_IF booleanExpression TOKEN_THEN

  105 basicStatement: unlabelledBasicStatement
  106               | tlabel basicStatement

  107 unlabelledBasicStatement: assignmentStatement
  108                         | dummyStatement
  109                         | procedureStatement
  110                         | returnStatement

  111 dummyStatement: empty

  112 returnStatement: TOKEN_RETURN expression

  113 assignmentStatement: variable TOKEN_ASSIGN arithmeticExpression
  114                    | variable TOKEN_ASSIGN booleanExpression

  115 forStatement: TOKEN_FOR variable TOKEN_ASSIGN arithmeticExpression TOKEN_STEP arithmeticExpression TOKEN_UNTIL arithmeticExpression TOKEN_DO statement

  116 empty: /* empty */

  117 procedureStatement: procedureIdentifier actualParameterPart

  118 procedureIdentifier: identifier

  119 actualParameterPart: TOKEN_OPEN_BRACKET TOKEN_CLOSE_BRACKET
  120                    | TOKEN_OPEN_BRACKET actualParameterList TOKEN_CLOSE_BRACKET

  121 actualParameterList: actualParameter
  122                    | actualParameterList parameterDelimiter actualParameter

  123 actualParameter: expression

  124 parameterDelimiter: TOKEN_COMMA
  125                   | TOKEN_CLOSE_BRACKET identifier TOKEN_COLON TOKEN_OPEN_BRACKET

  126 functionDesignator: procedureIdentifier actualParameterPart

  127 statement: unconditionalStatement
  128          | conditionalStatement
  129          | forStatement
  130          | TOKEN_PRINT expression

  131 formalParameter: identifier

  132 formalParameterList: formalParameter
  133                    | formalParameterList parameterDelimiter formalParameter

  134 formalParameterPart: empty

  135 $@2: /* empty */

  136 formalParameterPart: TOKEN_OPEN_BRACKET $@2 formalParameterList TOKEN_CLOSE_BRACKET

  137 identifierList: identifier
  138               | identifierList TOKEN_COMMA identifier

  139 valuePart: TOKEN_VALUE identifierList TOKEN_SEMICOLON
  140          | empty

  141 specifier: type
  142          | type TOKEN_ARRAY
  143          | TOKEN_TYPE_LABEL
  144          | TOKEN_SWITCH
  145          | type TOKEN_PROCEDURE

  146 specificationPart: empty
  147                  | specificationIdentifierList

  148 specificationIdentifierList: specifier identifierList TOKEN_SEMICOLON
  149                            | specificationIdentifierList specifier identifierList TOKEN_SEMICOLON

  150 @3: /* empty */

  151 $@4: /* empty */

  152 procedureHeading: procedureIdentifier @3 formalParameterPart TOKEN_SEMICOLON $@4 valuePart specificationPart

  153 procedureBody: statement

  154 procedureDeclaration: TOKEN_PROCEDURE procedureHeading procedureBody
  155                     | type TOKEN_PROCEDURE procedureHeading procedureBody


Terminals, with rules where they appear

$end (0) 0
error (256)
TOKEN_PRINT (258) 130
TOKEN_IDENTIFIER (259) 71
TOKEN_BEGIN (260) 1 12
TOKEN_END (261) 15
TOKEN_LOGICAL_VALUE (262) 86
TOKEN_OPERATOR (263)
TOKEN_OR (264)
TOKEN_PROCEDURE (265) 145 154 155
TOKEN_PLUS (266) 47 49
TOKEN_MINUS (267) 48 50
TOKEN_DIVIDE (268) 53
TOKEN_POWER (269) 55
TOKEN_MULTIPLY (270) 52
TOKEN_COMMA (271) 23 28 31 33 69 90 124 138
TOKEN_UNDERSCORE (272)
TOKEN_SPECIFIER (273)
TOKEN_LIBRARY (274)
TOKEN_BRACKET (275)
TOKEN_OPEN_BRACKET (276) 42 59 85 119 120 125 136
TOKEN_CLOSE_BRACKET (277) 42 59 85 119 120 125 136
TOKEN_OPEN_SQUARE_BRACKET (278) 30 67
TOKEN_CLOSE_SQUARE_BRACKET (279) 30 67
TOKEN_OPEN_CURLY_BRACKET (280) 39
TOKEN_CLOSE_CURLY_BRACKET (281) 39
TOKEN_CONTINUE (282)
TOKEN_REAL_NUM (283) 62
TOKEN_INTEGER (284) 63
TOKEN_COLON (285) 6 26 125
TOKEN_REL_OP (286) 88
TOKEN_LESS_EQUAL (287)
TOKEN_GREATER (288)
TOKEN_GREATER_EQUAL (289)
TOKEN_EQUAL (290)
TOKEN_LESS (291)
TOKEN_NOTEQUAL (292)
TOKEN_EQUIV (293) 74
TOKEN_AND_OP (294) 80
TOKEN_OR_OP (295) 78
TOKEN_NOT_OP (296) 82
TOKEN_GOTO (297)
TOKEN_FOR (298) 115
TOKEN_DO (299) 115
TOKEN_WHILE (300)
TOKEN_STEP (301) 115
TOKEN_UNTIL (302) 115
TOKEN_IF (303) 104
TOKEN_THEN (304) 104
TOKEN_ELSE (305) 44 100
TOKEN_SWITCH (306) 24 144
TOKEN_VALUE (307) 139
TOKEN_BOOLEAN (308)
TOKEN_TYPE_OWN (309)
TOKEN_TYPE_INTEGER (310) 92
TOKEN_TYPE_REAL (311) 91
TOKEN_TYPE_BOOLEAN (312) 93
TOKEN_TYPE_ARRAY (313)
TOKEN_TYPE_SWITCH (314)
TOKEN_TYPE_PROCEDURE (315)
TOKEN_TYPE_STRING (316)
TOKEN_TYPE_LABEL (317) 143
TOKEN_TYPE_VALUE (318)
TOKEN_ARRAY (319) 34 142
TOKEN_IMPLY (320) 76
TOKEN_SEMICOLON (321) 2 3 16 139 148 149 152
TOKEN_LTRSTRING (322)
TOKEN_RETURN (323) 112
TOKEN_ASSIGN_IDENTIFIER (324)
TOKEN_LABEL_IDENTIFIER (325)
TOKEN_BOOL_IDENTIFIER (326)
TOKEN_ASSIGN (327) 24 113 114 115
TOKEN_NOT_EQUAL (328)


Nonterminals, with rules where they appear

$accept (74)
    on left: 0
blockHead (75)
    on left: 1 2, on right: 2 3
unlabelledBlock (76)
    on left: 3, on right: 4
block (77)
    on left: 4 5, on right: 5 10 98
tlabel (78)
    on left: 6, on right: 5 14 40 102 106
label (79)
    on left: 7 8, on right: 6
program (80)
    on left: 9 10, on right: 0
unlabelledCompound (81)
    on left: 12, on right: 13
@1 (82)
    on left: 11, on right: 12
compoundStatement (83)
    on left: 13 14, on right: 9 14 97
compoundTail (84)
    on left: 15 16, on right: 3 16
declaration (85)
    on left: 17 18 19 20, on right: 1 2
lowerBound (86)
    on left: 21, on right: 26
switchList (87)
    on left: 22 23, on right: 23 24
switchDeclaration (88)
    on left: 24, on right: 19
upperBound (89)
    on left: 25, on right: 26
boundPair (90)
    on left: 26, on right: 27 28
boundPairList (91)
    on left: 27 28, on right: 28 30
arrayIdentifier (92)
    on left: 29, on right: 30 31 67
arraySegment (93)
    on left: 30 31, on right: 31 32 33
arrayList (94)
    on left: 32 33, on right: 33 34
arrayDeclaration (95)
    on left: 34, on right: 18
expression (96)
    on left: 35 36 37, on right: 112 123 130
switchIdentifier (97)
    on left: 38, on right: 24 39
switchDesignator (98)
    on left: 39, on right: 41
simpleDesignationalExpression (99)
    on left: 40 41 42, on right: 43 44
designationalExpression (100)
    on left: 43 44, on right: 22 23 37 42 44
arithmeticExpression (101)
    on left: 45, on right: 21 25 35 59 70 113 115
simpleArithmeticExpression (102)
    on left: 46 47 48 49 50, on right: 45 49 50 87
term (103)
    on left: 51 52 53, on right: 46 47 48 49 50 52 53
factor (104)
    on left: 54 55, on right: 51 52 53 55
primary (105)
    on left: 56 57 58 59, on right: 54 55
unsignedNumber (106)
    on left: 60 61, on right: 56
realNumber (107)
    on left: 62, on right: 60
integer (108)
    on left: 63, on right: 8 61
simpleVariable (109)
    on left: 64, on right: 65
variable (110)
    on left: 65 66, on right: 58 113 114 115
subscriptedVariable (111)
    on left: 67, on right: 66
subscriptList (112)
    on left: 68 69, on right: 67 69
subscriptExpression (113)
    on left: 70, on right: 39 68 69
identifier (114)
    on left: 71, on right: 7 29 38 95 118 125 131 137 138
booleanExpression (115)
    on left: 72, on right: 36 85 104 114
simpleBoolean (116)
    on left: 73 74, on right: 72 74
implication (117)
    on left: 75 76, on right: 73 74 76
booleanTerm (118)
    on left: 77 78, on right: 75 76 78
booleanFactor (119)
    on left: 79 80, on right: 77 78 80
booleanSecondary (120)
    on left: 81 82, on right: 79 80
booleanPrimary (121)
    on left: 83 84 85, on right: 81 82
logicalValue (122)
    on left: 86, on right: 83
relation (123)
    on left: 87, on right: 84
relationalOperator (124)
    on left: 88, on right: 87
listType (125)
    on left: 89 90, on right: 90 94
type (126)
    on left: 91 92 93, on right: 34 94 141 142 145 155
typeDeclaration (127)
    on left: 94, on right: 17
varIdentifier (128)
    on left: 95, on right: 64 89 90
unconditionalStatement (129)
    on left: 96 97 98, on right: 103 127
conditionalStatement (130)
    on left: 99 100 101 102, on right: 102 128
ifStatement (131)
    on left: 103, on right: 99 100
ifClause (132)
    on left: 104, on right: 44 101 103
basicStatement (133)
    on left: 105 106, on right: 96 106
unlabelledBasicStatement (134)
    on left: 107 108 109 110, on right: 105
dummyStatement (135)
    on left: 111, on right: 108
returnStatement (136)
    on left: 112, on right: 110
assignmentStatement (137)
    on left: 113 114, on right: 107
forStatement (138)
    on left: 115, on right: 101 129
empty (139)
    on left: 116, on right: 111 134 140 146
procedureStatement (140)
    on left: 117, on right: 109
procedureIdentifier (141)
    on left: 118, on right: 117 126 152
actualParameterPart (142)
    on left: 119 120, on right: 117 126
actualParameterList (143)
    on left: 121 122, on right: 120 122
actualParameter (144)
    on left: 123, on right: 121 122
parameterDelimiter (145)
    on left: 124 125, on right: 122 133
functionDesignator (146)
    on left: 126, on right: 57
statement (147)
    on left: 127 128 129 130, on right: 15 16 100 115 153
formalParameter (148)
    on left: 131, on right: 132 133
formalParameterList (149)
    on left: 132 133, on right: 133 136
formalParameterPart (150)
    on left: 134 136, on right: 152
$@2 (151)
    on left: 135, on right: 136
identifierList (152)
    on left: 137 138, on right: 138 139 148 149
valuePart (153)
    on left: 139 140, on right: 152
specifier (154)
    on left: 141 142 143 144 145, on right: 148 149
specificationPart (155)
    on left: 146 147, on right: 152
specificationIdentifierList (156)
    on left: 148 149, on right: 147 149
procedureHeading (157)
    on left: 152, on right: 154 155
@3 (158)
    on left: 150, on right: 152
$@4 (159)
    on left: 151, on right: 152
procedureBody (160)
    on left: 153, on right: 154 155
procedureDeclaration (161)
    on left: 154 155, on right: 20


state 0

    0 $accept: . program $end

    TOKEN_IDENTIFIER  shift, and go to state 1
    TOKEN_BEGIN       shift, and go to state 2
    TOKEN_INTEGER     shift, and go to state 3

    blockHead           go to state 4
    unlabelledBlock     go to state 5
    block               go to state 6
    tlabel              go to state 7
    label               go to state 8
    program             go to state 9
    unlabelledCompound  go to state 10
    compoundStatement   go to state 11
    integer             go to state 12
    identifier          go to state 13


state 1

   71 identifier: TOKEN_IDENTIFIER .

    $default  reduce using rule 71 (identifier)


state 2

    1 blockHead: TOKEN_BEGIN . declaration
   12 unlabelledCompound: TOKEN_BEGIN . @1

    TOKEN_PROCEDURE     shift, and go to state 14
    TOKEN_SWITCH        shift, and go to state 15
    TOKEN_TYPE_INTEGER  shift, and go to state 16
    TOKEN_TYPE_REAL     shift, and go to state 17
    TOKEN_TYPE_BOOLEAN  shift, and go to state 18

    $default  reduce using rule 11 (@1)

    @1                    go to state 19
    declaration           go to state 20
    switchDeclaration     go to state 21
    arrayDeclaration      go to state 22
    type                  go to state 23
    typeDeclaration       go to state 24
    procedureDeclaration  go to state 25


state 3

   63 integer: TOKEN_INTEGER .

    $default  reduce using rule 63 (integer)


state 4

    2 blockHead: blockHead . TOKEN_SEMICOLON declaration
    3 unlabelledBlock: blockHead . TOKEN_SEMICOLON compoundTail

    TOKEN_SEMICOLON  shift, and go to state 26


state 5

    4 block: unlabelledBlock .

    $default  reduce using rule 4 (block)


state 6

   10 program: block .

    $default  reduce using rule 10 (program)


state 7

    5 block: tlabel . block
   14 compoundStatement: tlabel . compoundStatement

    TOKEN_IDENTIFIER  shift, and go to state 1
    TOKEN_BEGIN       shift, and go to state 2
    TOKEN_INTEGER     shift, and go to state 3

    blockHead           go to state 4
    unlabelledBlock     go to state 5
    block               go to state 27
    tlabel              go to state 7
    label               go to state 8
    unlabelledCompound  go to state 10
    compoundStatement   go to state 28
    integer             go to state 12
    identifier          go to state 13


state 8

    6 tlabel: label . TOKEN_COLON

    TOKEN_COLON  shift, and go to state 29


state 9

    0 $accept: program . $end

    $end  shift, and go to state 30


state 10

   13 compoundStatement: unlabelledCompound .

    $default  reduce using rule 13 (compoundStatement)


state 11

    9 program: compoundStatement .

    $default  reduce using rule 9 (program)


state 12

    8 label: integer .

    $default  reduce using rule 8 (label)


state 13

    7 label: identifier .

    $default  reduce using rule 7 (label)


state 14

  154 procedureDeclaration: TOKEN_PROCEDURE . procedureHeading procedureBody

    TOKEN_IDENTIFIER  shift, and go to state 1

    identifier           go to state 31
    procedureIdentifier  go to state 32
    procedureHeading     go to state 33


state 15

   24 switchDeclaration: TOKEN_SWITCH . switchIdentifier TOKEN_ASSIGN switchList

    TOKEN_IDENTIFIER  shift, and go to state 1

    switchIdentifier  go to state 34
    identifier        go to state 35


state 16

   92 type: TOKEN_TYPE_INTEGER .

    $default  reduce using rule 92 (type)


state 17

   91 type: TOKEN_TYPE_REAL .

    $default  reduce using rule 91 (type)


state 18

   93 type: TOKEN_TYPE_BOOLEAN .

    $default  reduce using rule 93 (type)


state 19

   12 unlabelledCompound: TOKEN_BEGIN @1 .

    $default  reduce using rule 12 (unlabelledCompound)


state 20

    1 blockHead: TOKEN_BEGIN declaration .

    $default  reduce using rule 1 (blockHead)


state 21

   19 declaration: switchDeclaration .

    $default  reduce using rule 19 (declaration)


state 22

   18 declaration: arrayDeclaration .

    $default  reduce using rule 18 (declaration)


state 23

   34 arrayDeclaration: type . TOKEN_ARRAY arrayList
   94 typeDeclaration: type . listType
  155 procedureDeclaration: type . TOKEN_PROCEDURE procedureHeading procedureBody

    TOKEN_IDENTIFIER  shift, and go to state 1
    TOKEN_PROCEDURE   shift, and go to state 36
    TOKEN_ARRAY       shift, and go to state 37

    identifier     go to state 38
    listType       go to state 39
    varIdentifier  go to state 40


state 24

   17 declaration: typeDeclaration .

    $default  reduce using rule 17 (declaration)


state 25

   20 declaration: procedureDeclaration .

    $default  reduce using rule 20 (declaration)


state 26

    2 blockHead: blockHead TOKEN_SEMICOLON . declaration
    3 unlabelledBlock: blockHead TOKEN_SEMICOLON . compoundTail

    TOKEN_PRINT         shift, and go to state 41
    TOKEN_IDENTIFIER    shift, and go to state 1
    TOKEN_BEGIN         shift, and go to state 2
    TOKEN_PROCEDURE     shift, and go to state 14
    TOKEN_INTEGER       shift, and go to state 3
    TOKEN_FOR           shift, and go to state 42
    TOKEN_IF            shift, and go to state 43
    TOKEN_SWITCH        shift, and go to state 15
    TOKEN_TYPE_INTEGER  shift, and go to state 16
    TOKEN_TYPE_REAL     shift, and go to state 17
    TOKEN_TYPE_BOOLEAN  shift, and go to state 18
    TOKEN_RETURN        shift, and go to state 44

    $default  reduce using rule 116 (empty)

    blockHead                 go to state 4
    unlabelledBlock           go to state 5
    block                     go to state 45
    tlabel                    go to state 46
    label                     go to state 8
    unlabelledCompound        go to state 10
    compoundStatement         go to state 47
    compoundTail              go to state 48
    declaration               go to state 49
    switchDeclaration         go to state 21
    arrayIdentifier           go to state 50
    arrayDeclaration          go to state 22
    integer                   go to state 12
    simpleVariable            go to state 51
    variable                  go to state 52
    subscriptedVariable       go to state 53
    identifier                go to state 54
    type                      go to state 23
    typeDeclaration           go to state 24
    varIdentifier             go to state 55
    unconditionalStatement    go to state 56
    conditionalStatement      go to state 57
    ifStatement               go to state 58
    ifClause                  go to state 59
    basicStatement            go to state 60
    unlabelledBasicStatement  go to state 61
    dummyStatement            go to state 62
    returnStatement           go to state 63
    assignmentStatement       go to state 64
    forStatement              go to state 65
    empty                     go to state 66
    procedureStatement        go to state 67
    procedureIdentifier       go to state 68
    statement                 go to state 69
    procedureDeclaration      go to state 25


state 27

    5 block: tlabel block .

    $default  reduce using rule 5 (block)


state 28

   14 compoundStatement: tlabel compoundStatement .

    $default  reduce using rule 14 (compoundStatement)


state 29

    6 tlabel: label TOKEN_COLON .

    $default  reduce using rule 6 (tlabel)


state 30

    0 $accept: program $end .

    $default  accept


state 31

  118 procedureIdentifier: identifier .

    $default  reduce using rule 118 (procedureIdentifier)


state 32

  152 procedureHeading: procedureIdentifier . @3 formalParameterPart TOKEN_SEMICOLON $@4 valuePart specificationPart

    $default  reduce using rule 150 (@3)

    @3  go to state 70


state 33

  154 procedureDeclaration: TOKEN_PROCEDURE procedureHeading . procedureBody

    TOKEN_PRINT       shift, and go to state 41
    TOKEN_IDENTIFIER  shift, and go to state 1
    TOKEN_BEGIN       shift, and go to state 2
    TOKEN_INTEGER     shift, and go to state 3
    TOKEN_FOR         shift, and go to state 42
    TOKEN_IF          shift, and go to state 43
    TOKEN_RETURN      shift, and go to state 44

    $default  reduce using rule 116 (empty)

    blockHead                 go to state 4
    unlabelledBlock           go to state 5
    block                     go to state 45
    tlabel                    go to state 46
    label                     go to state 8
    unlabelledCompound        go to state 10
    compoundStatement         go to state 47
    arrayIdentifier           go to state 50
    integer                   go to state 12
    simpleVariable            go to state 51
    variable                  go to state 52
    subscriptedVariable       go to state 53
    identifier                go to state 54
    varIdentifier             go to state 55
    unconditionalStatement    go to state 56
    conditionalStatement      go to state 57
    ifStatement               go to state 58
    ifClause                  go to state 59
    basicStatement            go to state 60
    unlabelledBasicStatement  go to state 61
    dummyStatement            go to state 62
    returnStatement           go to state 63
    assignmentStatement       go to state 64
    forStatement              go to state 65
    empty                     go to state 66
    procedureStatement        go to state 67
    procedureIdentifier       go to state 68
    statement                 go to state 71
    procedureBody             go to state 72


state 34

   24 switchDeclaration: TOKEN_SWITCH switchIdentifier . TOKEN_ASSIGN switchList

    TOKEN_ASSIGN  shift, and go to state 73


state 35

   38 switchIdentifier: identifier .

    $default  reduce using rule 38 (switchIdentifier)


state 36

  155 procedureDeclaration: type TOKEN_PROCEDURE . procedureHeading procedureBody

    TOKEN_IDENTIFIER  shift, and go to state 1

    identifier           go to state 31
    procedureIdentifier  go to state 32
    procedureHeading     go to state 74


state 37

   34 arrayDeclaration: type TOKEN_ARRAY . arrayList

    TOKEN_IDENTIFIER  shift, and go to state 1

    arrayIdentifier  go to state 75
    arraySegment     go to state 76
    arrayList        go to state 77
    identifier       go to state 78


state 38

   95 varIdentifier: identifier .

    $default  reduce using rule 95 (varIdentifier)


state 39

   90 listType: listType . TOKEN_COMMA varIdentifier
   94 typeDeclaration: type listType .

    TOKEN_COMMA  shift, and go to state 79

    $default  reduce using rule 94 (typeDeclaration)


state 40

   89 listType: varIdentifier .

    $default  reduce using rule 89 (listType)


state 41

  130 statement: TOKEN_PRINT . expression

    TOKEN_IDENTIFIER     shift, and go to state 1
    TOKEN_LOGICAL_VALUE  shift, and go to state 80
    TOKEN_PLUS           shift, and go to state 81
    TOKEN_MINUS          shift, and go to state 82
    TOKEN_OPEN_BRACKET   shift, and go to state 83
    TOKEN_REAL_NUM       shift, and go to state 84
    TOKEN_INTEGER        shift, and go to state 3
    TOKEN_NOT_OP         shift, and go to state 85
    TOKEN_IF             shift, and go to state 43

    tlabel                         go to state 86
    label                          go to state 8
    arrayIdentifier                go to state 50
    expression                     go to state 87
    switchIdentifier               go to state 88
    switchDesignator               go to state 89
    simpleDesignationalExpression  go to state 90
    designationalExpression        go to state 91
    arithmeticExpression           go to state 92
    simpleArithmeticExpression     go to state 93
    term                           go to state 94
    factor                         go to state 95
    primary                        go to state 96
    unsignedNumber                 go to state 97
    realNumber                     go to state 98
    integer                        go to state 99
    simpleVariable                 go to state 51
    variable                       go to state 100
    subscriptedVariable            go to state 53
    identifier                     go to state 101
    booleanExpression              go to state 102
    simpleBoolean                  go to state 103
    implication                    go to state 104
    booleanTerm                    go to state 105
    booleanFactor                  go to state 106
    booleanSecondary               go to state 107
    booleanPrimary                 go to state 108
    logicalValue                   go to state 109
    relation                       go to state 110
    varIdentifier                  go to state 55
    ifClause                       go to state 111
    procedureIdentifier            go to state 112
    functionDesignator             go to state 113


state 42

  115 forStatement: TOKEN_FOR . variable TOKEN_ASSIGN arithmeticExpression TOKEN_STEP arithmeticExpression TOKEN_UNTIL arithmeticExpression TOKEN_DO statement

    TOKEN_IDENTIFIER  shift, and go to state 1

    arrayIdentifier      go to state 50
    simpleVariable       go to state 51
    variable             go to state 114
    subscriptedVariable  go to state 53
    identifier           go to state 115
    varIdentifier        go to state 55


state 43

  104 ifClause: TOKEN_IF . booleanExpression TOKEN_THEN

    TOKEN_IDENTIFIER     shift, and go to state 1
    TOKEN_LOGICAL_VALUE  shift, and go to state 80
    TOKEN_PLUS           shift, and go to state 81
    TOKEN_MINUS          shift, and go to state 82
    TOKEN_OPEN_BRACKET   shift, and go to state 116
    TOKEN_REAL_NUM       shift, and go to state 84
    TOKEN_INTEGER        shift, and go to state 3
    TOKEN_NOT_OP         shift, and go to state 85

    arrayIdentifier             go to state 50
    simpleArithmeticExpression  go to state 117
    term                        go to state 94
    factor                      go to state 95
    primary                     go to state 96
    unsignedNumber              go to state 97
    realNumber                  go to state 98
    integer                     go to state 118
    simpleVariable              go to state 51
    variable                    go to state 100
    subscriptedVariable         go to state 53
    identifier                  go to state 119
    booleanExpression           go to state 120
    simpleBoolean               go to state 103
    implication                 go to state 104
    booleanTerm                 go to state 105
    booleanFactor               go to state 106
    booleanSecondary            go to state 107
    booleanPrimary              go to state 108
    logicalValue                go to state 109
    relation                    go to state 110
    varIdentifier               go to state 55
    procedureIdentifier         go to state 112
    functionDesignator          go to state 113


state 44

  112 returnStatement: TOKEN_RETURN . expression

    TOKEN_IDENTIFIER     shift, and go to state 1
    TOKEN_LOGICAL_VALUE  shift, and go to state 80
    TOKEN_PLUS           shift, and go to state 81
    TOKEN_MINUS          shift, and go to state 82
    TOKEN_OPEN_BRACKET   shift, and go to state 83
    TOKEN_REAL_NUM       shift, and go to state 84
    TOKEN_INTEGER        shift, and go to state 3
    TOKEN_NOT_OP         shift, and go to state 85
    TOKEN_IF             shift, and go to state 43

    tlabel                         go to state 86
    label                          go to state 8
    arrayIdentifier                go to state 50
    expression                     go to state 121
    switchIdentifier               go to state 88
    switchDesignator               go to state 89
    simpleDesignationalExpression  go to state 90
    designationalExpression        go to state 91
    arithmeticExpression           go to state 92
    simpleArithmeticExpression     go to state 93
    term                           go to state 94
    factor                         go to state 95
    primary                        go to state 96
    unsignedNumber                 go to state 97
    realNumber                     go to state 98
    integer                        go to state 99
    simpleVariable                 go to state 51
    variable                       go to state 100
    subscriptedVariable            go to state 53
    identifier                     go to state 101
    booleanExpression              go to state 102
    simpleBoolean                  go to state 103
    implication                    go to state 104
    booleanTerm                    go to state 105
    booleanFactor                  go to state 106
    booleanSecondary               go to state 107
    booleanPrimary                 go to state 108
    logicalValue                   go to state 109
    relation                       go to state 110
    varIdentifier                  go to state 55
    ifClause                       go to state 111
    procedureIdentifier            go to state 112
    functionDesignator             go to state 113


state 45

   98 unconditionalStatement: block .

    $default  reduce using rule 98 (unconditionalStatement)


state 46

    5 block: tlabel . block
   14 compoundStatement: tlabel . compoundStatement
  102 conditionalStatement: tlabel . conditionalStatement
  106 basicStatement: tlabel . basicStatement

    TOKEN_IDENTIFIER  shift, and go to state 1
    TOKEN_BEGIN       shift, and go to state 2
    TOKEN_INTEGER     shift, and go to state 3
    TOKEN_IF          shift, and go to state 43
    TOKEN_RETURN      shift, and go to state 44

    $default  reduce using rule 116 (empty)

    blockHead                 go to state 4
    unlabelledBlock           go to state 5
    block                     go to state 27
    tlabel                    go to state 46
    label                     go to state 8
    unlabelledCompound        go to state 10
    compoundStatement         go to state 28
    arrayIdentifier           go to state 50
    integer                   go to state 12
    simpleVariable            go to state 51
    variable                  go to state 52
    subscriptedVariable       go to state 53
    identifier                go to state 54
    varIdentifier             go to state 55
    conditionalStatement      go to state 122
    ifStatement               go to state 58
    ifClause                  go to state 59
    basicStatement            go to state 123
    unlabelledBasicStatement  go to state 61
    dummyStatement            go to state 62
    returnStatement           go to state 63
    assignmentStatement       go to state 64
    empty                     go to state 66
    procedureStatement        go to state 67
    procedureIdentifier       go to state 68


state 47

   97 unconditionalStatement: compoundStatement .

    $default  reduce using rule 97 (unconditionalStatement)


state 48

    3 unlabelledBlock: blockHead TOKEN_SEMICOLON compoundTail .

    $default  reduce using rule 3 (unlabelledBlock)


state 49

    2 blockHead: blockHead TOKEN_SEMICOLON declaration .

    $default  reduce using rule 2 (blockHead)


state 50

   67 subscriptedVariable: arrayIdentifier . TOKEN_OPEN_SQUARE_BRACKET subscriptList TOKEN_CLOSE_SQUARE_BRACKET

    TOKEN_OPEN_SQUARE_BRACKET  shift, and go to state 124


state 51

   65 variable: simpleVariable .

    $default  reduce using rule 65 (variable)


state 52

  113 assignmentStatement: variable . TOKEN_ASSIGN arithmeticExpression
  114                    | variable . TOKEN_ASSIGN booleanExpression

    TOKEN_ASSIGN  shift, and go to state 125


state 53

   66 variable: subscriptedVariable .

    $default  reduce using rule 66 (variable)


state 54

    7 label: identifier .
   29 arrayIdentifier: identifier .
   95 varIdentifier: identifier .
  118 procedureIdentifier: identifier .

    TOKEN_OPEN_BRACKET         reduce using rule 118 (procedureIdentifier)
    TOKEN_OPEN_SQUARE_BRACKET  reduce using rule 29 (arrayIdentifier)
    TOKEN_ASSIGN               reduce using rule 95 (varIdentifier)
    $default                   reduce using rule 7 (label)


state 55

   64 simpleVariable: varIdentifier .

    $default  reduce using rule 64 (simpleVariable)


state 56

  127 statement: unconditionalStatement .

    $default  reduce using rule 127 (statement)


state 57

  128 statement: conditionalStatement .

    $default  reduce using rule 128 (statement)


state 58

   99 conditionalStatement: ifStatement .
  100                     | ifStatement . TOKEN_ELSE statement

    TOKEN_ELSE  shift, and go to state 126

    $default  reduce using rule 99 (conditionalStatement)


state 59

  101 conditionalStatement: ifClause . forStatement
  103 ifStatement: ifClause . unconditionalStatement

    TOKEN_IDENTIFIER  shift, and go to state 1
    TOKEN_BEGIN       shift, and go to state 2
    TOKEN_INTEGER     shift, and go to state 3
    TOKEN_FOR         shift, and go to state 42
    TOKEN_RETURN      shift, and go to state 44

    $default  reduce using rule 116 (empty)

    blockHead                 go to state 4
    unlabelledBlock           go to state 5
    block                     go to state 45
    tlabel                    go to state 127
    label                     go to state 8
    unlabelledCompound        go to state 10
    compoundStatement         go to state 47
    arrayIdentifier           go to state 50
    integer                   go to state 12
    simpleVariable            go to state 51
    variable                  go to state 52
    subscriptedVariable       go to state 53
    identifier                go to state 54
    varIdentifier             go to state 55
    unconditionalStatement    go to state 128
    basicStatement            go to state 60
    unlabelledBasicStatement  go to state 61
    dummyStatement            go to state 62
    returnStatement           go to state 63
    assignmentStatement       go to state 64
    forStatement              go to state 129
    empty                     go to state 66
    procedureStatement        go to state 67
    procedureIdentifier       go to state 68


state 60

   96 unconditionalStatement: basicStatement .

    $default  reduce using rule 96 (unconditionalStatement)


state 61

  105 basicStatement: unlabelledBasicStatement .

    $default  reduce using rule 105 (basicStatement)


state 62

  108 unlabelledBasicStatement: dummyStatement .

    $default  reduce using rule 108 (unlabelledBasicStatement)


state 63

  110 unlabelledBasicStatement: returnStatement .

    $default  reduce using rule 110 (unlabelledBasicStatement)


state 64

  107 unlabelledBasicStatement: assignmentStatement .

    $default  reduce using rule 107 (unlabelledBasicStatement)


state 65

  129 statement: forStatement .

    $default  reduce using rule 129 (statement)


state 66

  111 dummyStatement: empty .

    $default  reduce using rule 111 (dummyStatement)


state 67

  109 unlabelledBasicStatement: procedureStatement .

    $default  reduce using rule 109 (unlabelledBasicStatement)


state 68

  117 procedureStatement: procedureIdentifier . actualParameterPart

    TOKEN_OPEN_BRACKET  shift, and go to state 130

    actualParameterPart  go to state 131


state 69

   15 compoundTail: statement . TOKEN_END
   16             | statement . TOKEN_SEMICOLON compoundTail

    TOKEN_END        shift, and go to state 132
    TOKEN_SEMICOLON  shift, and go to state 133


state 70

  152 procedureHeading: procedureIdentifier @3 . formalParameterPart TOKEN_SEMICOLON $@4 valuePart specificationPart

    TOKEN_OPEN_BRACKET  shift, and go to state 134

    $default  reduce using rule 116 (empty)

    empty                go to state 135
    formalParameterPart  go to state 136


state 71

  153 procedureBody: statement .

    $default  reduce using rule 153 (procedureBody)


state 72

  154 procedureDeclaration: TOKEN_PROCEDURE procedureHeading procedureBody .

    $default  reduce using rule 154 (procedureDeclaration)


state 73

   24 switchDeclaration: TOKEN_SWITCH switchIdentifier TOKEN_ASSIGN . switchList

    TOKEN_IDENTIFIER    shift, and go to state 1
    TOKEN_OPEN_BRACKET  shift, and go to state 137
    TOKEN_INTEGER       shift, and go to state 3
    TOKEN_IF            shift, and go to state 43

    tlabel                         go to state 86
    label                          go to state 8
    switchList                     go to state 138
    switchIdentifier               go to state 88
    switchDesignator               go to state 89
    simpleDesignationalExpression  go to state 90
    designationalExpression        go to state 139
    integer                        go to state 12
    identifier                     go to state 140
    ifClause                       go to state 111


state 74

  155 procedureDeclaration: type TOKEN_PROCEDURE procedureHeading . procedureBody

    TOKEN_PRINT       shift, and go to state 41
    TOKEN_IDENTIFIER  shift, and go to state 1
    TOKEN_BEGIN       shift, and go to state 2
    TOKEN_INTEGER     shift, and go to state 3
    TOKEN_FOR         shift, and go to state 42
    TOKEN_IF          shift, and go to state 43
    TOKEN_RETURN      shift, and go to state 44

    $default  reduce using rule 116 (empty)

    blockHead                 go to state 4
    unlabelledBlock           go to state 5
    block                     go to state 45
    tlabel                    go to state 46
    label                     go to state 8
    unlabelledCompound        go to state 10
    compoundStatement         go to state 47
    arrayIdentifier           go to state 50
    integer                   go to state 12
    simpleVariable            go to state 51
    variable                  go to state 52
    subscriptedVariable       go to state 53
    identifier                go to state 54
    varIdentifier             go to state 55
    unconditionalStatement    go to state 56
    conditionalStatement      go to state 57
    ifStatement               go to state 58
    ifClause                  go to state 59
    basicStatement            go to state 60
    unlabelledBasicStatement  go to state 61
    dummyStatement            go to state 62
    returnStatement           go to state 63
    assignmentStatement       go to state 64
    forStatement              go to state 65
    empty                     go to state 66
    procedureStatement        go to state 67
    procedureIdentifier       go to state 68
    statement                 go to state 71
    procedureBody             go to state 141


state 75

   30 arraySegment: arrayIdentifier . TOKEN_OPEN_SQUARE_BRACKET boundPairList TOKEN_CLOSE_SQUARE_BRACKET
   31             | arrayIdentifier . TOKEN_COMMA arraySegment

    TOKEN_COMMA                shift, and go to state 142
    TOKEN_OPEN_SQUARE_BRACKET  shift, and go to state 143


state 76

   32 arrayList: arraySegment .

    $default  reduce using rule 32 (arrayList)


state 77

   33 arrayList: arrayList . TOKEN_COMMA arraySegment
   34 arrayDeclaration: type TOKEN_ARRAY arrayList .

    TOKEN_COMMA  shift, and go to state 144

    $default  reduce using rule 34 (arrayDeclaration)


state 78

   29 arrayIdentifier: identifier .

    $default  reduce using rule 29 (arrayIdentifier)


state 79

   90 listType: listType TOKEN_COMMA . varIdentifier

    TOKEN_IDENTIFIER  shift, and go to state 1

    identifier     go to state 38
    varIdentifier  go to state 145


state 80

   86 logicalValue: TOKEN_LOGICAL_VALUE .

    $default  reduce using rule 86 (logicalValue)


state 81

   47 simpleArithmeticExpression: TOKEN_PLUS . term

    TOKEN_IDENTIFIER    shift, and go to state 1
    TOKEN_OPEN_BRACKET  shift, and go to state 146
    TOKEN_REAL_NUM      shift, and go to state 84
    TOKEN_INTEGER       shift, and go to state 3

    arrayIdentifier      go to state 50
    term                 go to state 147
    factor               go to state 95
    primary              go to state 96
    unsignedNumber       go to state 97
    realNumber           go to state 98
    integer              go to state 118
    simpleVariable       go to state 51
    variable             go to state 100
    subscriptedVariable  go to state 53
    identifier           go to state 119
    varIdentifier        go to state 55
    procedureIdentifier  go to state 112
    functionDesignator   go to state 113


state 82

   48 simpleArithmeticExpression: TOKEN_MINUS . term

    TOKEN_IDENTIFIER    shift, and go to state 1
    TOKEN_OPEN_BRACKET  shift, and go to state 146
    TOKEN_REAL_NUM      shift, and go to state 84
    TOKEN_INTEGER       shift, and go to state 3

    arrayIdentifier      go to state 50
    term                 go to state 148
    factor               go to state 95
    primary              go to state 96
    unsignedNumber       go to state 97
    realNumber           go to state 98
    integer              go to state 118
    simpleVariable       go to state 51
    variable             go to state 100
    subscriptedVariable  go to state 53
    identifier           go to state 119
    varIdentifier        go to state 55
    procedureIdentifier  go to state 112
    functionDesignator   go to state 113


state 83

   42 simpleDesignationalExpression: TOKEN_OPEN_BRACKET . designationalExpression TOKEN_CLOSE_BRACKET
   59 primary: TOKEN_OPEN_BRACKET . arithmeticExpression TOKEN_CLOSE_BRACKET
   85 booleanPrimary: TOKEN_OPEN_BRACKET . booleanExpression TOKEN_CLOSE_BRACKET

    TOKEN_IDENTIFIER     shift, and go to state 1
    TOKEN_LOGICAL_VALUE  shift, and go to state 80
    TOKEN_PLUS           shift, and go to state 81
    TOKEN_MINUS          shift, and go to state 82
    TOKEN_OPEN_BRACKET   shift, and go to state 83
    TOKEN_REAL_NUM       shift, and go to state 84
    TOKEN_INTEGER        shift, and go to state 3
    TOKEN_NOT_OP         shift, and go to state 85
    TOKEN_IF             shift, and go to state 43

    tlabel                         go to state 86
    label                          go to state 8
    arrayIdentifier                go to state 50
    switchIdentifier               go to state 88
    switchDesignator               go to state 89
    simpleDesignationalExpression  go to state 90
    designationalExpression        go to state 149
    arithmeticExpression           go to state 150
    simpleArithmeticExpression     go to state 93
    term                           go to state 94
    factor                         go to state 95
    primary                        go to state 96
    unsignedNumber                 go to state 97
    realNumber                     go to state 98
    integer                        go to state 99
    simpleVariable                 go to state 51
    variable                       go to state 100
    subscriptedVariable            go to state 53
    identifier                     go to state 101
    booleanExpression              go to state 151
    simpleBoolean                  go to state 103
    implication                    go to state 104
    booleanTerm                    go to state 105
    booleanFactor                  go to state 106
    booleanSecondary               go to state 107
    booleanPrimary                 go to state 108
    logicalValue                   go to state 109
    relation                       go to state 110
    varIdentifier                  go to state 55
    ifClause                       go to state 111
    procedureIdentifier            go to state 112
    functionDesignator             go to state 113


state 84

   62 realNumber: TOKEN_REAL_NUM .

    $default  reduce using rule 62 (realNumber)


state 85

   82 booleanSecondary: TOKEN_NOT_OP . booleanPrimary

    TOKEN_IDENTIFIER     shift, and go to state 1
    TOKEN_LOGICAL_VALUE  shift, and go to state 80
    TOKEN_PLUS           shift, and go to state 81
    TOKEN_MINUS          shift, and go to state 82
    TOKEN_OPEN_BRACKET   shift, and go to state 116
    TOKEN_REAL_NUM       shift, and go to state 84
    TOKEN_INTEGER        shift, and go to state 3

    arrayIdentifier             go to state 50
    simpleArithmeticExpression  go to state 117
    term                        go to state 94
    factor                      go to state 95
    primary                     go to state 96
    unsignedNumber              go to state 97
    realNumber                  go to state 98
    integer                     go to state 118
    simpleVariable              go to state 51
    variable                    go to state 100
    subscriptedVariable         go to state 53
    identifier                  go to state 119
    booleanPrimary              go to state 152
    logicalValue                go to state 109
    relation                    go to state 110
    varIdentifier               go to state 55
    procedureIdentifier         go to state 112
    functionDesignator          go to state 113


state 86

   40 simpleDesignationalExpression: tlabel .

    $default  reduce using rule 40 (simpleDesignationalExpression)


state 87

  130 statement: TOKEN_PRINT expression .

    $default  reduce using rule 130 (statement)


state 88

   39 switchDesignator: switchIdentifier . TOKEN_OPEN_CURLY_BRACKET subscriptExpression TOKEN_CLOSE_CURLY_BRACKET

    TOKEN_OPEN_CURLY_BRACKET  shift, and go to state 153


state 89

   41 simpleDesignationalExpression: switchDesignator .

    $default  reduce using rule 41 (simpleDesignationalExpression)


state 90

   43 designationalExpression: simpleDesignationalExpression .

    $default  reduce using rule 43 (designationalExpression)


state 91

   37 expression: designationalExpression .

    $default  reduce using rule 37 (expression)


state 92

   35 expression: arithmeticExpression .

    $default  reduce using rule 35 (expression)


state 93

   45 arithmeticExpression: simpleArithmeticExpression .
   49 simpleArithmeticExpression: simpleArithmeticExpression . TOKEN_PLUS term
   50                           | simpleArithmeticExpression . TOKEN_MINUS term
   87 relation: simpleArithmeticExpression . relationalOperator simpleArithmeticExpression

    TOKEN_PLUS    shift, and go to state 154
    TOKEN_MINUS   shift, and go to state 155
    TOKEN_REL_OP  shift, and go to state 156

    $default  reduce using rule 45 (arithmeticExpression)

    relationalOperator  go to state 157


state 94

   46 simpleArithmeticExpression: term .
   52 term: term . TOKEN_MULTIPLY factor
   53     | term . TOKEN_DIVIDE factor

    TOKEN_DIVIDE    shift, and go to state 158
    TOKEN_MULTIPLY  shift, and go to state 159

    $default  reduce using rule 46 (simpleArithmeticExpression)


state 95

   51 term: factor .
   55 factor: factor . TOKEN_POWER primary

    TOKEN_POWER  shift, and go to state 160

    $default  reduce using rule 51 (term)


state 96

   54 factor: primary .

    $default  reduce using rule 54 (factor)


state 97

   56 primary: unsignedNumber .

    $default  reduce using rule 56 (primary)


state 98

   60 unsignedNumber: realNumber .

    $default  reduce using rule 60 (unsignedNumber)


state 99

    8 label: integer .
   61 unsignedNumber: integer .

    TOKEN_COLON  reduce using rule 8 (label)
    $default     reduce using rule 61 (unsignedNumber)


state 100

   58 primary: variable .

    $default  reduce using rule 58 (primary)


state 101

    7 label: identifier .
   29 arrayIdentifier: identifier .
   38 switchIdentifier: identifier .
   95 varIdentifier: identifier .
  118 procedureIdentifier: identifier .

    TOKEN_OPEN_BRACKET         reduce using rule 118 (procedureIdentifier)
    TOKEN_OPEN_SQUARE_BRACKET  reduce using rule 29 (arrayIdentifier)
    TOKEN_OPEN_CURLY_BRACKET   reduce using rule 38 (switchIdentifier)
    TOKEN_COLON                reduce using rule 7 (label)
    $default                   reduce using rule 95 (varIdentifier)


state 102

   36 expression: booleanExpression .

    $default  reduce using rule 36 (expression)


state 103

   72 booleanExpression: simpleBoolean .
   74 simpleBoolean: simpleBoolean . TOKEN_EQUIV implication

    TOKEN_EQUIV  shift, and go to state 161

    $default  reduce using rule 72 (booleanExpression)


state 104

   73 simpleBoolean: implication .
   76 implication: implication . TOKEN_IMPLY booleanTerm

    TOKEN_IMPLY  shift, and go to state 162

    $default  reduce using rule 73 (simpleBoolean)


state 105

   75 implication: booleanTerm .
   78 booleanTerm: booleanTerm . TOKEN_OR_OP booleanFactor

    TOKEN_OR_OP  shift, and go to state 163

    $default  reduce using rule 75 (implication)


state 106

   77 booleanTerm: booleanFactor .
   80 booleanFactor: booleanFactor . TOKEN_AND_OP booleanSecondary

    TOKEN_AND_OP  shift, and go to state 164

    $default  reduce using rule 77 (booleanTerm)


state 107

   79 booleanFactor: booleanSecondary .

    $default  reduce using rule 79 (booleanFactor)


state 108

   81 booleanSecondary: booleanPrimary .

    $default  reduce using rule 81 (booleanSecondary)


state 109

   83 booleanPrimary: logicalValue .

    $default  reduce using rule 83 (booleanPrimary)


state 110

   84 booleanPrimary: relation .

    $default  reduce using rule 84 (booleanPrimary)


state 111

   44 designationalExpression: ifClause . simpleDesignationalExpression TOKEN_ELSE designationalExpression

    TOKEN_IDENTIFIER    shift, and go to state 1
    TOKEN_OPEN_BRACKET  shift, and go to state 137
    TOKEN_INTEGER       shift, and go to state 3

    tlabel                         go to state 86
    label                          go to state 8
    switchIdentifier               go to state 88
    switchDesignator               go to state 89
    simpleDesignationalExpression  go to state 165
    integer                        go to state 12
    identifier                     go to state 140


state 112

  126 functionDesignator: procedureIdentifier . actualParameterPart

    TOKEN_OPEN_BRACKET  shift, and go to state 130

    actualParameterPart  go to state 166


state 113

   57 primary: functionDesignator .

    $default  reduce using rule 57 (primary)


state 114

  115 forStatement: TOKEN_FOR variable . TOKEN_ASSIGN arithmeticExpression TOKEN_STEP arithmeticExpression TOKEN_UNTIL arithmeticExpression TOKEN_DO statement

    TOKEN_ASSIGN  shift, and go to state 167


state 115

   29 arrayIdentifier: identifier .
   95 varIdentifier: identifier .

    TOKEN_ASSIGN  reduce using rule 95 (varIdentifier)
    $default      reduce using rule 29 (arrayIdentifier)


state 116

   59 primary: TOKEN_OPEN_BRACKET . arithmeticExpression TOKEN_CLOSE_BRACKET
   85 booleanPrimary: TOKEN_OPEN_BRACKET . booleanExpression TOKEN_CLOSE_BRACKET

    TOKEN_IDENTIFIER     shift, and go to state 1
    TOKEN_LOGICAL_VALUE  shift, and go to state 80
    TOKEN_PLUS           shift, and go to state 81
    TOKEN_MINUS          shift, and go to state 82
    TOKEN_OPEN_BRACKET   shift, and go to state 116
    TOKEN_REAL_NUM       shift, and go to state 84
    TOKEN_INTEGER        shift, and go to state 3
    TOKEN_NOT_OP         shift, and go to state 85

    arrayIdentifier             go to state 50
    arithmeticExpression        go to state 150
    simpleArithmeticExpression  go to state 93
    term                        go to state 94
    factor                      go to state 95
    primary                     go to state 96
    unsignedNumber              go to state 97
    realNumber                  go to state 98
    integer                     go to state 118
    simpleVariable              go to state 51
    variable                    go to state 100
    subscriptedVariable         go to state 53
    identifier                  go to state 119
    booleanExpression           go to state 151
    simpleBoolean               go to state 103
    implication                 go to state 104
    booleanTerm                 go to state 105
    booleanFactor               go to state 106
    booleanSecondary            go to state 107
    booleanPrimary              go to state 108
    logicalValue                go to state 109
    relation                    go to state 110
    varIdentifier               go to state 55
    procedureIdentifier         go to state 112
    functionDesignator          go to state 113


state 117

   49 simpleArithmeticExpression: simpleArithmeticExpression . TOKEN_PLUS term
   50                           | simpleArithmeticExpression . TOKEN_MINUS term
   87 relation: simpleArithmeticExpression . relationalOperator simpleArithmeticExpression

    TOKEN_PLUS    shift, and go to state 154
    TOKEN_MINUS   shift, and go to state 155
    TOKEN_REL_OP  shift, and go to state 156

    relationalOperator  go to state 157


state 118

   61 unsignedNumber: integer .

    $default  reduce using rule 61 (unsignedNumber)


state 119

   29 arrayIdentifier: identifier .
   95 varIdentifier: identifier .
  118 procedureIdentifier: identifier .

    TOKEN_OPEN_BRACKET         reduce using rule 118 (procedureIdentifier)
    TOKEN_OPEN_SQUARE_BRACKET  reduce using rule 29 (arrayIdentifier)
    $default                   reduce using rule 95 (varIdentifier)


state 120

  104 ifClause: TOKEN_IF booleanExpression . TOKEN_THEN

    TOKEN_THEN  shift, and go to state 168


state 121

  112 returnStatement: TOKEN_RETURN expression .

    $default  reduce using rule 112 (returnStatement)


state 122

  102 conditionalStatement: tlabel conditionalStatement .

    $default  reduce using rule 102 (conditionalStatement)


state 123

  106 basicStatement: tlabel basicStatement .

    $default  reduce using rule 106 (basicStatement)


state 124

   67 subscriptedVariable: arrayIdentifier TOKEN_OPEN_SQUARE_BRACKET . subscriptList TOKEN_CLOSE_SQUARE_BRACKET

    TOKEN_IDENTIFIER    shift, and go to state 1
    TOKEN_PLUS          shift, and go to state 81
    TOKEN_MINUS         shift, and go to state 82
    TOKEN_OPEN_BRACKET  shift, and go to state 146
    TOKEN_REAL_NUM      shift, and go to state 84
    TOKEN_INTEGER       shift, and go to state 3

    arrayIdentifier             go to state 50
    arithmeticExpression        go to state 169
    simpleArithmeticExpression  go to state 170
    term                        go to state 94
    factor                      go to state 95
    primary                     go to state 96
    unsignedNumber              go to state 97
    realNumber                  go to state 98
    integer                     go to state 118
    simpleVariable              go to state 51
    variable                    go to state 100
    subscriptedVariable         go to state 53
    subscriptList               go to state 171
    subscriptExpression         go to state 172
    identifier                  go to state 119
    varIdentifier               go to state 55
    procedureIdentifier         go to state 112
    functionDesignator          go to state 113


state 125

  113 assignmentStatement: variable TOKEN_ASSIGN . arithmeticExpression
  114                    | variable TOKEN_ASSIGN . booleanExpression

    TOKEN_IDENTIFIER     shift, and go to state 1
    TOKEN_LOGICAL_VALUE  shift, and go to state 80
    TOKEN_PLUS           shift, and go to state 81
    TOKEN_MINUS          shift, and go to state 82
    TOKEN_OPEN_BRACKET   shift, and go to state 116
    TOKEN_REAL_NUM       shift, and go to state 84
    TOKEN_INTEGER        shift, and go to state 3
    TOKEN_NOT_OP         shift, and go to state 85

    arrayIdentifier             go to state 50
    arithmeticExpression        go to state 173
    simpleArithmeticExpression  go to state 93
    term                        go to state 94
    factor                      go to state 95
    primary                     go to state 96
    unsignedNumber              go to state 97
    realNumber                  go to state 98
    integer                     go to state 118
    simpleVariable              go to state 51
    variable                    go to state 100
    subscriptedVariable         go to state 53
    identifier                  go to state 119
    booleanExpression           go to state 174
    simpleBoolean               go to state 103
    implication                 go to state 104
    booleanTerm                 go to state 105
    booleanFactor               go to state 106
    booleanSecondary            go to state 107
    booleanPrimary              go to state 108
    logicalValue                go to state 109
    relation                    go to state 110
    varIdentifier               go to state 55
    procedureIdentifier         go to state 112
    functionDesignator          go to state 113


state 126

  100 conditionalStatement: ifStatement TOKEN_ELSE . statement

    TOKEN_PRINT       shift, and go to state 41
    TOKEN_IDENTIFIER  shift, and go to state 1
    TOKEN_BEGIN       shift, and go to state 2
    TOKEN_INTEGER     shift, and go to state 3
    TOKEN_FOR         shift, and go to state 42
    TOKEN_IF          shift, and go to state 43
    TOKEN_RETURN      shift, and go to state 44

    $default  reduce using rule 116 (empty)

    blockHead                 go to state 4
    unlabelledBlock           go to state 5
    block                     go to state 45
    tlabel                    go to state 46
    label                     go to state 8
    unlabelledCompound        go to state 10
    compoundStatement         go to state 47
    arrayIdentifier           go to state 50
    integer                   go to state 12
    simpleVariable            go to state 51
    variable                  go to state 52
    subscriptedVariable       go to state 53
    identifier                go to state 54
    varIdentifier             go to state 55
    unconditionalStatement    go to state 56
    conditionalStatement      go to state 57
    ifStatement               go to state 58
    ifClause                  go to state 59
    basicStatement            go to state 60
    unlabelledBasicStatement  go to state 61
    dummyStatement            go to state 62
    returnStatement           go to state 63
    assignmentStatement       go to state 64
    forStatement              go to state 65
    empty                     go to state 66
    procedureStatement        go to state 67
    procedureIdentifier       go to state 68
    statement                 go to state 175


state 127

    5 block: tlabel . block
   14 compoundStatement: tlabel . compoundStatement
  106 basicStatement: tlabel . basicStatement

    TOKEN_IDENTIFIER  shift, and go to state 1
    TOKEN_BEGIN       shift, and go to state 2
    TOKEN_INTEGER     shift, and go to state 3
    TOKEN_RETURN      shift, and go to state 44

    $default  reduce using rule 116 (empty)

    blockHead                 go to state 4
    unlabelledBlock           go to state 5
    block                     go to state 27
    tlabel                    go to state 127
    label                     go to state 8
    unlabelledCompound        go to state 10
    compoundStatement         go to state 28
    arrayIdentifier           go to state 50
    integer                   go to state 12
    simpleVariable            go to state 51
    variable                  go to state 52
    subscriptedVariable       go to state 53
    identifier                go to state 54
    varIdentifier             go to state 55
    basicStatement            go to state 123
    unlabelledBasicStatement  go to state 61
    dummyStatement            go to state 62
    returnStatement           go to state 63
    assignmentStatement       go to state 64
    empty                     go to state 66
    procedureStatement        go to state 67
    procedureIdentifier       go to state 68


state 128

  103 ifStatement: ifClause unconditionalStatement .

    $default  reduce using rule 103 (ifStatement)


state 129

  101 conditionalStatement: ifClause forStatement .

    $default  reduce using rule 101 (conditionalStatement)


state 130

  119 actualParameterPart: TOKEN_OPEN_BRACKET . TOKEN_CLOSE_BRACKET
  120                    | TOKEN_OPEN_BRACKET . actualParameterList TOKEN_CLOSE_BRACKET

    TOKEN_IDENTIFIER     shift, and go to state 1
    TOKEN_LOGICAL_VALUE  shift, and go to state 80
    TOKEN_PLUS           shift, and go to state 81
    TOKEN_MINUS          shift, and go to state 82
    TOKEN_OPEN_BRACKET   shift, and go to state 83
    TOKEN_CLOSE_BRACKET  shift, and go to state 176
    TOKEN_REAL_NUM       shift, and go to state 84
    TOKEN_INTEGER        shift, and go to state 3
    TOKEN_NOT_OP         shift, and go to state 85
    TOKEN_IF             shift, and go to state 43

    tlabel                         go to state 86
    label                          go to state 8
    arrayIdentifier                go to state 50
    expression                     go to state 177
    switchIdentifier               go to state 88
    switchDesignator               go to state 89
    simpleDesignationalExpression  go to state 90
    designationalExpression        go to state 91
    arithmeticExpression           go to state 92
    simpleArithmeticExpression     go to state 93
    term                           go to state 94
    factor                         go to state 95
    primary                        go to state 96
    unsignedNumber                 go to state 97
    realNumber                     go to state 98
    integer                        go to state 99
    simpleVariable                 go to state 51
    variable                       go to state 100
    subscriptedVariable            go to state 53
    identifier                     go to state 101
    booleanExpression              go to state 102
    simpleBoolean                  go to state 103
    implication                    go to state 104
    booleanTerm                    go to state 105
    booleanFactor                  go to state 106
    booleanSecondary               go to state 107
    booleanPrimary                 go to state 108
    logicalValue                   go to state 109
    relation                       go to state 110
    varIdentifier                  go to state 55
    ifClause                       go to state 111
    procedureIdentifier            go to state 112
    actualParameterList            go to state 178
    actualParameter                go to state 179
    functionDesignator             go to state 113


state 131

  117 procedureStatement: procedureIdentifier actualParameterPart .

    $default  reduce using rule 117 (procedureStatement)


state 132

   15 compoundTail: statement TOKEN_END .

    $default  reduce using rule 15 (compoundTail)


state 133

   16 compoundTail: statement TOKEN_SEMICOLON . compoundTail

    TOKEN_PRINT       shift, and go to state 41
    TOKEN_IDENTIFIER  shift, and go to state 1
    TOKEN_BEGIN       shift, and go to state 2
    TOKEN_INTEGER     shift, and go to state 3
    TOKEN_FOR         shift, and go to state 42
    TOKEN_IF          shift, and go to state 43
    TOKEN_RETURN      shift, and go to state 44

    $default  reduce using rule 116 (empty)

    blockHead                 go to state 4
    unlabelledBlock           go to state 5
    block                     go to state 45
    tlabel                    go to state 46
    label                     go to state 8
    unlabelledCompound        go to state 10
    compoundStatement         go to state 47
    compoundTail              go to state 180
    arrayIdentifier           go to state 50
    integer                   go to state 12
    simpleVariable            go to state 51
    variable                  go to state 52
    subscriptedVariable       go to state 53
    identifier                go to state 54
    varIdentifier             go to state 55
    unconditionalStatement    go to state 56
    conditionalStatement      go to state 57
    ifStatement               go to state 58
    ifClause                  go to state 59
    basicStatement            go to state 60
    unlabelledBasicStatement  go to state 61
    dummyStatement            go to state 62
    returnStatement           go to state 63
    assignmentStatement       go to state 64
    forStatement              go to state 65
    empty                     go to state 66
    procedureStatement        go to state 67
    procedureIdentifier       go to state 68
    statement                 go to state 69


state 134

  136 formalParameterPart: TOKEN_OPEN_BRACKET . $@2 formalParameterList TOKEN_CLOSE_BRACKET

    $default  reduce using rule 135 ($@2)

    $@2  go to state 181


state 135

  134 formalParameterPart: empty .

    $default  reduce using rule 134 (formalParameterPart)


state 136

  152 procedureHeading: procedureIdentifier @3 formalParameterPart . TOKEN_SEMICOLON $@4 valuePart specificationPart

    TOKEN_SEMICOLON  shift, and go to state 182


state 137

   42 simpleDesignationalExpression: TOKEN_OPEN_BRACKET . designationalExpression TOKEN_CLOSE_BRACKET

    TOKEN_IDENTIFIER    shift, and go to state 1
    TOKEN_OPEN_BRACKET  shift, and go to state 137
    TOKEN_INTEGER       shift, and go to state 3
    TOKEN_IF            shift, and go to state 43

    tlabel                         go to state 86
    label                          go to state 8
    switchIdentifier               go to state 88
    switchDesignator               go to state 89
    simpleDesignationalExpression  go to state 90
    designationalExpression        go to state 149
    integer                        go to state 12
    identifier                     go to state 140
    ifClause                       go to state 111


state 138

   23 switchList: switchList . TOKEN_COMMA designationalExpression
   24 switchDeclaration: TOKEN_SWITCH switchIdentifier TOKEN_ASSIGN switchList .

    TOKEN_COMMA  shift, and go to state 183

    $default  reduce using rule 24 (switchDeclaration)


state 139

   22 switchList: designationalExpression .

    $default  reduce using rule 22 (switchList)


state 140

    7 label: identifier .
   38 switchIdentifier: identifier .

    TOKEN_OPEN_CURLY_BRACKET  reduce using rule 38 (switchIdentifier)
    $default                  reduce using rule 7 (label)


state 141

  155 procedureDeclaration: type TOKEN_PROCEDURE procedureHeading procedureBody .

    $default  reduce using rule 155 (procedureDeclaration)


state 142

   31 arraySegment: arrayIdentifier TOKEN_COMMA . arraySegment

    TOKEN_IDENTIFIER  shift, and go to state 1

    arrayIdentifier  go to state 75
    arraySegment     go to state 184
    identifier       go to state 78


state 143

   30 arraySegment: arrayIdentifier TOKEN_OPEN_SQUARE_BRACKET . boundPairList TOKEN_CLOSE_SQUARE_BRACKET

    TOKEN_IDENTIFIER    shift, and go to state 1
    TOKEN_PLUS          shift, and go to state 81
    TOKEN_MINUS         shift, and go to state 82
    TOKEN_OPEN_BRACKET  shift, and go to state 146
    TOKEN_REAL_NUM      shift, and go to state 84
    TOKEN_INTEGER       shift, and go to state 3

    lowerBound                  go to state 185
    boundPair                   go to state 186
    boundPairList               go to state 187
    arrayIdentifier             go to state 50
    arithmeticExpression        go to state 188
    simpleArithmeticExpression  go to state 170
    term                        go to state 94
    factor                      go to state 95
    primary                     go to state 96
    unsignedNumber              go to state 97
    realNumber                  go to state 98
    integer                     go to state 118
    simpleVariable              go to state 51
    variable                    go to state 100
    subscriptedVariable         go to state 53
    identifier                  go to state 119
    varIdentifier               go to state 55
    procedureIdentifier         go to state 112
    functionDesignator          go to state 113


state 144

   33 arrayList: arrayList TOKEN_COMMA . arraySegment

    TOKEN_IDENTIFIER  shift, and go to state 1

    arrayIdentifier  go to state 75
    arraySegment     go to state 189
    identifier       go to state 78


state 145

   90 listType: listType TOKEN_COMMA varIdentifier .

    $default  reduce using rule 90 (listType)


state 146

   59 primary: TOKEN_OPEN_BRACKET . arithmeticExpression TOKEN_CLOSE_BRACKET

    TOKEN_IDENTIFIER    shift, and go to state 1
    TOKEN_PLUS          shift, and go to state 81
    TOKEN_MINUS         shift, and go to state 82
    TOKEN_OPEN_BRACKET  shift, and go to state 146
    TOKEN_REAL_NUM      shift, and go to state 84
    TOKEN_INTEGER       shift, and go to state 3

    arrayIdentifier             go to state 50
    arithmeticExpression        go to state 150
    simpleArithmeticExpression  go to state 170
    term                        go to state 94
    factor                      go to state 95
    primary                     go to state 96
    unsignedNumber              go to state 97
    realNumber                  go to state 98
    integer                     go to state 118
    simpleVariable              go to state 51
    variable                    go to state 100
    subscriptedVariable         go to state 53
    identifier                  go to state 119
    varIdentifier               go to state 55
    procedureIdentifier         go to state 112
    functionDesignator          go to state 113


state 147

   47 simpleArithmeticExpression: TOKEN_PLUS term .
   52 term: term . TOKEN_MULTIPLY factor
   53     | term . TOKEN_DIVIDE factor

    TOKEN_DIVIDE    shift, and go to state 158
    TOKEN_MULTIPLY  shift, and go to state 159

    $default  reduce using rule 47 (simpleArithmeticExpression)


state 148

   48 simpleArithmeticExpression: TOKEN_MINUS term .
   52 term: term . TOKEN_MULTIPLY factor
   53     | term . TOKEN_DIVIDE factor

    TOKEN_DIVIDE    shift, and go to state 158
    TOKEN_MULTIPLY  shift, and go to state 159

    $default  reduce using rule 48 (simpleArithmeticExpression)


state 149

   42 simpleDesignationalExpression: TOKEN_OPEN_BRACKET designationalExpression . TOKEN_CLOSE_BRACKET

    TOKEN_CLOSE_BRACKET  shift, and go to state 190


state 150

   59 primary: TOKEN_OPEN_BRACKET arithmeticExpression . TOKEN_CLOSE_BRACKET

    TOKEN_CLOSE_BRACKET  shift, and go to state 191


state 151

   85 booleanPrimary: TOKEN_OPEN_BRACKET booleanExpression . TOKEN_CLOSE_BRACKET

    TOKEN_CLOSE_BRACKET  shift, and go to state 192


state 152

   82 booleanSecondary: TOKEN_NOT_OP booleanPrimary .

    $default  reduce using rule 82 (booleanSecondary)


state 153

   39 switchDesignator: switchIdentifier TOKEN_OPEN_CURLY_BRACKET . subscriptExpression TOKEN_CLOSE_CURLY_BRACKET

    TOKEN_IDENTIFIER    shift, and go to state 1
    TOKEN_PLUS          shift, and go to state 81
    TOKEN_MINUS         shift, and go to state 82
    TOKEN_OPEN_BRACKET  shift, and go to state 146
    TOKEN_REAL_NUM      shift, and go to state 84
    TOKEN_INTEGER       shift, and go to state 3

    arrayIdentifier             go to state 50
    arithmeticExpression        go to state 169
    simpleArithmeticExpression  go to state 170
    term                        go to state 94
    factor                      go to state 95
    primary                     go to state 96
    unsignedNumber              go to state 97
    realNumber                  go to state 98
    integer                     go to state 118
    simpleVariable              go to state 51
    variable                    go to state 100
    subscriptedVariable         go to state 53
    subscriptExpression         go to state 193
    identifier                  go to state 119
    varIdentifier               go to state 55
    procedureIdentifier         go to state 112
    functionDesignator          go to state 113


state 154

   49 simpleArithmeticExpression: simpleArithmeticExpression TOKEN_PLUS . term

    TOKEN_IDENTIFIER    shift, and go to state 1
    TOKEN_OPEN_BRACKET  shift, and go to state 146
    TOKEN_REAL_NUM      shift, and go to state 84
    TOKEN_INTEGER       shift, and go to state 3

    arrayIdentifier      go to state 50
    term                 go to state 194
    factor               go to state 95
    primary              go to state 96
    unsignedNumber       go to state 97
    realNumber           go to state 98
    integer              go to state 118
    simpleVariable       go to state 51
    variable             go to state 100
    subscriptedVariable  go to state 53
    identifier           go to state 119
    varIdentifier        go to state 55
    procedureIdentifier  go to state 112
    functionDesignator   go to state 113


state 155

   50 simpleArithmeticExpression: simpleArithmeticExpression TOKEN_MINUS . term

    TOKEN_IDENTIFIER    shift, and go to state 1
    TOKEN_OPEN_BRACKET  shift, and go to state 146
    TOKEN_REAL_NUM      shift, and go to state 84
    TOKEN_INTEGER       shift, and go to state 3

    arrayIdentifier      go to state 50
    term                 go to state 195
    factor               go to state 95
    primary              go to state 96
    unsignedNumber       go to state 97
    realNumber           go to state 98
    integer              go to state 118
    simpleVariable       go to state 51
    variable             go to state 100
    subscriptedVariable  go to state 53
    identifier           go to state 119
    varIdentifier        go to state 55
    procedureIdentifier  go to state 112
    functionDesignator   go to state 113


state 156

   88 relationalOperator: TOKEN_REL_OP .

    $default  reduce using rule 88 (relationalOperator)


state 157

   87 relation: simpleArithmeticExpression relationalOperator . simpleArithmeticExpression

    TOKEN_IDENTIFIER    shift, and go to state 1
    TOKEN_PLUS          shift, and go to state 81
    TOKEN_MINUS         shift, and go to state 82
    TOKEN_OPEN_BRACKET  shift, and go to state 146
    TOKEN_REAL_NUM      shift, and go to state 84
    TOKEN_INTEGER       shift, and go to state 3

    arrayIdentifier             go to state 50
    simpleArithmeticExpression  go to state 196
    term                        go to state 94
    factor                      go to state 95
    primary                     go to state 96
    unsignedNumber              go to state 97
    realNumber                  go to state 98
    integer                     go to state 118
    simpleVariable              go to state 51
    variable                    go to state 100
    subscriptedVariable         go to state 53
    identifier                  go to state 119
    varIdentifier               go to state 55
    procedureIdentifier         go to state 112
    functionDesignator          go to state 113


state 158

   53 term: term TOKEN_DIVIDE . factor

    TOKEN_IDENTIFIER    shift, and go to state 1
    TOKEN_OPEN_BRACKET  shift, and go to state 146
    TOKEN_REAL_NUM      shift, and go to state 84
    TOKEN_INTEGER       shift, and go to state 3

    arrayIdentifier      go to state 50
    factor               go to state 197
    primary              go to state 96
    unsignedNumber       go to state 97
    realNumber           go to state 98
    integer              go to state 118
    simpleVariable       go to state 51
    variable             go to state 100
    subscriptedVariable  go to state 53
    identifier           go to state 119
    varIdentifier        go to state 55
    procedureIdentifier  go to state 112
    functionDesignator   go to state 113


state 159

   52 term: term TOKEN_MULTIPLY . factor

    TOKEN_IDENTIFIER    shift, and go to state 1
    TOKEN_OPEN_BRACKET  shift, and go to state 146
    TOKEN_REAL_NUM      shift, and go to state 84
    TOKEN_INTEGER       shift, and go to state 3

    arrayIdentifier      go to state 50
    factor               go to state 198
    primary              go to state 96
    unsignedNumber       go to state 97
    realNumber           go to state 98
    integer              go to state 118
    simpleVariable       go to state 51
    variable             go to state 100
    subscriptedVariable  go to state 53
    identifier           go to state 119
    varIdentifier        go to state 55
    procedureIdentifier  go to state 112
    functionDesignator   go to state 113


state 160

   55 factor: factor TOKEN_POWER . primary

    TOKEN_IDENTIFIER    shift, and go to state 1
    TOKEN_OPEN_BRACKET  shift, and go to state 146
    TOKEN_REAL_NUM      shift, and go to state 84
    TOKEN_INTEGER       shift, and go to state 3

    arrayIdentifier      go to state 50
    primary              go to state 199
    unsignedNumber       go to state 97
    realNumber           go to state 98
    integer              go to state 118
    simpleVariable       go to state 51
    variable             go to state 100
    subscriptedVariable  go to state 53
    identifier           go to state 119
    varIdentifier        go to state 55
    procedureIdentifier  go to state 112
    functionDesignator   go to state 113


state 161

   74 simpleBoolean: simpleBoolean TOKEN_EQUIV . implication

    TOKEN_IDENTIFIER     shift, and go to state 1
    TOKEN_LOGICAL_VALUE  shift, and go to state 80
    TOKEN_PLUS           shift, and go to state 81
    TOKEN_MINUS          shift, and go to state 82
    TOKEN_OPEN_BRACKET   shift, and go to state 116
    TOKEN_REAL_NUM       shift, and go to state 84
    TOKEN_INTEGER        shift, and go to state 3
    TOKEN_NOT_OP         shift, and go to state 85

    arrayIdentifier             go to state 50
    simpleArithmeticExpression  go to state 117
    term                        go to state 94
    factor                      go to state 95
    primary                     go to state 96
    unsignedNumber              go to state 97
    realNumber                  go to state 98
    integer                     go to state 118
    simpleVariable              go to state 51
    variable                    go to state 100
    subscriptedVariable         go to state 53
    identifier                  go to state 119
    implication                 go to state 200
    booleanTerm                 go to state 105
    booleanFactor               go to state 106
    booleanSecondary            go to state 107
    booleanPrimary              go to state 108
    logicalValue                go to state 109
    relation                    go to state 110
    varIdentifier               go to state 55
    procedureIdentifier         go to state 112
    functionDesignator          go to state 113


state 162

   76 implication: implication TOKEN_IMPLY . booleanTerm

    TOKEN_IDENTIFIER     shift, and go to state 1
    TOKEN_LOGICAL_VALUE  shift, and go to state 80
    TOKEN_PLUS           shift, and go to state 81
    TOKEN_MINUS          shift, and go to state 82
    TOKEN_OPEN_BRACKET   shift, and go to state 116
    TOKEN_REAL_NUM       shift, and go to state 84
    TOKEN_INTEGER        shift, and go to state 3
    TOKEN_NOT_OP         shift, and go to state 85

    arrayIdentifier             go to state 50
    simpleArithmeticExpression  go to state 117
    term                        go to state 94
    factor                      go to state 95
    primary                     go to state 96
    unsignedNumber              go to state 97
    realNumber                  go to state 98
    integer                     go to state 118
    simpleVariable              go to state 51
    variable                    go to state 100
    subscriptedVariable         go to state 53
    identifier                  go to state 119
    booleanTerm                 go to state 201
    booleanFactor               go to state 106
    booleanSecondary            go to state 107
    booleanPrimary              go to state 108
    logicalValue                go to state 109
    relation                    go to state 110
    varIdentifier               go to state 55
    procedureIdentifier         go to state 112
    functionDesignator          go to state 113


state 163

   78 booleanTerm: booleanTerm TOKEN_OR_OP . booleanFactor

    TOKEN_IDENTIFIER     shift, and go to state 1
    TOKEN_LOGICAL_VALUE  shift, and go to state 80
    TOKEN_PLUS           shift, and go to state 81
    TOKEN_MINUS          shift, and go to state 82
    TOKEN_OPEN_BRACKET   shift, and go to state 116
    TOKEN_REAL_NUM       shift, and go to state 84
    TOKEN_INTEGER        shift, and go to state 3
    TOKEN_NOT_OP         shift, and go to state 85

    arrayIdentifier             go to state 50
    simpleArithmeticExpression  go to state 117
    term                        go to state 94
    factor                      go to state 95
    primary                     go to state 96
    unsignedNumber              go to state 97
    realNumber                  go to state 98
    integer                     go to state 118
    simpleVariable              go to state 51
    variable                    go to state 100
    subscriptedVariable         go to state 53
    identifier                  go to state 119
    booleanFactor               go to state 202
    booleanSecondary            go to state 107
    booleanPrimary              go to state 108
    logicalValue                go to state 109
    relation                    go to state 110
    varIdentifier               go to state 55
    procedureIdentifier         go to state 112
    functionDesignator          go to state 113


state 164

   80 booleanFactor: booleanFactor TOKEN_AND_OP . booleanSecondary

    TOKEN_IDENTIFIER     shift, and go to state 1
    TOKEN_LOGICAL_VALUE  shift, and go to state 80
    TOKEN_PLUS           shift, and go to state 81
    TOKEN_MINUS          shift, and go to state 82
    TOKEN_OPEN_BRACKET   shift, and go to state 116
    TOKEN_REAL_NUM       shift, and go to state 84
    TOKEN_INTEGER        shift, and go to state 3
    TOKEN_NOT_OP         shift, and go to state 85

    arrayIdentifier             go to state 50
    simpleArithmeticExpression  go to state 117
    term                        go to state 94
    factor                      go to state 95
    primary                     go to state 96
    unsignedNumber              go to state 97
    realNumber                  go to state 98
    integer                     go to state 118
    simpleVariable              go to state 51
    variable                    go to state 100
    subscriptedVariable         go to state 53
    identifier                  go to state 119
    booleanSecondary            go to state 203
    booleanPrimary              go to state 108
    logicalValue                go to state 109
    relation                    go to state 110
    varIdentifier               go to state 55
    procedureIdentifier         go to state 112
    functionDesignator          go to state 113


state 165

   44 designationalExpression: ifClause simpleDesignationalExpression . TOKEN_ELSE designationalExpression

    TOKEN_ELSE  shift, and go to state 204


state 166

  126 functionDesignator: procedureIdentifier actualParameterPart .

    $default  reduce using rule 126 (functionDesignator)


state 167

  115 forStatement: TOKEN_FOR variable TOKEN_ASSIGN . arithmeticExpression TOKEN_STEP arithmeticExpression TOKEN_UNTIL arithmeticExpression TOKEN_DO statement

    TOKEN_IDENTIFIER    shift, and go to state 1
    TOKEN_PLUS          shift, and go to state 81
    TOKEN_MINUS         shift, and go to state 82
    TOKEN_OPEN_BRACKET  shift, and go to state 146
    TOKEN_REAL_NUM      shift, and go to state 84
    TOKEN_INTEGER       shift, and go to state 3

    arrayIdentifier             go to state 50
    arithmeticExpression        go to state 205
    simpleArithmeticExpression  go to state 170
    term                        go to state 94
    factor                      go to state 95
    primary                     go to state 96
    unsignedNumber              go to state 97
    realNumber                  go to state 98
    integer                     go to state 118
    simpleVariable              go to state 51
    variable                    go to state 100
    subscriptedVariable         go to state 53
    identifier                  go to state 119
    varIdentifier               go to state 55
    procedureIdentifier         go to state 112
    functionDesignator          go to state 113


state 168

  104 ifClause: TOKEN_IF booleanExpression TOKEN_THEN .

    $default  reduce using rule 104 (ifClause)


state 169

   70 subscriptExpression: arithmeticExpression .

    $default  reduce using rule 70 (subscriptExpression)


state 170

   45 arithmeticExpression: simpleArithmeticExpression .
   49 simpleArithmeticExpression: simpleArithmeticExpression . TOKEN_PLUS term
   50                           | simpleArithmeticExpression . TOKEN_MINUS term

    TOKEN_PLUS   shift, and go to state 154
    TOKEN_MINUS  shift, and go to state 155

    $default  reduce using rule 45 (arithmeticExpression)


state 171

   67 subscriptedVariable: arrayIdentifier TOKEN_OPEN_SQUARE_BRACKET subscriptList . TOKEN_CLOSE_SQUARE_BRACKET
   69 subscriptList: subscriptList . TOKEN_COMMA subscriptExpression

    TOKEN_COMMA                 shift, and go to state 206
    TOKEN_CLOSE_SQUARE_BRACKET  shift, and go to state 207


state 172

   68 subscriptList: subscriptExpression .

    $default  reduce using rule 68 (subscriptList)


state 173

  113 assignmentStatement: variable TOKEN_ASSIGN arithmeticExpression .

    $default  reduce using rule 113 (assignmentStatement)


state 174

  114 assignmentStatement: variable TOKEN_ASSIGN booleanExpression .

    $default  reduce using rule 114 (assignmentStatement)


state 175

  100 conditionalStatement: ifStatement TOKEN_ELSE statement .

    $default  reduce using rule 100 (conditionalStatement)


state 176

  119 actualParameterPart: TOKEN_OPEN_BRACKET TOKEN_CLOSE_BRACKET .

    $default  reduce using rule 119 (actualParameterPart)


state 177

  123 actualParameter: expression .

    $default  reduce using rule 123 (actualParameter)


state 178

  120 actualParameterPart: TOKEN_OPEN_BRACKET actualParameterList . TOKEN_CLOSE_BRACKET
  122 actualParameterList: actualParameterList . parameterDelimiter actualParameter

    TOKEN_COMMA          shift, and go to state 208
    TOKEN_CLOSE_BRACKET  shift, and go to state 209

    parameterDelimiter  go to state 210


state 179

  121 actualParameterList: actualParameter .

    $default  reduce using rule 121 (actualParameterList)


state 180

   16 compoundTail: statement TOKEN_SEMICOLON compoundTail .

    $default  reduce using rule 16 (compoundTail)


state 181

  136 formalParameterPart: TOKEN_OPEN_BRACKET $@2 . formalParameterList TOKEN_CLOSE_BRACKET

    TOKEN_IDENTIFIER  shift, and go to state 1

    identifier           go to state 211
    formalParameter      go to state 212
    formalParameterList  go to state 213


state 182

  152 procedureHeading: procedureIdentifier @3 formalParameterPart TOKEN_SEMICOLON . $@4 valuePart specificationPart

    $default  reduce using rule 151 ($@4)

    $@4  go to state 214


state 183

   23 switchList: switchList TOKEN_COMMA . designationalExpression

    TOKEN_IDENTIFIER    shift, and go to state 1
    TOKEN_OPEN_BRACKET  shift, and go to state 137
    TOKEN_INTEGER       shift, and go to state 3
    TOKEN_IF            shift, and go to state 43

    tlabel                         go to state 86
    label                          go to state 8
    switchIdentifier               go to state 88
    switchDesignator               go to state 89
    simpleDesignationalExpression  go to state 90
    designationalExpression        go to state 215
    integer                        go to state 12
    identifier                     go to state 140
    ifClause                       go to state 111


state 184

   31 arraySegment: arrayIdentifier TOKEN_COMMA arraySegment .

    $default  reduce using rule 31 (arraySegment)


state 185

   26 boundPair: lowerBound . TOKEN_COLON upperBound

    TOKEN_COLON  shift, and go to state 216


state 186

   27 boundPairList: boundPair .

    $default  reduce using rule 27 (boundPairList)


state 187

   28 boundPairList: boundPairList . TOKEN_COMMA boundPair
   30 arraySegment: arrayIdentifier TOKEN_OPEN_SQUARE_BRACKET boundPairList . TOKEN_CLOSE_SQUARE_BRACKET

    TOKEN_COMMA                 shift, and go to state 217
    TOKEN_CLOSE_SQUARE_BRACKET  shift, and go to state 218


state 188

   21 lowerBound: arithmeticExpression .

    $default  reduce using rule 21 (lowerBound)


state 189

   33 arrayList: arrayList TOKEN_COMMA arraySegment .

    $default  reduce using rule 33 (arrayList)


state 190

   42 simpleDesignationalExpression: TOKEN_OPEN_BRACKET designationalExpression TOKEN_CLOSE_BRACKET .

    $default  reduce using rule 42 (simpleDesignationalExpression)


state 191

   59 primary: TOKEN_OPEN_BRACKET arithmeticExpression TOKEN_CLOSE_BRACKET .

    $default  reduce using rule 59 (primary)


state 192

   85 booleanPrimary: TOKEN_OPEN_BRACKET booleanExpression TOKEN_CLOSE_BRACKET .

    $default  reduce using rule 85 (booleanPrimary)


state 193

   39 switchDesignator: switchIdentifier TOKEN_OPEN_CURLY_BRACKET subscriptExpression . TOKEN_CLOSE_CURLY_BRACKET

    TOKEN_CLOSE_CURLY_BRACKET  shift, and go to state 219


state 194

   49 simpleArithmeticExpression: simpleArithmeticExpression TOKEN_PLUS term .
   52 term: term . TOKEN_MULTIPLY factor
   53     | term . TOKEN_DIVIDE factor

    TOKEN_DIVIDE    shift, and go to state 158
    TOKEN_MULTIPLY  shift, and go to state 159

    $default  reduce using rule 49 (simpleArithmeticExpression)


state 195

   50 simpleArithmeticExpression: simpleArithmeticExpression TOKEN_MINUS term .
   52 term: term . TOKEN_MULTIPLY factor
   53     | term . TOKEN_DIVIDE factor

    TOKEN_DIVIDE    shift, and go to state 158
    TOKEN_MULTIPLY  shift, and go to state 159

    $default  reduce using rule 50 (simpleArithmeticExpression)


state 196

   49 simpleArithmeticExpression: simpleArithmeticExpression . TOKEN_PLUS term
   50                           | simpleArithmeticExpression . TOKEN_MINUS term
   87 relation: simpleArithmeticExpression relationalOperator simpleArithmeticExpression .

    TOKEN_PLUS   shift, and go to state 154
    TOKEN_MINUS  shift, and go to state 155

    $default  reduce using rule 87 (relation)


state 197

   53 term: term TOKEN_DIVIDE factor .
   55 factor: factor . TOKEN_POWER primary

    TOKEN_POWER  shift, and go to state 160

    $default  reduce using rule 53 (term)


state 198

   52 term: term TOKEN_MULTIPLY factor .
   55 factor: factor . TOKEN_POWER primary

    TOKEN_POWER  shift, and go to state 160

    $default  reduce using rule 52 (term)


state 199

   55 factor: factor TOKEN_POWER primary .

    $default  reduce using rule 55 (factor)


state 200

   74 simpleBoolean: simpleBoolean TOKEN_EQUIV implication .
   76 implication: implication . TOKEN_IMPLY booleanTerm

    TOKEN_IMPLY  shift, and go to state 162

    $default  reduce using rule 74 (simpleBoolean)


state 201

   76 implication: implication TOKEN_IMPLY booleanTerm .
   78 booleanTerm: booleanTerm . TOKEN_OR_OP booleanFactor

    TOKEN_OR_OP  shift, and go to state 163

    $default  reduce using rule 76 (implication)


state 202

   78 booleanTerm: booleanTerm TOKEN_OR_OP booleanFactor .
   80 booleanFactor: booleanFactor . TOKEN_AND_OP booleanSecondary

    TOKEN_AND_OP  shift, and go to state 164

    $default  reduce using rule 78 (booleanTerm)


state 203

   80 booleanFactor: booleanFactor TOKEN_AND_OP booleanSecondary .

    $default  reduce using rule 80 (booleanFactor)


state 204

   44 designationalExpression: ifClause simpleDesignationalExpression TOKEN_ELSE . designationalExpression

    TOKEN_IDENTIFIER    shift, and go to state 1
    TOKEN_OPEN_BRACKET  shift, and go to state 137
    TOKEN_INTEGER       shift, and go to state 3
    TOKEN_IF            shift, and go to state 43

    tlabel                         go to state 86
    label                          go to state 8
    switchIdentifier               go to state 88
    switchDesignator               go to state 89
    simpleDesignationalExpression  go to state 90
    designationalExpression        go to state 220
    integer                        go to state 12
    identifier                     go to state 140
    ifClause                       go to state 111


state 205

  115 forStatement: TOKEN_FOR variable TOKEN_ASSIGN arithmeticExpression . TOKEN_STEP arithmeticExpression TOKEN_UNTIL arithmeticExpression TOKEN_DO statement

    TOKEN_STEP  shift, and go to state 221


state 206

   69 subscriptList: subscriptList TOKEN_COMMA . subscriptExpression

    TOKEN_IDENTIFIER    shift, and go to state 1
    TOKEN_PLUS          shift, and go to state 81
    TOKEN_MINUS         shift, and go to state 82
    TOKEN_OPEN_BRACKET  shift, and go to state 146
    TOKEN_REAL_NUM      shift, and go to state 84
    TOKEN_INTEGER       shift, and go to state 3

    arrayIdentifier             go to state 50
    arithmeticExpression        go to state 169
    simpleArithmeticExpression  go to state 170
    term                        go to state 94
    factor                      go to state 95
    primary                     go to state 96
    unsignedNumber              go to state 97
    realNumber                  go to state 98
    integer                     go to state 118
    simpleVariable              go to state 51
    variable                    go to state 100
    subscriptedVariable         go to state 53
    subscriptExpression         go to state 222
    identifier                  go to state 119
    varIdentifier               go to state 55
    procedureIdentifier         go to state 112
    functionDesignator          go to state 113


state 207

   67 subscriptedVariable: arrayIdentifier TOKEN_OPEN_SQUARE_BRACKET subscriptList TOKEN_CLOSE_SQUARE_BRACKET .

    $default  reduce using rule 67 (subscriptedVariable)


state 208

  124 parameterDelimiter: TOKEN_COMMA .

    $default  reduce using rule 124 (parameterDelimiter)


state 209

  120 actualParameterPart: TOKEN_OPEN_BRACKET actualParameterList TOKEN_CLOSE_BRACKET .
  125 parameterDelimiter: TOKEN_CLOSE_BRACKET . identifier TOKEN_COLON TOKEN_OPEN_BRACKET

    TOKEN_IDENTIFIER  shift, and go to state 1

    $default  reduce using rule 120 (actualParameterPart)

    identifier  go to state 223


state 210

  122 actualParameterList: actualParameterList parameterDelimiter . actualParameter

    TOKEN_IDENTIFIER     shift, and go to state 1
    TOKEN_LOGICAL_VALUE  shift, and go to state 80
    TOKEN_PLUS           shift, and go to state 81
    TOKEN_MINUS          shift, and go to state 82
    TOKEN_OPEN_BRACKET   shift, and go to state 83
    TOKEN_REAL_NUM       shift, and go to state 84
    TOKEN_INTEGER        shift, and go to state 3
    TOKEN_NOT_OP         shift, and go to state 85
    TOKEN_IF             shift, and go to state 43

    tlabel                         go to state 86
    label                          go to state 8
    arrayIdentifier                go to state 50
    expression                     go to state 177
    switchIdentifier               go to state 88
    switchDesignator               go to state 89
    simpleDesignationalExpression  go to state 90
    designationalExpression        go to state 91
    arithmeticExpression           go to state 92
    simpleArithmeticExpression     go to state 93
    term                           go to state 94
    factor                         go to state 95
    primary                        go to state 96
    unsignedNumber                 go to state 97
    realNumber                     go to state 98
    integer                        go to state 99
    simpleVariable                 go to state 51
    variable                       go to state 100
    subscriptedVariable            go to state 53
    identifier                     go to state 101
    booleanExpression              go to state 102
    simpleBoolean                  go to state 103
    implication                    go to state 104
    booleanTerm                    go to state 105
    booleanFactor                  go to state 106
    booleanSecondary               go to state 107
    booleanPrimary                 go to state 108
    logicalValue                   go to state 109
    relation                       go to state 110
    varIdentifier                  go to state 55
    ifClause                       go to state 111
    procedureIdentifier            go to state 112
    actualParameter                go to state 224
    functionDesignator             go to state 113


state 211

  131 formalParameter: identifier .

    $default  reduce using rule 131 (formalParameter)


state 212

  132 formalParameterList: formalParameter .

    $default  reduce using rule 132 (formalParameterList)


state 213

  133 formalParameterList: formalParameterList . parameterDelimiter formalParameter
  136 formalParameterPart: TOKEN_OPEN_BRACKET $@2 formalParameterList . TOKEN_CLOSE_BRACKET

    TOKEN_COMMA          shift, and go to state 208
    TOKEN_CLOSE_BRACKET  shift, and go to state 225

    parameterDelimiter  go to state 226


state 214

  152 procedureHeading: procedureIdentifier @3 formalParameterPart TOKEN_SEMICOLON $@4 . valuePart specificationPart

    TOKEN_VALUE  shift, and go to state 227

    $default  reduce using rule 116 (empty)

    empty      go to state 228
    valuePart  go to state 229


state 215

   23 switchList: switchList TOKEN_COMMA designationalExpression .

    $default  reduce using rule 23 (switchList)


state 216

   26 boundPair: lowerBound TOKEN_COLON . upperBound

    TOKEN_IDENTIFIER    shift, and go to state 1
    TOKEN_PLUS          shift, and go to state 81
    TOKEN_MINUS         shift, and go to state 82
    TOKEN_OPEN_BRACKET  shift, and go to state 146
    TOKEN_REAL_NUM      shift, and go to state 84
    TOKEN_INTEGER       shift, and go to state 3

    upperBound                  go to state 230
    arrayIdentifier             go to state 50
    arithmeticExpression        go to state 231
    simpleArithmeticExpression  go to state 170
    term                        go to state 94
    factor                      go to state 95
    primary                     go to state 96
    unsignedNumber              go to state 97
    realNumber                  go to state 98
    integer                     go to state 118
    simpleVariable              go to state 51
    variable                    go to state 100
    subscriptedVariable         go to state 53
    identifier                  go to state 119
    varIdentifier               go to state 55
    procedureIdentifier         go to state 112
    functionDesignator          go to state 113


state 217

   28 boundPairList: boundPairList TOKEN_COMMA . boundPair

    TOKEN_IDENTIFIER    shift, and go to state 1
    TOKEN_PLUS          shift, and go to state 81
    TOKEN_MINUS         shift, and go to state 82
    TOKEN_OPEN_BRACKET  shift, and go to state 146
    TOKEN_REAL_NUM      shift, and go to state 84
    TOKEN_INTEGER       shift, and go to state 3

    lowerBound                  go to state 185
    boundPair                   go to state 232
    arrayIdentifier             go to state 50
    arithmeticExpression        go to state 188
    simpleArithmeticExpression  go to state 170
    term                        go to state 94
    factor                      go to state 95
    primary                     go to state 96
    unsignedNumber              go to state 97
    realNumber                  go to state 98
    integer                     go to state 118
    simpleVariable              go to state 51
    variable                    go to state 100
    subscriptedVariable         go to state 53
    identifier                  go to state 119
    varIdentifier               go to state 55
    procedureIdentifier         go to state 112
    functionDesignator          go to state 113


state 218

   30 arraySegment: arrayIdentifier TOKEN_OPEN_SQUARE_BRACKET boundPairList TOKEN_CLOSE_SQUARE_BRACKET .

    $default  reduce using rule 30 (arraySegment)


state 219

   39 switchDesignator: switchIdentifier TOKEN_OPEN_CURLY_BRACKET subscriptExpression TOKEN_CLOSE_CURLY_BRACKET .

    $default  reduce using rule 39 (switchDesignator)


state 220

   44 designationalExpression: ifClause simpleDesignationalExpression TOKEN_ELSE designationalExpression .

    $default  reduce using rule 44 (designationalExpression)


state 221

  115 forStatement: TOKEN_FOR variable TOKEN_ASSIGN arithmeticExpression TOKEN_STEP . arithmeticExpression TOKEN_UNTIL arithmeticExpression TOKEN_DO statement

    TOKEN_IDENTIFIER    shift, and go to state 1
    TOKEN_PLUS          shift, and go to state 81
    TOKEN_MINUS         shift, and go to state 82
    TOKEN_OPEN_BRACKET  shift, and go to state 146
    TOKEN_REAL_NUM      shift, and go to state 84
    TOKEN_INTEGER       shift, and go to state 3

    arrayIdentifier             go to state 50
    arithmeticExpression        go to state 233
    simpleArithmeticExpression  go to state 170
    term                        go to state 94
    factor                      go to state 95
    primary                     go to state 96
    unsignedNumber              go to state 97
    realNumber                  go to state 98
    integer                     go to state 118
    simpleVariable              go to state 51
    variable                    go to state 100
    subscriptedVariable         go to state 53
    identifier                  go to state 119
    varIdentifier               go to state 55
    procedureIdentifier         go to state 112
    functionDesignator          go to state 113


state 222

   69 subscriptList: subscriptList TOKEN_COMMA subscriptExpression .

    $default  reduce using rule 69 (subscriptList)


state 223

  125 parameterDelimiter: TOKEN_CLOSE_BRACKET identifier . TOKEN_COLON TOKEN_OPEN_BRACKET

    TOKEN_COLON  shift, and go to state 234


state 224

  122 actualParameterList: actualParameterList parameterDelimiter actualParameter .

    $default  reduce using rule 122 (actualParameterList)


state 225

  125 parameterDelimiter: TOKEN_CLOSE_BRACKET . identifier TOKEN_COLON TOKEN_OPEN_BRACKET
  136 formalParameterPart: TOKEN_OPEN_BRACKET $@2 formalParameterList TOKEN_CLOSE_BRACKET .

    TOKEN_IDENTIFIER  shift, and go to state 1

    $default  reduce using rule 136 (formalParameterPart)

    identifier  go to state 223


state 226

  133 formalParameterList: formalParameterList parameterDelimiter . formalParameter

    TOKEN_IDENTIFIER  shift, and go to state 1

    identifier       go to state 211
    formalParameter  go to state 235


state 227

  139 valuePart: TOKEN_VALUE . identifierList TOKEN_SEMICOLON

    TOKEN_IDENTIFIER  shift, and go to state 1

    identifier      go to state 236
    identifierList  go to state 237


state 228

  140 valuePart: empty .

    $default  reduce using rule 140 (valuePart)


state 229

  152 procedureHeading: procedureIdentifier @3 formalParameterPart TOKEN_SEMICOLON $@4 valuePart . specificationPart

    TOKEN_SWITCH        shift, and go to state 238
    TOKEN_TYPE_INTEGER  shift, and go to state 16
    TOKEN_TYPE_REAL     shift, and go to state 17
    TOKEN_TYPE_BOOLEAN  shift, and go to state 18
    TOKEN_TYPE_LABEL    shift, and go to state 239

    $default  reduce using rule 116 (empty)

    type                         go to state 240
    empty                        go to state 241
    specifier                    go to state 242
    specificationPart            go to state 243
    specificationIdentifierList  go to state 244


state 230

   26 boundPair: lowerBound TOKEN_COLON upperBound .

    $default  reduce using rule 26 (boundPair)


state 231

   25 upperBound: arithmeticExpression .

    $default  reduce using rule 25 (upperBound)


state 232

   28 boundPairList: boundPairList TOKEN_COMMA boundPair .

    $default  reduce using rule 28 (boundPairList)


state 233

  115 forStatement: TOKEN_FOR variable TOKEN_ASSIGN arithmeticExpression TOKEN_STEP arithmeticExpression . TOKEN_UNTIL arithmeticExpression TOKEN_DO statement

    TOKEN_UNTIL  shift, and go to state 245


state 234

  125 parameterDelimiter: TOKEN_CLOSE_BRACKET identifier TOKEN_COLON . TOKEN_OPEN_BRACKET

    TOKEN_OPEN_BRACKET  shift, and go to state 246


state 235

  133 formalParameterList: formalParameterList parameterDelimiter formalParameter .

    $default  reduce using rule 133 (formalParameterList)


state 236

  137 identifierList: identifier .

    $default  reduce using rule 137 (identifierList)


state 237

  138 identifierList: identifierList . TOKEN_COMMA identifier
  139 valuePart: TOKEN_VALUE identifierList . TOKEN_SEMICOLON

    TOKEN_COMMA      shift, and go to state 247
    TOKEN_SEMICOLON  shift, and go to state 248


state 238

  144 specifier: TOKEN_SWITCH .

    $default  reduce using rule 144 (specifier)


state 239

  143 specifier: TOKEN_TYPE_LABEL .

    $default  reduce using rule 143 (specifier)


state 240

  141 specifier: type .
  142          | type . TOKEN_ARRAY
  145          | type . TOKEN_PROCEDURE

    TOKEN_PROCEDURE  shift, and go to state 249
    TOKEN_ARRAY      shift, and go to state 250

    $default  reduce using rule 141 (specifier)


state 241

  146 specificationPart: empty .

    $default  reduce using rule 146 (specificationPart)


state 242

  148 specificationIdentifierList: specifier . identifierList TOKEN_SEMICOLON

    TOKEN_IDENTIFIER  shift, and go to state 1

    identifier      go to state 236
    identifierList  go to state 251


state 243

  152 procedureHeading: procedureIdentifier @3 formalParameterPart TOKEN_SEMICOLON $@4 valuePart specificationPart .

    $default  reduce using rule 152 (procedureHeading)


state 244

  147 specificationPart: specificationIdentifierList .
  149 specificationIdentifierList: specificationIdentifierList . specifier identifierList TOKEN_SEMICOLON

    TOKEN_SWITCH        shift, and go to state 238
    TOKEN_TYPE_INTEGER  shift, and go to state 16
    TOKEN_TYPE_REAL     shift, and go to state 17
    TOKEN_TYPE_BOOLEAN  shift, and go to state 18
    TOKEN_TYPE_LABEL    shift, and go to state 239

    $default  reduce using rule 147 (specificationPart)

    type       go to state 240
    specifier  go to state 252


state 245

  115 forStatement: TOKEN_FOR variable TOKEN_ASSIGN arithmeticExpression TOKEN_STEP arithmeticExpression TOKEN_UNTIL . arithmeticExpression TOKEN_DO statement

    TOKEN_IDENTIFIER    shift, and go to state 1
    TOKEN_PLUS          shift, and go to state 81
    TOKEN_MINUS         shift, and go to state 82
    TOKEN_OPEN_BRACKET  shift, and go to state 146
    TOKEN_REAL_NUM      shift, and go to state 84
    TOKEN_INTEGER       shift, and go to state 3

    arrayIdentifier             go to state 50
    arithmeticExpression        go to state 253
    simpleArithmeticExpression  go to state 170
    term                        go to state 94
    factor                      go to state 95
    primary                     go to state 96
    unsignedNumber              go to state 97
    realNumber                  go to state 98
    integer                     go to state 118
    simpleVariable              go to state 51
    variable                    go to state 100
    subscriptedVariable         go to state 53
    identifier                  go to state 119
    varIdentifier               go to state 55
    procedureIdentifier         go to state 112
    functionDesignator          go to state 113


state 246

  125 parameterDelimiter: TOKEN_CLOSE_BRACKET identifier TOKEN_COLON TOKEN_OPEN_BRACKET .

    $default  reduce using rule 125 (parameterDelimiter)


state 247

  138 identifierList: identifierList TOKEN_COMMA . identifier

    TOKEN_IDENTIFIER  shift, and go to state 1

    identifier  go to state 254


state 248

  139 valuePart: TOKEN_VALUE identifierList TOKEN_SEMICOLON .

    $default  reduce using rule 139 (valuePart)


state 249

  145 specifier: type TOKEN_PROCEDURE .

    $default  reduce using rule 145 (specifier)


state 250

  142 specifier: type TOKEN_ARRAY .

    $default  reduce using rule 142 (specifier)


state 251

  138 identifierList: identifierList . TOKEN_COMMA identifier
  148 specificationIdentifierList: specifier identifierList . TOKEN_SEMICOLON

    TOKEN_COMMA      shift, and go to state 247
    TOKEN_SEMICOLON  shift, and go to state 255


state 252

  149 specificationIdentifierList: specificationIdentifierList specifier . identifierList TOKEN_SEMICOLON

    TOKEN_IDENTIFIER  shift, and go to state 1

    identifier      go to state 236
    identifierList  go to state 256


state 253

  115 forStatement: TOKEN_FOR variable TOKEN_ASSIGN arithmeticExpression TOKEN_STEP arithmeticExpression TOKEN_UNTIL arithmeticExpression . TOKEN_DO statement

    TOKEN_DO  shift, and go to state 257


state 254

  138 identifierList: identifierList TOKEN_COMMA identifier .

    $default  reduce using rule 138 (identifierList)


state 255

  148 specificationIdentifierList: specifier identifierList TOKEN_SEMICOLON .

    $default  reduce using rule 148 (specificationIdentifierList)


state 256

  138 identifierList: identifierList . TOKEN_COMMA identifier
  149 specificationIdentifierList: specificationIdentifierList specifier identifierList . TOKEN_SEMICOLON

    TOKEN_COMMA      shift, and go to state 247
    TOKEN_SEMICOLON  shift, and go to state 258


state 257

  115 forStatement: TOKEN_FOR variable TOKEN_ASSIGN arithmeticExpression TOKEN_STEP arithmeticExpression TOKEN_UNTIL arithmeticExpression TOKEN_DO . statement

    TOKEN_PRINT       shift, and go to state 41
    TOKEN_IDENTIFIER  shift, and go to state 1
    TOKEN_BEGIN       shift, and go to state 2
    TOKEN_INTEGER     shift, and go to state 3
    TOKEN_FOR         shift, and go to state 42
    TOKEN_IF          shift, and go to state 43
    TOKEN_RETURN      shift, and go to state 44

    $default  reduce using rule 116 (empty)

    blockHead                 go to state 4
    unlabelledBlock           go to state 5
    block                     go to state 45
    tlabel                    go to state 46
    label                     go to state 8
    unlabelledCompound        go to state 10
    compoundStatement         go to state 47
    arrayIdentifier           go to state 50
    integer                   go to state 12
    simpleVariable            go to state 51
    variable                  go to state 52
    subscriptedVariable       go to state 53
    identifier                go to state 54
    varIdentifier             go to state 55
    unconditionalStatement    go to state 56
    conditionalStatement      go to state 57
    ifStatement               go to state 58
    ifClause                  go to state 59
    basicStatement            go to state 60
    unlabelledBasicStatement  go to state 61
    dummyStatement            go to state 62
    returnStatement           go to state 63
    assignmentStatement       go to state 64
    forStatement              go to state 65
    empty                     go to state 66
    procedureStatement        go to state 67
    procedureIdentifier       go to state 68
    statement                 go to state 259


state 258

  149 specificationIdentifierList: specificationIdentifierList specifier identifierList TOKEN_SEMICOLON .

    $default  reduce using rule 149 (specificationIdentifierList)


state 259

  115 forStatement: TOKEN_FOR variable TOKEN_ASSIGN arithmeticExpression TOKEN_STEP arithmeticExpression TOKEN_UNTIL arithmeticExpression TOKEN_DO statement .

    $default  reduce using rule 115 (forStatement)
