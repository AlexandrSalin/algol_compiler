Terminals unused in grammar

   TOKEN_OPERATOR
   TOKEN_OR
   TOKEN_UNDERSCORE
   TOKEN_SPECIFIER
   TOKEN_LIBRARY
   TOKEN_BRACKET
   TOKEN_CONTINUE
   TOKEN_LESS_EQUAL
   TOKEN_GREATER
   TOKEN_GREATER_EQUAL
   TOKEN_EQUAL
   TOKEN_LESS
   TOKEN_NOTEQUAL
   TOKEN_GOTO
   TOKEN_WHILE
   TOKEN_TYPE_OWN
   TOKEN_TYPE_INTEGER
   TOKEN_TYPE_REAL
   TOKEN_TYPE_BOOLEAN
   TOKEN_TYPE_ARRAY
   TOKEN_TYPE_SWITCH
   TOKEN_TYPE_PROCEDURE
   TOKEN_TYPE_STRING
   TOKEN_TYPE_VALUE
   TOKEN_LTRSTRING
   TOKEN_LABEL_IDENTIFIER
   TOKEN_BOOL_IDENTIFIER
   TOKEN_NOT_EQUAL
   TOKEN_RELOP


Grammar

    0 $accept: program $end

    1 blockHead: tbegin declaration
    2          | blockHead TOKEN_SEMICOLON declaration

    3 unlabelledBlock: blockHead TOKEN_SEMICOLON compoundTail

    4 block: unlabelledBlock
    5      | tlabel block

    6 tlabel: label TOKEN_COLON

    7 label: identifier
    8      | integer

    9 program: compoundStatement
   10        | block

   11 unlabelledCompound: TOKEN_BEGIN compoundTail

   12 tbegin: TOKEN_BEGIN

   13 compoundStatement: unlabelledCompound
   14                  | tlabel compoundStatement

   15 compoundTail: statement TOKEN_END
   16             | statement TOKEN_SEMICOLON compoundTail

   17 declaration: typeDeclaration
   18            | arrayDeclaration
   19            | procedureDeclaration

   20 lowerBound: arithmeticExpression

   21 upperBound: arithmeticExpression

   22 boundPair: lowerBound TOKEN_COLON upperBound

   23 boundPairList: boundPair
   24              | boundPairList TOKEN_COMMA boundPair

   25 arrayIdentifier: identifier

   26 arraySegment: arrayIdentifier TOKEN_OPEN_SQUARE_BRACKET boundPairList TOKEN_CLOSE_SQUARE_BRACKET
   27             | arrayIdentifier TOKEN_COMMA arraySegment

   28 arrayList: arraySegment

   29 @1: /* empty */

   30 arrayList: arrayList TOKEN_COMMA @1 arraySegment

   31 arrayDeclaration: TOKEN_ARRAY arrayList
   32                 | type TOKEN_ARRAY arrayList

   33 expression: arithmeticExpression
   34           | booleanExpression

   35 arithmeticExpression: simpleArithmeticExpression
   36                     | ifClause simpleArithmeticExpression TOKEN_ELSE arithmeticExpression

   37 simpleArithmeticExpression: term
   38                           | TOKEN_PLUS term
   39                           | TOKEN_MINUS term
   40                           | simpleArithmeticExpression TOKEN_PLUS term
   41                           | simpleArithmeticExpression TOKEN_MINUS term

   42 term: factor
   43     | term TOKEN_MULTIPLY factor
   44     | term TOKEN_DIVIDE factor

   45 factor: primary
   46       | factor TOKEN_POWER primary

   47 primary: realNumber
   48        | integer
   49        | TOKEN_OPEN_BRACKET arithmeticExpression TOKEN_CLOSE_BRACKET

   50 realNumber: TOKEN_REAL_NUM

   51 integer: TOKEN_INTEGER

   52 variable: identifier
   53         | subscriptedVariable

   54 subscriptedVariable: arrayIdentifier TOKEN_OPEN_SQUARE_BRACKET subscriptList TOKEN_CLOSE_SQUARE_BRACKET

   55 subscriptList: subscriptExpression
   56              | subscriptList TOKEN_COMMA subscriptExpression

   57 subscriptExpression: arithmeticExpression

   58 identifier: TOKEN_IDENTIFIER

   59 booleanExpression: simpleBoolean

   60 simpleBoolean: implication
   61              | simpleBoolean TOKEN_EQUIV implication

   62 implication: booleanTerm
   63            | implication TOKEN_IMPLY booleanTerm

   64 booleanTerm: booleanFactor
   65            | booleanTerm TOKEN_OR_OP booleanFactor

   66 booleanFactor: booleanSecondary
   67              | booleanFactor TOKEN_AND_OP booleanSecondary

   68 booleanSecondary: booleanPrimary
   69                 | TOKEN_NOT_OP booleanPrimary

   70 booleanPrimary: logicalValue
   71               | relation
   72               | TOKEN_OPEN_BRACKET booleanExpression TOKEN_CLOSE_BRACKET

   73 logicalValue: TOKEN_LOGICAL_VALUE

   74 relation: simpleArithmeticExpression relationalOperator simpleArithmeticExpression

   75 relationalOperator: TOKEN_REL_OP

   76 listType: varIdentifier

   77 @2: /* empty */

   78 listType: listType TOKEN_COMMA @2 varIdentifier

   79 type: TOKEN_TREAL
   80     | TOKEN_TINTEGER
   81     | TOKEN_BOOLEAN

   82 typeDeclaration: type listType

   83 varIdentifier: identifier

   84 unconditionalStatement: basicStatement
   85                       | compoundStatement
   86                       | block

   87 conditionalStatement: ifStatement
   88                     | ifClause unconditionalStatement TOKEN_ELSE statement
   89                     | ifClause forStatement
   90                     | tlabel conditionalStatement

   91 ifStatement: ifClause unconditionalStatement

   92 ifClause: TOKEN_IF booleanExpression TOKEN_THEN

   93 basicStatement: unlabelledBasicStatement
   94               | label basicStatement

   95 unlabelledBasicStatement: assignmentStatement
   96                         | dummyStatement

   97 @3: /* empty */

   98 unlabelledBasicStatement: procedureStatement @3 returnStatement

   99 dummyStatement: empty

  100 returnStatement: TOKEN_RETURN expression

  101 assignmentStatement: TOKEN_ASSIGN_IDENTIFIER arithmeticExpression
  102                    | TOKEN_ASSIGN_IDENTIFIER booleanExpression

  103 forStatement: TOKEN_FOR variable TOKEN_ASSIGN arithmeticExpression TOKEN_STEP arithmeticExpression TOKEN_UNTIL arithmeticExpression TOKEN_DO statement

  104 empty: /* empty */

  105 procedureStatement: procedureIdentifier actualParameterPart

  106 procedureIdentifier: identifier

  107 actualParameterPart: empty
  108                    | TOKEN_OPEN_BRACKET actualParameterList TOKEN_CLOSE_BRACKET

  109 actualParameterList: actualParameter
  110                    | actualParameterList parameterDelimiter actualParameter

  111 actualParameter: expression

  112 parameterDelimiter: TOKEN_COMMA
  113                   | TOKEN_CLOSE_SQUARE_BRACKET identifier TOKEN_COLON TOKEN_OPEN_SQUARE_BRACKET

  114 statement: unconditionalStatement
  115          | conditionalStatement
  116          | forStatement
  117          | TOKEN_PRINT expression

  118 formalParameter: identifier

  119 formalParameterList: formalParameter

  120 $@4: /* empty */

  121 formalParameterList: formalParameterList parameterDelimiter $@4 formalParameter

  122 formalParameterPart: empty

  123 $@5: /* empty */

  124 formalParameterPart: TOKEN_OPEN_BRACKET $@5 formalParameterList TOKEN_CLOSE_BRACKET

  125 identifierList: identifier
  126               | identifierList TOKEN_COMMA identifier

  127 valuePart: TOKEN_VALUE identifierList TOKEN_SEMICOLON
  128          | empty

  129 specifier: type
  130          | type TOKEN_ARRAY
  131          | TOKEN_TYPE_LABEL
  132          | TOKEN_SWITCH
  133          | type TOKEN_PROCEDURE

  134 specificationPart: empty
  135                  | specificationIdentifierList

  136 specificationIdentifierList: specifier identifierList TOKEN_SEMICOLON
  137                            | specificationIdentifierList specifier identifierList TOKEN_SEMICOLON

  138 @6: /* empty */

  139 $@7: /* empty */

  140 procedureHeading: procedureIdentifier @6 formalParameterPart TOKEN_SEMICOLON $@7 valuePart specificationPart

  141 procedureBody: statement

  142 procedureDeclaration: TOKEN_PROCEDURE procedureHeading procedureBody
  143                     | type TOKEN_PROCEDURE procedureHeading procedureBody


Terminals, with rules where they appear

$end (0) 0
error (256)
TOKEN_PRINT (258) 117
TOKEN_IDENTIFIER (259) 58
TOKEN_BEGIN (260) 11 12
TOKEN_END (261) 15
TOKEN_LOGICAL_VALUE (262) 73
TOKEN_OPERATOR (263)
TOKEN_OR (264)
TOKEN_PROCEDURE (265) 133 142 143
TOKEN_PLUS (266) 38 40
TOKEN_MINUS (267) 39 41
TOKEN_DIVIDE (268) 44
TOKEN_POWER (269) 46
TOKEN_MULTIPLY (270) 43
TOKEN_COMMA (271) 24 27 30 56 78 112 126
TOKEN_UNDERSCORE (272)
TOKEN_SPECIFIER (273)
TOKEN_LIBRARY (274)
TOKEN_BRACKET (275)
TOKEN_OPEN_BRACKET (276) 49 72 108 124
TOKEN_CLOSE_BRACKET (277) 49 72 108 124
TOKEN_OPEN_SQUARE_BRACKET (278) 26 54 113
TOKEN_CLOSE_SQUARE_BRACKET (279) 26 54 113
TOKEN_CONTINUE (280)
TOKEN_REAL_NUM (281) 50
TOKEN_INTEGER (282) 51
TOKEN_COLON (283) 6 22 113
TOKEN_REL_OP (284) 75
TOKEN_LESS_EQUAL (285)
TOKEN_GREATER (286)
TOKEN_GREATER_EQUAL (287)
TOKEN_EQUAL (288)
TOKEN_LESS (289)
TOKEN_NOTEQUAL (290)
TOKEN_EQUIV (291) 61
TOKEN_AND_OP (292) 67
TOKEN_OR_OP (293) 65
TOKEN_NOT_OP (294) 69
TOKEN_GOTO (295)
TOKEN_FOR (296) 103
TOKEN_DO (297) 103
TOKEN_WHILE (298)
TOKEN_STEP (299) 103
TOKEN_UNTIL (300) 103
TOKEN_IF (301) 92
TOKEN_THEN (302) 92
TOKEN_ELSE (303) 36 88
TOKEN_SWITCH (304) 132
TOKEN_VALUE (305) 127
TOKEN_BOOLEAN (306) 81
TOKEN_TYPE_OWN (307)
TOKEN_TYPE_INTEGER (308)
TOKEN_TYPE_REAL (309)
TOKEN_TYPE_BOOLEAN (310)
TOKEN_TYPE_ARRAY (311)
TOKEN_TYPE_SWITCH (312)
TOKEN_TYPE_PROCEDURE (313)
TOKEN_TYPE_STRING (314)
TOKEN_TYPE_LABEL (315) 131
TOKEN_TYPE_VALUE (316)
TOKEN_ARRAY (317) 31 32 130
TOKEN_IMPLY (318) 63
TOKEN_SEMICOLON (319) 2 3 16 127 136 137 140
TOKEN_LTRSTRING (320)
TOKEN_TINTEGER (321) 80
TOKEN_TREAL (322) 79
TOKEN_RETURN (323) 100
TOKEN_ASSIGN_IDENTIFIER (324) 101 102
TOKEN_LABEL_IDENTIFIER (325)
TOKEN_BOOL_IDENTIFIER (326)
TOKEN_ASSIGN (327) 103
TOKEN_NOT_EQUAL (328)
TOKEN_RELOP (329)


Nonterminals, with rules where they appear

$accept (75)
    on left: 0
blockHead (76)
    on left: 1 2, on right: 2 3
unlabelledBlock (77)
    on left: 3, on right: 4
block (78)
    on left: 4 5, on right: 5 10 86
tlabel (79)
    on left: 6, on right: 5 14 90
label (80)
    on left: 7 8, on right: 6 94
program (81)
    on left: 9 10, on right: 0
unlabelledCompound (82)
    on left: 11, on right: 13
tbegin (83)
    on left: 12, on right: 1
compoundStatement (84)
    on left: 13 14, on right: 9 14 85
compoundTail (85)
    on left: 15 16, on right: 3 11 16
declaration (86)
    on left: 17 18 19, on right: 1 2
lowerBound (87)
    on left: 20, on right: 22
upperBound (88)
    on left: 21, on right: 22
boundPair (89)
    on left: 22, on right: 23 24
boundPairList (90)
    on left: 23 24, on right: 24 26
arrayIdentifier (91)
    on left: 25, on right: 26 27 54
arraySegment (92)
    on left: 26 27, on right: 27 28 30
arrayList (93)
    on left: 28 30, on right: 30 31 32
@1 (94)
    on left: 29, on right: 30
arrayDeclaration (95)
    on left: 31 32, on right: 18
expression (96)
    on left: 33 34, on right: 100 111 117
arithmeticExpression (97)
    on left: 35 36, on right: 20 21 33 36 49 57 101 103
simpleArithmeticExpression (98)
    on left: 37 38 39 40 41, on right: 35 36 40 41 74
term (99)
    on left: 42 43 44, on right: 37 38 39 40 41 43 44
factor (100)
    on left: 45 46, on right: 42 43 44 46
primary (101)
    on left: 47 48 49, on right: 45 46
realNumber (102)
    on left: 50, on right: 47
integer (103)
    on left: 51, on right: 8 48
variable (104)
    on left: 52 53, on right: 103
subscriptedVariable (105)
    on left: 54, on right: 53
subscriptList (106)
    on left: 55 56, on right: 54 56
subscriptExpression (107)
    on left: 57, on right: 55 56
identifier (108)
    on left: 58, on right: 7 25 52 83 106 113 118 125 126
booleanExpression (109)
    on left: 59, on right: 34 72 92 102
simpleBoolean (110)
    on left: 60 61, on right: 59 61
implication (111)
    on left: 62 63, on right: 60 61 63
booleanTerm (112)
    on left: 64 65, on right: 62 63 65
booleanFactor (113)
    on left: 66 67, on right: 64 65 67
booleanSecondary (114)
    on left: 68 69, on right: 66 67
booleanPrimary (115)
    on left: 70 71 72, on right: 68 69
logicalValue (116)
    on left: 73, on right: 70
relation (117)
    on left: 74, on right: 71
relationalOperator (118)
    on left: 75, on right: 74
listType (119)
    on left: 76 78, on right: 78 82
@2 (120)
    on left: 77, on right: 78
type (121)
    on left: 79 80 81, on right: 32 82 129 130 133 143
typeDeclaration (122)
    on left: 82, on right: 17
varIdentifier (123)
    on left: 83, on right: 76 78
unconditionalStatement (124)
    on left: 84 85 86, on right: 88 91 114
conditionalStatement (125)
    on left: 87 88 89 90, on right: 90 115
ifStatement (126)
    on left: 91, on right: 87
ifClause (127)
    on left: 92, on right: 36 88 89 91
basicStatement (128)
    on left: 93 94, on right: 84 94
unlabelledBasicStatement (129)
    on left: 95 96 98, on right: 93
@3 (130)
    on left: 97, on right: 98
dummyStatement (131)
    on left: 99, on right: 96
returnStatement (132)
    on left: 100, on right: 98
assignmentStatement (133)
    on left: 101 102, on right: 95
forStatement (134)
    on left: 103, on right: 89 116
empty (135)
    on left: 104, on right: 99 107 122 128 134
procedureStatement (136)
    on left: 105, on right: 98
procedureIdentifier (137)
    on left: 106, on right: 105 140
actualParameterPart (138)
    on left: 107 108, on right: 105
actualParameterList (139)
    on left: 109 110, on right: 108 110
actualParameter (140)
    on left: 111, on right: 109 110
parameterDelimiter (141)
    on left: 112 113, on right: 110 121
statement (142)
    on left: 114 115 116 117, on right: 15 16 88 103 141
formalParameter (143)
    on left: 118, on right: 119 121
formalParameterList (144)
    on left: 119 121, on right: 121 124
$@4 (145)
    on left: 120, on right: 121
formalParameterPart (146)
    on left: 122 124, on right: 140
$@5 (147)
    on left: 123, on right: 124
identifierList (148)
    on left: 125 126, on right: 126 127 136 137
valuePart (149)
    on left: 127 128, on right: 140
specifier (150)
    on left: 129 130 131 132 133, on right: 136 137
specificationPart (151)
    on left: 134 135, on right: 140
specificationIdentifierList (152)
    on left: 136 137, on right: 135 137
procedureHeading (153)
    on left: 140, on right: 142 143
@6 (154)
    on left: 138, on right: 140
$@7 (155)
    on left: 139, on right: 140
procedureBody (156)
    on left: 141, on right: 142 143
procedureDeclaration (157)
    on left: 142 143, on right: 19


state 0

    0 $accept: . program $end

    TOKEN_IDENTIFIER  shift, and go to state 1
    TOKEN_BEGIN       shift, and go to state 2
    TOKEN_INTEGER     shift, and go to state 3

    blockHead           go to state 4
    unlabelledBlock     go to state 5
    block               go to state 6
    tlabel              go to state 7
    label               go to state 8
    program             go to state 9
    unlabelledCompound  go to state 10
    tbegin              go to state 11
    compoundStatement   go to state 12
    integer             go to state 13
    identifier          go to state 14


state 1

   58 identifier: TOKEN_IDENTIFIER .

    $default  reduce using rule 58 (identifier)


state 2

   11 unlabelledCompound: TOKEN_BEGIN . compoundTail
   12 tbegin: TOKEN_BEGIN .

    TOKEN_PRINT              shift, and go to state 15
    TOKEN_IDENTIFIER         shift, and go to state 1
    TOKEN_BEGIN              shift, and go to state 2
    TOKEN_INTEGER            shift, and go to state 3
    TOKEN_FOR                shift, and go to state 16
    TOKEN_IF                 shift, and go to state 17
    TOKEN_ASSIGN_IDENTIFIER  shift, and go to state 18

    TOKEN_END        reduce using rule 104 (empty)
    TOKEN_SEMICOLON  reduce using rule 104 (empty)
    $default         reduce using rule 12 (tbegin)

    blockHead                 go to state 4
    unlabelledBlock           go to state 5
    block                     go to state 19
    tlabel                    go to state 20
    label                     go to state 21
    unlabelledCompound        go to state 10
    tbegin                    go to state 11
    compoundStatement         go to state 22
    compoundTail              go to state 23
    integer                   go to state 13
    identifier                go to state 24
    unconditionalStatement    go to state 25
    conditionalStatement      go to state 26
    ifStatement               go to state 27
    ifClause                  go to state 28
    basicStatement            go to state 29
    unlabelledBasicStatement  go to state 30
    dummyStatement            go to state 31
    assignmentStatement       go to state 32
    forStatement              go to state 33
    empty                     go to state 34
    procedureStatement        go to state 35
    procedureIdentifier       go to state 36
    statement                 go to state 37


state 3

   51 integer: TOKEN_INTEGER .

    $default  reduce using rule 51 (integer)


state 4

    2 blockHead: blockHead . TOKEN_SEMICOLON declaration
    3 unlabelledBlock: blockHead . TOKEN_SEMICOLON compoundTail

    TOKEN_SEMICOLON  shift, and go to state 38


state 5

    4 block: unlabelledBlock .

    $default  reduce using rule 4 (block)


state 6

   10 program: block .

    $default  reduce using rule 10 (program)


state 7

    5 block: tlabel . block
   14 compoundStatement: tlabel . compoundStatement

    TOKEN_IDENTIFIER  shift, and go to state 1
    TOKEN_BEGIN       shift, and go to state 2
    TOKEN_INTEGER     shift, and go to state 3

    blockHead           go to state 4
    unlabelledBlock     go to state 5
    block               go to state 39
    tlabel              go to state 7
    label               go to state 8
    unlabelledCompound  go to state 10
    tbegin              go to state 11
    compoundStatement   go to state 40
    integer             go to state 13
    identifier          go to state 14


state 8

    6 tlabel: label . TOKEN_COLON

    TOKEN_COLON  shift, and go to state 41


state 9

    0 $accept: program . $end

    $end  shift, and go to state 42


state 10

   13 compoundStatement: unlabelledCompound .

    $default  reduce using rule 13 (compoundStatement)


state 11

    1 blockHead: tbegin . declaration

    TOKEN_PROCEDURE  shift, and go to state 43
    TOKEN_BOOLEAN    shift, and go to state 44
    TOKEN_ARRAY      shift, and go to state 45
    TOKEN_TINTEGER   shift, and go to state 46
    TOKEN_TREAL      shift, and go to state 47

    declaration           go to state 48
    arrayDeclaration      go to state 49
    type                  go to state 50
    typeDeclaration       go to state 51
    procedureDeclaration  go to state 52


state 12

    9 program: compoundStatement .

    $default  reduce using rule 9 (program)


state 13

    8 label: integer .

    $default  reduce using rule 8 (label)


state 14

    7 label: identifier .

    $default  reduce using rule 7 (label)


state 15

  117 statement: TOKEN_PRINT . expression

    TOKEN_LOGICAL_VALUE  shift, and go to state 53
    TOKEN_PLUS           shift, and go to state 54
    TOKEN_MINUS          shift, and go to state 55
    TOKEN_OPEN_BRACKET   shift, and go to state 56
    TOKEN_REAL_NUM       shift, and go to state 57
    TOKEN_INTEGER        shift, and go to state 3
    TOKEN_NOT_OP         shift, and go to state 58
    TOKEN_IF             shift, and go to state 17

    expression                  go to state 59
    arithmeticExpression        go to state 60
    simpleArithmeticExpression  go to state 61
    term                        go to state 62
    factor                      go to state 63
    primary                     go to state 64
    realNumber                  go to state 65
    integer                     go to state 66
    booleanExpression           go to state 67
    simpleBoolean               go to state 68
    implication                 go to state 69
    booleanTerm                 go to state 70
    booleanFactor               go to state 71
    booleanSecondary            go to state 72
    booleanPrimary              go to state 73
    logicalValue                go to state 74
    relation                    go to state 75
    ifClause                    go to state 76


state 16

  103 forStatement: TOKEN_FOR . variable TOKEN_ASSIGN arithmeticExpression TOKEN_STEP arithmeticExpression TOKEN_UNTIL arithmeticExpression TOKEN_DO statement

    TOKEN_IDENTIFIER  shift, and go to state 1

    arrayIdentifier      go to state 77
    variable             go to state 78
    subscriptedVariable  go to state 79
    identifier           go to state 80


state 17

   92 ifClause: TOKEN_IF . booleanExpression TOKEN_THEN

    TOKEN_LOGICAL_VALUE  shift, and go to state 53
    TOKEN_PLUS           shift, and go to state 54
    TOKEN_MINUS          shift, and go to state 55
    TOKEN_OPEN_BRACKET   shift, and go to state 56
    TOKEN_REAL_NUM       shift, and go to state 57
    TOKEN_INTEGER        shift, and go to state 3
    TOKEN_NOT_OP         shift, and go to state 58

    simpleArithmeticExpression  go to state 81
    term                        go to state 62
    factor                      go to state 63
    primary                     go to state 64
    realNumber                  go to state 65
    integer                     go to state 66
    booleanExpression           go to state 82
    simpleBoolean               go to state 68
    implication                 go to state 69
    booleanTerm                 go to state 70
    booleanFactor               go to state 71
    booleanSecondary            go to state 72
    booleanPrimary              go to state 73
    logicalValue                go to state 74
    relation                    go to state 75


state 18

  101 assignmentStatement: TOKEN_ASSIGN_IDENTIFIER . arithmeticExpression
  102                    | TOKEN_ASSIGN_IDENTIFIER . booleanExpression

    TOKEN_LOGICAL_VALUE  shift, and go to state 53
    TOKEN_PLUS           shift, and go to state 54
    TOKEN_MINUS          shift, and go to state 55
    TOKEN_OPEN_BRACKET   shift, and go to state 56
    TOKEN_REAL_NUM       shift, and go to state 57
    TOKEN_INTEGER        shift, and go to state 3
    TOKEN_NOT_OP         shift, and go to state 58
    TOKEN_IF             shift, and go to state 17

    arithmeticExpression        go to state 83
    simpleArithmeticExpression  go to state 61
    term                        go to state 62
    factor                      go to state 63
    primary                     go to state 64
    realNumber                  go to state 65
    integer                     go to state 66
    booleanExpression           go to state 84
    simpleBoolean               go to state 68
    implication                 go to state 69
    booleanTerm                 go to state 70
    booleanFactor               go to state 71
    booleanSecondary            go to state 72
    booleanPrimary              go to state 73
    logicalValue                go to state 74
    relation                    go to state 75
    ifClause                    go to state 76


state 19

   86 unconditionalStatement: block .

    $default  reduce using rule 86 (unconditionalStatement)


state 20

    5 block: tlabel . block
   14 compoundStatement: tlabel . compoundStatement
   90 conditionalStatement: tlabel . conditionalStatement

    TOKEN_IDENTIFIER  shift, and go to state 1
    TOKEN_BEGIN       shift, and go to state 2
    TOKEN_INTEGER     shift, and go to state 3
    TOKEN_IF          shift, and go to state 17

    blockHead             go to state 4
    unlabelledBlock       go to state 5
    block                 go to state 39
    tlabel                go to state 20
    label                 go to state 8
    unlabelledCompound    go to state 10
    tbegin                go to state 11
    compoundStatement     go to state 40
    integer               go to state 13
    identifier            go to state 14
    conditionalStatement  go to state 85
    ifStatement           go to state 27
    ifClause              go to state 28


state 21

    6 tlabel: label . TOKEN_COLON
   94 basicStatement: label . basicStatement

    TOKEN_IDENTIFIER         shift, and go to state 1
    TOKEN_INTEGER            shift, and go to state 3
    TOKEN_COLON              shift, and go to state 41
    TOKEN_ASSIGN_IDENTIFIER  shift, and go to state 18

    $default  reduce using rule 104 (empty)

    label                     go to state 86
    integer                   go to state 13
    identifier                go to state 24
    basicStatement            go to state 87
    unlabelledBasicStatement  go to state 30
    dummyStatement            go to state 31
    assignmentStatement       go to state 32
    empty                     go to state 34
    procedureStatement        go to state 35
    procedureIdentifier       go to state 36


state 22

   85 unconditionalStatement: compoundStatement .

    $default  reduce using rule 85 (unconditionalStatement)


state 23

   11 unlabelledCompound: TOKEN_BEGIN compoundTail .

    $default  reduce using rule 11 (unlabelledCompound)


state 24

    7 label: identifier .
  106 procedureIdentifier: identifier .

    TOKEN_OPEN_BRACKET  reduce using rule 106 (procedureIdentifier)
    TOKEN_RETURN        reduce using rule 106 (procedureIdentifier)
    $default            reduce using rule 7 (label)


state 25

  114 statement: unconditionalStatement .

    $default  reduce using rule 114 (statement)


state 26

  115 statement: conditionalStatement .

    $default  reduce using rule 115 (statement)


state 27

   87 conditionalStatement: ifStatement .

    $default  reduce using rule 87 (conditionalStatement)


state 28

   88 conditionalStatement: ifClause . unconditionalStatement TOKEN_ELSE statement
   89                     | ifClause . forStatement
   91 ifStatement: ifClause . unconditionalStatement

    TOKEN_IDENTIFIER         shift, and go to state 1
    TOKEN_BEGIN              shift, and go to state 2
    TOKEN_INTEGER            shift, and go to state 3
    TOKEN_FOR                shift, and go to state 16
    TOKEN_ASSIGN_IDENTIFIER  shift, and go to state 18

    $default  reduce using rule 104 (empty)

    blockHead                 go to state 4
    unlabelledBlock           go to state 5
    block                     go to state 19
    tlabel                    go to state 7
    label                     go to state 21
    unlabelledCompound        go to state 10
    tbegin                    go to state 11
    compoundStatement         go to state 22
    integer                   go to state 13
    identifier                go to state 24
    unconditionalStatement    go to state 88
    basicStatement            go to state 29
    unlabelledBasicStatement  go to state 30
    dummyStatement            go to state 31
    assignmentStatement       go to state 32
    forStatement              go to state 89
    empty                     go to state 34
    procedureStatement        go to state 35
    procedureIdentifier       go to state 36


state 29

   84 unconditionalStatement: basicStatement .

    $default  reduce using rule 84 (unconditionalStatement)


state 30

   93 basicStatement: unlabelledBasicStatement .

    $default  reduce using rule 93 (basicStatement)


state 31

   96 unlabelledBasicStatement: dummyStatement .

    $default  reduce using rule 96 (unlabelledBasicStatement)


state 32

   95 unlabelledBasicStatement: assignmentStatement .

    $default  reduce using rule 95 (unlabelledBasicStatement)


state 33

  116 statement: forStatement .

    $default  reduce using rule 116 (statement)


state 34

   99 dummyStatement: empty .

    $default  reduce using rule 99 (dummyStatement)


state 35

   98 unlabelledBasicStatement: procedureStatement . @3 returnStatement

    $default  reduce using rule 97 (@3)

    @3  go to state 90


state 36

  105 procedureStatement: procedureIdentifier . actualParameterPart

    TOKEN_OPEN_BRACKET  shift, and go to state 91

    $default  reduce using rule 104 (empty)

    empty                go to state 92
    actualParameterPart  go to state 93


state 37

   15 compoundTail: statement . TOKEN_END
   16             | statement . TOKEN_SEMICOLON compoundTail

    TOKEN_END        shift, and go to state 94
    TOKEN_SEMICOLON  shift, and go to state 95


state 38

    2 blockHead: blockHead TOKEN_SEMICOLON . declaration
    3 unlabelledBlock: blockHead TOKEN_SEMICOLON . compoundTail

    TOKEN_PRINT              shift, and go to state 15
    TOKEN_IDENTIFIER         shift, and go to state 1
    TOKEN_BEGIN              shift, and go to state 2
    TOKEN_PROCEDURE          shift, and go to state 43
    TOKEN_INTEGER            shift, and go to state 3
    TOKEN_FOR                shift, and go to state 16
    TOKEN_IF                 shift, and go to state 17
    TOKEN_BOOLEAN            shift, and go to state 44
    TOKEN_ARRAY              shift, and go to state 45
    TOKEN_TINTEGER           shift, and go to state 46
    TOKEN_TREAL              shift, and go to state 47
    TOKEN_ASSIGN_IDENTIFIER  shift, and go to state 18

    $default  reduce using rule 104 (empty)

    blockHead                 go to state 4
    unlabelledBlock           go to state 5
    block                     go to state 19
    tlabel                    go to state 20
    label                     go to state 21
    unlabelledCompound        go to state 10
    tbegin                    go to state 11
    compoundStatement         go to state 22
    compoundTail              go to state 96
    declaration               go to state 97
    arrayDeclaration          go to state 49
    integer                   go to state 13
    identifier                go to state 24
    type                      go to state 50
    typeDeclaration           go to state 51
    unconditionalStatement    go to state 25
    conditionalStatement      go to state 26
    ifStatement               go to state 27
    ifClause                  go to state 28
    basicStatement            go to state 29
    unlabelledBasicStatement  go to state 30
    dummyStatement            go to state 31
    assignmentStatement       go to state 32
    forStatement              go to state 33
    empty                     go to state 34
    procedureStatement        go to state 35
    procedureIdentifier       go to state 36
    statement                 go to state 37
    procedureDeclaration      go to state 52


state 39

    5 block: tlabel block .

    $default  reduce using rule 5 (block)


state 40

   14 compoundStatement: tlabel compoundStatement .

    $default  reduce using rule 14 (compoundStatement)


state 41

    6 tlabel: label TOKEN_COLON .

    $default  reduce using rule 6 (tlabel)


state 42

    0 $accept: program $end .

    $default  accept


state 43

  142 procedureDeclaration: TOKEN_PROCEDURE . procedureHeading procedureBody

    TOKEN_IDENTIFIER  shift, and go to state 1

    identifier           go to state 98
    procedureIdentifier  go to state 99
    procedureHeading     go to state 100


state 44

   81 type: TOKEN_BOOLEAN .

    $default  reduce using rule 81 (type)


state 45

   31 arrayDeclaration: TOKEN_ARRAY . arrayList

    TOKEN_IDENTIFIER  shift, and go to state 1

    arrayIdentifier  go to state 101
    arraySegment     go to state 102
    arrayList        go to state 103
    identifier       go to state 104


state 46

   80 type: TOKEN_TINTEGER .

    $default  reduce using rule 80 (type)


state 47

   79 type: TOKEN_TREAL .

    $default  reduce using rule 79 (type)


state 48

    1 blockHead: tbegin declaration .

    $default  reduce using rule 1 (blockHead)


state 49

   18 declaration: arrayDeclaration .

    $default  reduce using rule 18 (declaration)


state 50

   32 arrayDeclaration: type . TOKEN_ARRAY arrayList
   82 typeDeclaration: type . listType
  143 procedureDeclaration: type . TOKEN_PROCEDURE procedureHeading procedureBody

    TOKEN_IDENTIFIER  shift, and go to state 1
    TOKEN_PROCEDURE   shift, and go to state 105
    TOKEN_ARRAY       shift, and go to state 106

    identifier     go to state 107
    listType       go to state 108
    varIdentifier  go to state 109


state 51

   17 declaration: typeDeclaration .

    $default  reduce using rule 17 (declaration)


state 52

   19 declaration: procedureDeclaration .

    $default  reduce using rule 19 (declaration)


state 53

   73 logicalValue: TOKEN_LOGICAL_VALUE .

    $default  reduce using rule 73 (logicalValue)


state 54

   38 simpleArithmeticExpression: TOKEN_PLUS . term

    TOKEN_OPEN_BRACKET  shift, and go to state 110
    TOKEN_REAL_NUM      shift, and go to state 57
    TOKEN_INTEGER       shift, and go to state 3

    term        go to state 111
    factor      go to state 63
    primary     go to state 64
    realNumber  go to state 65
    integer     go to state 66


state 55

   39 simpleArithmeticExpression: TOKEN_MINUS . term

    TOKEN_OPEN_BRACKET  shift, and go to state 110
    TOKEN_REAL_NUM      shift, and go to state 57
    TOKEN_INTEGER       shift, and go to state 3

    term        go to state 112
    factor      go to state 63
    primary     go to state 64
    realNumber  go to state 65
    integer     go to state 66


state 56

   49 primary: TOKEN_OPEN_BRACKET . arithmeticExpression TOKEN_CLOSE_BRACKET
   72 booleanPrimary: TOKEN_OPEN_BRACKET . booleanExpression TOKEN_CLOSE_BRACKET

    TOKEN_LOGICAL_VALUE  shift, and go to state 53
    TOKEN_PLUS           shift, and go to state 54
    TOKEN_MINUS          shift, and go to state 55
    TOKEN_OPEN_BRACKET   shift, and go to state 56
    TOKEN_REAL_NUM       shift, and go to state 57
    TOKEN_INTEGER        shift, and go to state 3
    TOKEN_NOT_OP         shift, and go to state 58
    TOKEN_IF             shift, and go to state 17

    arithmeticExpression        go to state 113
    simpleArithmeticExpression  go to state 61
    term                        go to state 62
    factor                      go to state 63
    primary                     go to state 64
    realNumber                  go to state 65
    integer                     go to state 66
    booleanExpression           go to state 114
    simpleBoolean               go to state 68
    implication                 go to state 69
    booleanTerm                 go to state 70
    booleanFactor               go to state 71
    booleanSecondary            go to state 72
    booleanPrimary              go to state 73
    logicalValue                go to state 74
    relation                    go to state 75
    ifClause                    go to state 76


state 57

   50 realNumber: TOKEN_REAL_NUM .

    $default  reduce using rule 50 (realNumber)


state 58

   69 booleanSecondary: TOKEN_NOT_OP . booleanPrimary

    TOKEN_LOGICAL_VALUE  shift, and go to state 53
    TOKEN_PLUS           shift, and go to state 54
    TOKEN_MINUS          shift, and go to state 55
    TOKEN_OPEN_BRACKET   shift, and go to state 56
    TOKEN_REAL_NUM       shift, and go to state 57
    TOKEN_INTEGER        shift, and go to state 3

    simpleArithmeticExpression  go to state 81
    term                        go to state 62
    factor                      go to state 63
    primary                     go to state 64
    realNumber                  go to state 65
    integer                     go to state 66
    booleanPrimary              go to state 115
    logicalValue                go to state 74
    relation                    go to state 75


state 59

  117 statement: TOKEN_PRINT expression .

    $default  reduce using rule 117 (statement)


state 60

   33 expression: arithmeticExpression .

    $default  reduce using rule 33 (expression)


state 61

   35 arithmeticExpression: simpleArithmeticExpression .
   40 simpleArithmeticExpression: simpleArithmeticExpression . TOKEN_PLUS term
   41                           | simpleArithmeticExpression . TOKEN_MINUS term
   74 relation: simpleArithmeticExpression . relationalOperator simpleArithmeticExpression

    TOKEN_PLUS    shift, and go to state 116
    TOKEN_MINUS   shift, and go to state 117
    TOKEN_REL_OP  shift, and go to state 118

    $default  reduce using rule 35 (arithmeticExpression)

    relationalOperator  go to state 119


state 62

   37 simpleArithmeticExpression: term .
   43 term: term . TOKEN_MULTIPLY factor
   44     | term . TOKEN_DIVIDE factor

    TOKEN_DIVIDE    shift, and go to state 120
    TOKEN_MULTIPLY  shift, and go to state 121

    $default  reduce using rule 37 (simpleArithmeticExpression)


state 63

   42 term: factor .
   46 factor: factor . TOKEN_POWER primary

    TOKEN_POWER  shift, and go to state 122

    $default  reduce using rule 42 (term)


state 64

   45 factor: primary .

    $default  reduce using rule 45 (factor)


state 65

   47 primary: realNumber .

    $default  reduce using rule 47 (primary)


state 66

   48 primary: integer .

    $default  reduce using rule 48 (primary)


state 67

   34 expression: booleanExpression .

    $default  reduce using rule 34 (expression)


state 68

   59 booleanExpression: simpleBoolean .
   61 simpleBoolean: simpleBoolean . TOKEN_EQUIV implication

    TOKEN_EQUIV  shift, and go to state 123

    $default  reduce using rule 59 (booleanExpression)


state 69

   60 simpleBoolean: implication .
   63 implication: implication . TOKEN_IMPLY booleanTerm

    TOKEN_IMPLY  shift, and go to state 124

    $default  reduce using rule 60 (simpleBoolean)


state 70

   62 implication: booleanTerm .
   65 booleanTerm: booleanTerm . TOKEN_OR_OP booleanFactor

    TOKEN_OR_OP  shift, and go to state 125

    $default  reduce using rule 62 (implication)


state 71

   64 booleanTerm: booleanFactor .
   67 booleanFactor: booleanFactor . TOKEN_AND_OP booleanSecondary

    TOKEN_AND_OP  shift, and go to state 126

    $default  reduce using rule 64 (booleanTerm)


state 72

   66 booleanFactor: booleanSecondary .

    $default  reduce using rule 66 (booleanFactor)


state 73

   68 booleanSecondary: booleanPrimary .

    $default  reduce using rule 68 (booleanSecondary)


state 74

   70 booleanPrimary: logicalValue .

    $default  reduce using rule 70 (booleanPrimary)


state 75

   71 booleanPrimary: relation .

    $default  reduce using rule 71 (booleanPrimary)


state 76

   36 arithmeticExpression: ifClause . simpleArithmeticExpression TOKEN_ELSE arithmeticExpression

    TOKEN_PLUS          shift, and go to state 54
    TOKEN_MINUS         shift, and go to state 55
    TOKEN_OPEN_BRACKET  shift, and go to state 110
    TOKEN_REAL_NUM      shift, and go to state 57
    TOKEN_INTEGER       shift, and go to state 3

    simpleArithmeticExpression  go to state 127
    term                        go to state 62
    factor                      go to state 63
    primary                     go to state 64
    realNumber                  go to state 65
    integer                     go to state 66


state 77

   54 subscriptedVariable: arrayIdentifier . TOKEN_OPEN_SQUARE_BRACKET subscriptList TOKEN_CLOSE_SQUARE_BRACKET

    TOKEN_OPEN_SQUARE_BRACKET  shift, and go to state 128


state 78

  103 forStatement: TOKEN_FOR variable . TOKEN_ASSIGN arithmeticExpression TOKEN_STEP arithmeticExpression TOKEN_UNTIL arithmeticExpression TOKEN_DO statement

    TOKEN_ASSIGN  shift, and go to state 129


state 79

   53 variable: subscriptedVariable .

    $default  reduce using rule 53 (variable)


state 80

   25 arrayIdentifier: identifier .
   52 variable: identifier .

    TOKEN_ASSIGN  reduce using rule 52 (variable)
    $default      reduce using rule 25 (arrayIdentifier)


state 81

   40 simpleArithmeticExpression: simpleArithmeticExpression . TOKEN_PLUS term
   41                           | simpleArithmeticExpression . TOKEN_MINUS term
   74 relation: simpleArithmeticExpression . relationalOperator simpleArithmeticExpression

    TOKEN_PLUS    shift, and go to state 116
    TOKEN_MINUS   shift, and go to state 117
    TOKEN_REL_OP  shift, and go to state 118

    relationalOperator  go to state 119


state 82

   92 ifClause: TOKEN_IF booleanExpression . TOKEN_THEN

    TOKEN_THEN  shift, and go to state 130


state 83

  101 assignmentStatement: TOKEN_ASSIGN_IDENTIFIER arithmeticExpression .

    $default  reduce using rule 101 (assignmentStatement)


state 84

  102 assignmentStatement: TOKEN_ASSIGN_IDENTIFIER booleanExpression .

    $default  reduce using rule 102 (assignmentStatement)


state 85

   90 conditionalStatement: tlabel conditionalStatement .

    $default  reduce using rule 90 (conditionalStatement)


state 86

   94 basicStatement: label . basicStatement

    TOKEN_IDENTIFIER         shift, and go to state 1
    TOKEN_INTEGER            shift, and go to state 3
    TOKEN_ASSIGN_IDENTIFIER  shift, and go to state 18

    $default  reduce using rule 104 (empty)

    label                     go to state 86
    integer                   go to state 13
    identifier                go to state 24
    basicStatement            go to state 87
    unlabelledBasicStatement  go to state 30
    dummyStatement            go to state 31
    assignmentStatement       go to state 32
    empty                     go to state 34
    procedureStatement        go to state 35
    procedureIdentifier       go to state 36


state 87

   94 basicStatement: label basicStatement .

    $default  reduce using rule 94 (basicStatement)


state 88

   88 conditionalStatement: ifClause unconditionalStatement . TOKEN_ELSE statement
   91 ifStatement: ifClause unconditionalStatement .

    TOKEN_ELSE  shift, and go to state 131

    $default  reduce using rule 91 (ifStatement)


state 89

   89 conditionalStatement: ifClause forStatement .

    $default  reduce using rule 89 (conditionalStatement)


state 90

   98 unlabelledBasicStatement: procedureStatement @3 . returnStatement

    TOKEN_RETURN  shift, and go to state 132

    returnStatement  go to state 133


state 91

  108 actualParameterPart: TOKEN_OPEN_BRACKET . actualParameterList TOKEN_CLOSE_BRACKET

    TOKEN_LOGICAL_VALUE  shift, and go to state 53
    TOKEN_PLUS           shift, and go to state 54
    TOKEN_MINUS          shift, and go to state 55
    TOKEN_OPEN_BRACKET   shift, and go to state 56
    TOKEN_REAL_NUM       shift, and go to state 57
    TOKEN_INTEGER        shift, and go to state 3
    TOKEN_NOT_OP         shift, and go to state 58
    TOKEN_IF             shift, and go to state 17

    expression                  go to state 134
    arithmeticExpression        go to state 60
    simpleArithmeticExpression  go to state 61
    term                        go to state 62
    factor                      go to state 63
    primary                     go to state 64
    realNumber                  go to state 65
    integer                     go to state 66
    booleanExpression           go to state 67
    simpleBoolean               go to state 68
    implication                 go to state 69
    booleanTerm                 go to state 70
    booleanFactor               go to state 71
    booleanSecondary            go to state 72
    booleanPrimary              go to state 73
    logicalValue                go to state 74
    relation                    go to state 75
    ifClause                    go to state 76
    actualParameterList         go to state 135
    actualParameter             go to state 136


state 92

  107 actualParameterPart: empty .

    $default  reduce using rule 107 (actualParameterPart)


state 93

  105 procedureStatement: procedureIdentifier actualParameterPart .

    $default  reduce using rule 105 (procedureStatement)


state 94

   15 compoundTail: statement TOKEN_END .

    $default  reduce using rule 15 (compoundTail)


state 95

   16 compoundTail: statement TOKEN_SEMICOLON . compoundTail

    TOKEN_PRINT              shift, and go to state 15
    TOKEN_IDENTIFIER         shift, and go to state 1
    TOKEN_BEGIN              shift, and go to state 2
    TOKEN_INTEGER            shift, and go to state 3
    TOKEN_FOR                shift, and go to state 16
    TOKEN_IF                 shift, and go to state 17
    TOKEN_ASSIGN_IDENTIFIER  shift, and go to state 18

    $default  reduce using rule 104 (empty)

    blockHead                 go to state 4
    unlabelledBlock           go to state 5
    block                     go to state 19
    tlabel                    go to state 20
    label                     go to state 21
    unlabelledCompound        go to state 10
    tbegin                    go to state 11
    compoundStatement         go to state 22
    compoundTail              go to state 137
    integer                   go to state 13
    identifier                go to state 24
    unconditionalStatement    go to state 25
    conditionalStatement      go to state 26
    ifStatement               go to state 27
    ifClause                  go to state 28
    basicStatement            go to state 29
    unlabelledBasicStatement  go to state 30
    dummyStatement            go to state 31
    assignmentStatement       go to state 32
    forStatement              go to state 33
    empty                     go to state 34
    procedureStatement        go to state 35
    procedureIdentifier       go to state 36
    statement                 go to state 37


state 96

    3 unlabelledBlock: blockHead TOKEN_SEMICOLON compoundTail .

    $default  reduce using rule 3 (unlabelledBlock)


state 97

    2 blockHead: blockHead TOKEN_SEMICOLON declaration .

    $default  reduce using rule 2 (blockHead)


state 98

  106 procedureIdentifier: identifier .

    $default  reduce using rule 106 (procedureIdentifier)


state 99

  140 procedureHeading: procedureIdentifier . @6 formalParameterPart TOKEN_SEMICOLON $@7 valuePart specificationPart

    $default  reduce using rule 138 (@6)

    @6  go to state 138


state 100

  142 procedureDeclaration: TOKEN_PROCEDURE procedureHeading . procedureBody

    TOKEN_PRINT              shift, and go to state 15
    TOKEN_IDENTIFIER         shift, and go to state 1
    TOKEN_BEGIN              shift, and go to state 2
    TOKEN_INTEGER            shift, and go to state 3
    TOKEN_FOR                shift, and go to state 16
    TOKEN_IF                 shift, and go to state 17
    TOKEN_ASSIGN_IDENTIFIER  shift, and go to state 18

    $default  reduce using rule 104 (empty)

    blockHead                 go to state 4
    unlabelledBlock           go to state 5
    block                     go to state 19
    tlabel                    go to state 20
    label                     go to state 21
    unlabelledCompound        go to state 10
    tbegin                    go to state 11
    compoundStatement         go to state 22
    integer                   go to state 13
    identifier                go to state 24
    unconditionalStatement    go to state 25
    conditionalStatement      go to state 26
    ifStatement               go to state 27
    ifClause                  go to state 28
    basicStatement            go to state 29
    unlabelledBasicStatement  go to state 30
    dummyStatement            go to state 31
    assignmentStatement       go to state 32
    forStatement              go to state 33
    empty                     go to state 34
    procedureStatement        go to state 35
    procedureIdentifier       go to state 36
    statement                 go to state 139
    procedureBody             go to state 140


state 101

   26 arraySegment: arrayIdentifier . TOKEN_OPEN_SQUARE_BRACKET boundPairList TOKEN_CLOSE_SQUARE_BRACKET
   27             | arrayIdentifier . TOKEN_COMMA arraySegment

    TOKEN_COMMA                shift, and go to state 141
    TOKEN_OPEN_SQUARE_BRACKET  shift, and go to state 142


state 102

   28 arrayList: arraySegment .

    $default  reduce using rule 28 (arrayList)


state 103

   30 arrayList: arrayList . TOKEN_COMMA @1 arraySegment
   31 arrayDeclaration: TOKEN_ARRAY arrayList .

    TOKEN_COMMA  shift, and go to state 143

    $default  reduce using rule 31 (arrayDeclaration)


state 104

   25 arrayIdentifier: identifier .

    $default  reduce using rule 25 (arrayIdentifier)


state 105

  143 procedureDeclaration: type TOKEN_PROCEDURE . procedureHeading procedureBody

    TOKEN_IDENTIFIER  shift, and go to state 1

    identifier           go to state 98
    procedureIdentifier  go to state 99
    procedureHeading     go to state 144


state 106

   32 arrayDeclaration: type TOKEN_ARRAY . arrayList

    TOKEN_IDENTIFIER  shift, and go to state 1

    arrayIdentifier  go to state 101
    arraySegment     go to state 102
    arrayList        go to state 145
    identifier       go to state 104


state 107

   83 varIdentifier: identifier .

    $default  reduce using rule 83 (varIdentifier)


state 108

   78 listType: listType . TOKEN_COMMA @2 varIdentifier
   82 typeDeclaration: type listType .

    TOKEN_COMMA  shift, and go to state 146

    $default  reduce using rule 82 (typeDeclaration)


state 109

   76 listType: varIdentifier .

    $default  reduce using rule 76 (listType)


state 110

   49 primary: TOKEN_OPEN_BRACKET . arithmeticExpression TOKEN_CLOSE_BRACKET

    TOKEN_PLUS          shift, and go to state 54
    TOKEN_MINUS         shift, and go to state 55
    TOKEN_OPEN_BRACKET  shift, and go to state 110
    TOKEN_REAL_NUM      shift, and go to state 57
    TOKEN_INTEGER       shift, and go to state 3
    TOKEN_IF            shift, and go to state 17

    arithmeticExpression        go to state 113
    simpleArithmeticExpression  go to state 147
    term                        go to state 62
    factor                      go to state 63
    primary                     go to state 64
    realNumber                  go to state 65
    integer                     go to state 66
    ifClause                    go to state 76


state 111

   38 simpleArithmeticExpression: TOKEN_PLUS term .
   43 term: term . TOKEN_MULTIPLY factor
   44     | term . TOKEN_DIVIDE factor

    TOKEN_DIVIDE    shift, and go to state 120
    TOKEN_MULTIPLY  shift, and go to state 121

    $default  reduce using rule 38 (simpleArithmeticExpression)


state 112

   39 simpleArithmeticExpression: TOKEN_MINUS term .
   43 term: term . TOKEN_MULTIPLY factor
   44     | term . TOKEN_DIVIDE factor

    TOKEN_DIVIDE    shift, and go to state 120
    TOKEN_MULTIPLY  shift, and go to state 121

    $default  reduce using rule 39 (simpleArithmeticExpression)


state 113

   49 primary: TOKEN_OPEN_BRACKET arithmeticExpression . TOKEN_CLOSE_BRACKET

    TOKEN_CLOSE_BRACKET  shift, and go to state 148


state 114

   72 booleanPrimary: TOKEN_OPEN_BRACKET booleanExpression . TOKEN_CLOSE_BRACKET

    TOKEN_CLOSE_BRACKET  shift, and go to state 149


state 115

   69 booleanSecondary: TOKEN_NOT_OP booleanPrimary .

    $default  reduce using rule 69 (booleanSecondary)


state 116

   40 simpleArithmeticExpression: simpleArithmeticExpression TOKEN_PLUS . term

    TOKEN_OPEN_BRACKET  shift, and go to state 110
    TOKEN_REAL_NUM      shift, and go to state 57
    TOKEN_INTEGER       shift, and go to state 3

    term        go to state 150
    factor      go to state 63
    primary     go to state 64
    realNumber  go to state 65
    integer     go to state 66


state 117

   41 simpleArithmeticExpression: simpleArithmeticExpression TOKEN_MINUS . term

    TOKEN_OPEN_BRACKET  shift, and go to state 110
    TOKEN_REAL_NUM      shift, and go to state 57
    TOKEN_INTEGER       shift, and go to state 3

    term        go to state 151
    factor      go to state 63
    primary     go to state 64
    realNumber  go to state 65
    integer     go to state 66


state 118

   75 relationalOperator: TOKEN_REL_OP .

    $default  reduce using rule 75 (relationalOperator)


state 119

   74 relation: simpleArithmeticExpression relationalOperator . simpleArithmeticExpression

    TOKEN_PLUS          shift, and go to state 54
    TOKEN_MINUS         shift, and go to state 55
    TOKEN_OPEN_BRACKET  shift, and go to state 110
    TOKEN_REAL_NUM      shift, and go to state 57
    TOKEN_INTEGER       shift, and go to state 3

    simpleArithmeticExpression  go to state 152
    term                        go to state 62
    factor                      go to state 63
    primary                     go to state 64
    realNumber                  go to state 65
    integer                     go to state 66


state 120

   44 term: term TOKEN_DIVIDE . factor

    TOKEN_OPEN_BRACKET  shift, and go to state 110
    TOKEN_REAL_NUM      shift, and go to state 57
    TOKEN_INTEGER       shift, and go to state 3

    factor      go to state 153
    primary     go to state 64
    realNumber  go to state 65
    integer     go to state 66


state 121

   43 term: term TOKEN_MULTIPLY . factor

    TOKEN_OPEN_BRACKET  shift, and go to state 110
    TOKEN_REAL_NUM      shift, and go to state 57
    TOKEN_INTEGER       shift, and go to state 3

    factor      go to state 154
    primary     go to state 64
    realNumber  go to state 65
    integer     go to state 66


state 122

   46 factor: factor TOKEN_POWER . primary

    TOKEN_OPEN_BRACKET  shift, and go to state 110
    TOKEN_REAL_NUM      shift, and go to state 57
    TOKEN_INTEGER       shift, and go to state 3

    primary     go to state 155
    realNumber  go to state 65
    integer     go to state 66


state 123

   61 simpleBoolean: simpleBoolean TOKEN_EQUIV . implication

    TOKEN_LOGICAL_VALUE  shift, and go to state 53
    TOKEN_PLUS           shift, and go to state 54
    TOKEN_MINUS          shift, and go to state 55
    TOKEN_OPEN_BRACKET   shift, and go to state 56
    TOKEN_REAL_NUM       shift, and go to state 57
    TOKEN_INTEGER        shift, and go to state 3
    TOKEN_NOT_OP         shift, and go to state 58

    simpleArithmeticExpression  go to state 81
    term                        go to state 62
    factor                      go to state 63
    primary                     go to state 64
    realNumber                  go to state 65
    integer                     go to state 66
    implication                 go to state 156
    booleanTerm                 go to state 70
    booleanFactor               go to state 71
    booleanSecondary            go to state 72
    booleanPrimary              go to state 73
    logicalValue                go to state 74
    relation                    go to state 75


state 124

   63 implication: implication TOKEN_IMPLY . booleanTerm

    TOKEN_LOGICAL_VALUE  shift, and go to state 53
    TOKEN_PLUS           shift, and go to state 54
    TOKEN_MINUS          shift, and go to state 55
    TOKEN_OPEN_BRACKET   shift, and go to state 56
    TOKEN_REAL_NUM       shift, and go to state 57
    TOKEN_INTEGER        shift, and go to state 3
    TOKEN_NOT_OP         shift, and go to state 58

    simpleArithmeticExpression  go to state 81
    term                        go to state 62
    factor                      go to state 63
    primary                     go to state 64
    realNumber                  go to state 65
    integer                     go to state 66
    booleanTerm                 go to state 157
    booleanFactor               go to state 71
    booleanSecondary            go to state 72
    booleanPrimary              go to state 73
    logicalValue                go to state 74
    relation                    go to state 75


state 125

   65 booleanTerm: booleanTerm TOKEN_OR_OP . booleanFactor

    TOKEN_LOGICAL_VALUE  shift, and go to state 53
    TOKEN_PLUS           shift, and go to state 54
    TOKEN_MINUS          shift, and go to state 55
    TOKEN_OPEN_BRACKET   shift, and go to state 56
    TOKEN_REAL_NUM       shift, and go to state 57
    TOKEN_INTEGER        shift, and go to state 3
    TOKEN_NOT_OP         shift, and go to state 58

    simpleArithmeticExpression  go to state 81
    term                        go to state 62
    factor                      go to state 63
    primary                     go to state 64
    realNumber                  go to state 65
    integer                     go to state 66
    booleanFactor               go to state 158
    booleanSecondary            go to state 72
    booleanPrimary              go to state 73
    logicalValue                go to state 74
    relation                    go to state 75


state 126

   67 booleanFactor: booleanFactor TOKEN_AND_OP . booleanSecondary

    TOKEN_LOGICAL_VALUE  shift, and go to state 53
    TOKEN_PLUS           shift, and go to state 54
    TOKEN_MINUS          shift, and go to state 55
    TOKEN_OPEN_BRACKET   shift, and go to state 56
    TOKEN_REAL_NUM       shift, and go to state 57
    TOKEN_INTEGER        shift, and go to state 3
    TOKEN_NOT_OP         shift, and go to state 58

    simpleArithmeticExpression  go to state 81
    term                        go to state 62
    factor                      go to state 63
    primary                     go to state 64
    realNumber                  go to state 65
    integer                     go to state 66
    booleanSecondary            go to state 159
    booleanPrimary              go to state 73
    logicalValue                go to state 74
    relation                    go to state 75


state 127

   36 arithmeticExpression: ifClause simpleArithmeticExpression . TOKEN_ELSE arithmeticExpression
   40 simpleArithmeticExpression: simpleArithmeticExpression . TOKEN_PLUS term
   41                           | simpleArithmeticExpression . TOKEN_MINUS term

    TOKEN_PLUS   shift, and go to state 116
    TOKEN_MINUS  shift, and go to state 117
    TOKEN_ELSE   shift, and go to state 160


state 128

   54 subscriptedVariable: arrayIdentifier TOKEN_OPEN_SQUARE_BRACKET . subscriptList TOKEN_CLOSE_SQUARE_BRACKET

    TOKEN_PLUS          shift, and go to state 54
    TOKEN_MINUS         shift, and go to state 55
    TOKEN_OPEN_BRACKET  shift, and go to state 110
    TOKEN_REAL_NUM      shift, and go to state 57
    TOKEN_INTEGER       shift, and go to state 3
    TOKEN_IF            shift, and go to state 17

    arithmeticExpression        go to state 161
    simpleArithmeticExpression  go to state 147
    term                        go to state 62
    factor                      go to state 63
    primary                     go to state 64
    realNumber                  go to state 65
    integer                     go to state 66
    subscriptList               go to state 162
    subscriptExpression         go to state 163
    ifClause                    go to state 76


state 129

  103 forStatement: TOKEN_FOR variable TOKEN_ASSIGN . arithmeticExpression TOKEN_STEP arithmeticExpression TOKEN_UNTIL arithmeticExpression TOKEN_DO statement

    TOKEN_PLUS          shift, and go to state 54
    TOKEN_MINUS         shift, and go to state 55
    TOKEN_OPEN_BRACKET  shift, and go to state 110
    TOKEN_REAL_NUM      shift, and go to state 57
    TOKEN_INTEGER       shift, and go to state 3
    TOKEN_IF            shift, and go to state 17

    arithmeticExpression        go to state 164
    simpleArithmeticExpression  go to state 147
    term                        go to state 62
    factor                      go to state 63
    primary                     go to state 64
    realNumber                  go to state 65
    integer                     go to state 66
    ifClause                    go to state 76


state 130

   92 ifClause: TOKEN_IF booleanExpression TOKEN_THEN .

    $default  reduce using rule 92 (ifClause)


state 131

   88 conditionalStatement: ifClause unconditionalStatement TOKEN_ELSE . statement

    TOKEN_PRINT              shift, and go to state 15
    TOKEN_IDENTIFIER         shift, and go to state 1
    TOKEN_BEGIN              shift, and go to state 2
    TOKEN_INTEGER            shift, and go to state 3
    TOKEN_FOR                shift, and go to state 16
    TOKEN_IF                 shift, and go to state 17
    TOKEN_ASSIGN_IDENTIFIER  shift, and go to state 18

    $default  reduce using rule 104 (empty)

    blockHead                 go to state 4
    unlabelledBlock           go to state 5
    block                     go to state 19
    tlabel                    go to state 20
    label                     go to state 21
    unlabelledCompound        go to state 10
    tbegin                    go to state 11
    compoundStatement         go to state 22
    integer                   go to state 13
    identifier                go to state 24
    unconditionalStatement    go to state 25
    conditionalStatement      go to state 26
    ifStatement               go to state 27
    ifClause                  go to state 28
    basicStatement            go to state 29
    unlabelledBasicStatement  go to state 30
    dummyStatement            go to state 31
    assignmentStatement       go to state 32
    forStatement              go to state 33
    empty                     go to state 34
    procedureStatement        go to state 35
    procedureIdentifier       go to state 36
    statement                 go to state 165


state 132

  100 returnStatement: TOKEN_RETURN . expression

    TOKEN_LOGICAL_VALUE  shift, and go to state 53
    TOKEN_PLUS           shift, and go to state 54
    TOKEN_MINUS          shift, and go to state 55
    TOKEN_OPEN_BRACKET   shift, and go to state 56
    TOKEN_REAL_NUM       shift, and go to state 57
    TOKEN_INTEGER        shift, and go to state 3
    TOKEN_NOT_OP         shift, and go to state 58
    TOKEN_IF             shift, and go to state 17

    expression                  go to state 166
    arithmeticExpression        go to state 60
    simpleArithmeticExpression  go to state 61
    term                        go to state 62
    factor                      go to state 63
    primary                     go to state 64
    realNumber                  go to state 65
    integer                     go to state 66
    booleanExpression           go to state 67
    simpleBoolean               go to state 68
    implication                 go to state 69
    booleanTerm                 go to state 70
    booleanFactor               go to state 71
    booleanSecondary            go to state 72
    booleanPrimary              go to state 73
    logicalValue                go to state 74
    relation                    go to state 75
    ifClause                    go to state 76


state 133

   98 unlabelledBasicStatement: procedureStatement @3 returnStatement .

    $default  reduce using rule 98 (unlabelledBasicStatement)


state 134

  111 actualParameter: expression .

    $default  reduce using rule 111 (actualParameter)


state 135

  108 actualParameterPart: TOKEN_OPEN_BRACKET actualParameterList . TOKEN_CLOSE_BRACKET
  110 actualParameterList: actualParameterList . parameterDelimiter actualParameter

    TOKEN_COMMA                 shift, and go to state 167
    TOKEN_CLOSE_BRACKET         shift, and go to state 168
    TOKEN_CLOSE_SQUARE_BRACKET  shift, and go to state 169

    parameterDelimiter  go to state 170


state 136

  109 actualParameterList: actualParameter .

    $default  reduce using rule 109 (actualParameterList)


state 137

   16 compoundTail: statement TOKEN_SEMICOLON compoundTail .

    $default  reduce using rule 16 (compoundTail)


state 138

  140 procedureHeading: procedureIdentifier @6 . formalParameterPart TOKEN_SEMICOLON $@7 valuePart specificationPart

    TOKEN_OPEN_BRACKET  shift, and go to state 171

    $default  reduce using rule 104 (empty)

    empty                go to state 172
    formalParameterPart  go to state 173


state 139

  141 procedureBody: statement .

    $default  reduce using rule 141 (procedureBody)


state 140

  142 procedureDeclaration: TOKEN_PROCEDURE procedureHeading procedureBody .

    $default  reduce using rule 142 (procedureDeclaration)


state 141

   27 arraySegment: arrayIdentifier TOKEN_COMMA . arraySegment

    TOKEN_IDENTIFIER  shift, and go to state 1

    arrayIdentifier  go to state 101
    arraySegment     go to state 174
    identifier       go to state 104


state 142

   26 arraySegment: arrayIdentifier TOKEN_OPEN_SQUARE_BRACKET . boundPairList TOKEN_CLOSE_SQUARE_BRACKET

    TOKEN_PLUS          shift, and go to state 54
    TOKEN_MINUS         shift, and go to state 55
    TOKEN_OPEN_BRACKET  shift, and go to state 110
    TOKEN_REAL_NUM      shift, and go to state 57
    TOKEN_INTEGER       shift, and go to state 3
    TOKEN_IF            shift, and go to state 17

    lowerBound                  go to state 175
    boundPair                   go to state 176
    boundPairList               go to state 177
    arithmeticExpression        go to state 178
    simpleArithmeticExpression  go to state 147
    term                        go to state 62
    factor                      go to state 63
    primary                     go to state 64
    realNumber                  go to state 65
    integer                     go to state 66
    ifClause                    go to state 76


state 143

   30 arrayList: arrayList TOKEN_COMMA . @1 arraySegment

    $default  reduce using rule 29 (@1)

    @1  go to state 179


state 144

  143 procedureDeclaration: type TOKEN_PROCEDURE procedureHeading . procedureBody

    TOKEN_PRINT              shift, and go to state 15
    TOKEN_IDENTIFIER         shift, and go to state 1
    TOKEN_BEGIN              shift, and go to state 2
    TOKEN_INTEGER            shift, and go to state 3
    TOKEN_FOR                shift, and go to state 16
    TOKEN_IF                 shift, and go to state 17
    TOKEN_ASSIGN_IDENTIFIER  shift, and go to state 18

    $default  reduce using rule 104 (empty)

    blockHead                 go to state 4
    unlabelledBlock           go to state 5
    block                     go to state 19
    tlabel                    go to state 20
    label                     go to state 21
    unlabelledCompound        go to state 10
    tbegin                    go to state 11
    compoundStatement         go to state 22
    integer                   go to state 13
    identifier                go to state 24
    unconditionalStatement    go to state 25
    conditionalStatement      go to state 26
    ifStatement               go to state 27
    ifClause                  go to state 28
    basicStatement            go to state 29
    unlabelledBasicStatement  go to state 30
    dummyStatement            go to state 31
    assignmentStatement       go to state 32
    forStatement              go to state 33
    empty                     go to state 34
    procedureStatement        go to state 35
    procedureIdentifier       go to state 36
    statement                 go to state 139
    procedureBody             go to state 180


state 145

   30 arrayList: arrayList . TOKEN_COMMA @1 arraySegment
   32 arrayDeclaration: type TOKEN_ARRAY arrayList .

    TOKEN_COMMA  shift, and go to state 143

    $default  reduce using rule 32 (arrayDeclaration)


state 146

   78 listType: listType TOKEN_COMMA . @2 varIdentifier

    $default  reduce using rule 77 (@2)

    @2  go to state 181


state 147

   35 arithmeticExpression: simpleArithmeticExpression .
   40 simpleArithmeticExpression: simpleArithmeticExpression . TOKEN_PLUS term
   41                           | simpleArithmeticExpression . TOKEN_MINUS term

    TOKEN_PLUS   shift, and go to state 116
    TOKEN_MINUS  shift, and go to state 117

    $default  reduce using rule 35 (arithmeticExpression)


state 148

   49 primary: TOKEN_OPEN_BRACKET arithmeticExpression TOKEN_CLOSE_BRACKET .

    $default  reduce using rule 49 (primary)


state 149

   72 booleanPrimary: TOKEN_OPEN_BRACKET booleanExpression TOKEN_CLOSE_BRACKET .

    $default  reduce using rule 72 (booleanPrimary)


state 150

   40 simpleArithmeticExpression: simpleArithmeticExpression TOKEN_PLUS term .
   43 term: term . TOKEN_MULTIPLY factor
   44     | term . TOKEN_DIVIDE factor

    TOKEN_DIVIDE    shift, and go to state 120
    TOKEN_MULTIPLY  shift, and go to state 121

    $default  reduce using rule 40 (simpleArithmeticExpression)


state 151

   41 simpleArithmeticExpression: simpleArithmeticExpression TOKEN_MINUS term .
   43 term: term . TOKEN_MULTIPLY factor
   44     | term . TOKEN_DIVIDE factor

    TOKEN_DIVIDE    shift, and go to state 120
    TOKEN_MULTIPLY  shift, and go to state 121

    $default  reduce using rule 41 (simpleArithmeticExpression)


state 152

   40 simpleArithmeticExpression: simpleArithmeticExpression . TOKEN_PLUS term
   41                           | simpleArithmeticExpression . TOKEN_MINUS term
   74 relation: simpleArithmeticExpression relationalOperator simpleArithmeticExpression .

    TOKEN_PLUS   shift, and go to state 116
    TOKEN_MINUS  shift, and go to state 117

    $default  reduce using rule 74 (relation)


state 153

   44 term: term TOKEN_DIVIDE factor .
   46 factor: factor . TOKEN_POWER primary

    TOKEN_POWER  shift, and go to state 122

    $default  reduce using rule 44 (term)


state 154

   43 term: term TOKEN_MULTIPLY factor .
   46 factor: factor . TOKEN_POWER primary

    TOKEN_POWER  shift, and go to state 122

    $default  reduce using rule 43 (term)


state 155

   46 factor: factor TOKEN_POWER primary .

    $default  reduce using rule 46 (factor)


state 156

   61 simpleBoolean: simpleBoolean TOKEN_EQUIV implication .
   63 implication: implication . TOKEN_IMPLY booleanTerm

    TOKEN_IMPLY  shift, and go to state 124

    $default  reduce using rule 61 (simpleBoolean)


state 157

   63 implication: implication TOKEN_IMPLY booleanTerm .
   65 booleanTerm: booleanTerm . TOKEN_OR_OP booleanFactor

    TOKEN_OR_OP  shift, and go to state 125

    $default  reduce using rule 63 (implication)


state 158

   65 booleanTerm: booleanTerm TOKEN_OR_OP booleanFactor .
   67 booleanFactor: booleanFactor . TOKEN_AND_OP booleanSecondary

    TOKEN_AND_OP  shift, and go to state 126

    $default  reduce using rule 65 (booleanTerm)


state 159

   67 booleanFactor: booleanFactor TOKEN_AND_OP booleanSecondary .

    $default  reduce using rule 67 (booleanFactor)


state 160

   36 arithmeticExpression: ifClause simpleArithmeticExpression TOKEN_ELSE . arithmeticExpression

    TOKEN_PLUS          shift, and go to state 54
    TOKEN_MINUS         shift, and go to state 55
    TOKEN_OPEN_BRACKET  shift, and go to state 110
    TOKEN_REAL_NUM      shift, and go to state 57
    TOKEN_INTEGER       shift, and go to state 3
    TOKEN_IF            shift, and go to state 17

    arithmeticExpression        go to state 182
    simpleArithmeticExpression  go to state 147
    term                        go to state 62
    factor                      go to state 63
    primary                     go to state 64
    realNumber                  go to state 65
    integer                     go to state 66
    ifClause                    go to state 76


state 161

   57 subscriptExpression: arithmeticExpression .

    $default  reduce using rule 57 (subscriptExpression)


state 162

   54 subscriptedVariable: arrayIdentifier TOKEN_OPEN_SQUARE_BRACKET subscriptList . TOKEN_CLOSE_SQUARE_BRACKET
   56 subscriptList: subscriptList . TOKEN_COMMA subscriptExpression

    TOKEN_COMMA                 shift, and go to state 183
    TOKEN_CLOSE_SQUARE_BRACKET  shift, and go to state 184


state 163

   55 subscriptList: subscriptExpression .

    $default  reduce using rule 55 (subscriptList)


state 164

  103 forStatement: TOKEN_FOR variable TOKEN_ASSIGN arithmeticExpression . TOKEN_STEP arithmeticExpression TOKEN_UNTIL arithmeticExpression TOKEN_DO statement

    TOKEN_STEP  shift, and go to state 185


state 165

   88 conditionalStatement: ifClause unconditionalStatement TOKEN_ELSE statement .

    $default  reduce using rule 88 (conditionalStatement)


state 166

  100 returnStatement: TOKEN_RETURN expression .

    $default  reduce using rule 100 (returnStatement)


state 167

  112 parameterDelimiter: TOKEN_COMMA .

    $default  reduce using rule 112 (parameterDelimiter)


state 168

  108 actualParameterPart: TOKEN_OPEN_BRACKET actualParameterList TOKEN_CLOSE_BRACKET .

    $default  reduce using rule 108 (actualParameterPart)


state 169

  113 parameterDelimiter: TOKEN_CLOSE_SQUARE_BRACKET . identifier TOKEN_COLON TOKEN_OPEN_SQUARE_BRACKET

    TOKEN_IDENTIFIER  shift, and go to state 1

    identifier  go to state 186


state 170

  110 actualParameterList: actualParameterList parameterDelimiter . actualParameter

    TOKEN_LOGICAL_VALUE  shift, and go to state 53
    TOKEN_PLUS           shift, and go to state 54
    TOKEN_MINUS          shift, and go to state 55
    TOKEN_OPEN_BRACKET   shift, and go to state 56
    TOKEN_REAL_NUM       shift, and go to state 57
    TOKEN_INTEGER        shift, and go to state 3
    TOKEN_NOT_OP         shift, and go to state 58
    TOKEN_IF             shift, and go to state 17

    expression                  go to state 134
    arithmeticExpression        go to state 60
    simpleArithmeticExpression  go to state 61
    term                        go to state 62
    factor                      go to state 63
    primary                     go to state 64
    realNumber                  go to state 65
    integer                     go to state 66
    booleanExpression           go to state 67
    simpleBoolean               go to state 68
    implication                 go to state 69
    booleanTerm                 go to state 70
    booleanFactor               go to state 71
    booleanSecondary            go to state 72
    booleanPrimary              go to state 73
    logicalValue                go to state 74
    relation                    go to state 75
    ifClause                    go to state 76
    actualParameter             go to state 187


state 171

  124 formalParameterPart: TOKEN_OPEN_BRACKET . $@5 formalParameterList TOKEN_CLOSE_BRACKET

    $default  reduce using rule 123 ($@5)

    $@5  go to state 188


state 172

  122 formalParameterPart: empty .

    $default  reduce using rule 122 (formalParameterPart)


state 173

  140 procedureHeading: procedureIdentifier @6 formalParameterPart . TOKEN_SEMICOLON $@7 valuePart specificationPart

    TOKEN_SEMICOLON  shift, and go to state 189


state 174

   27 arraySegment: arrayIdentifier TOKEN_COMMA arraySegment .

    $default  reduce using rule 27 (arraySegment)


state 175

   22 boundPair: lowerBound . TOKEN_COLON upperBound

    TOKEN_COLON  shift, and go to state 190


state 176

   23 boundPairList: boundPair .

    $default  reduce using rule 23 (boundPairList)


state 177

   24 boundPairList: boundPairList . TOKEN_COMMA boundPair
   26 arraySegment: arrayIdentifier TOKEN_OPEN_SQUARE_BRACKET boundPairList . TOKEN_CLOSE_SQUARE_BRACKET

    TOKEN_COMMA                 shift, and go to state 191
    TOKEN_CLOSE_SQUARE_BRACKET  shift, and go to state 192


state 178

   20 lowerBound: arithmeticExpression .

    $default  reduce using rule 20 (lowerBound)


state 179

   30 arrayList: arrayList TOKEN_COMMA @1 . arraySegment

    TOKEN_IDENTIFIER  shift, and go to state 1

    arrayIdentifier  go to state 101
    arraySegment     go to state 193
    identifier       go to state 104


state 180

  143 procedureDeclaration: type TOKEN_PROCEDURE procedureHeading procedureBody .

    $default  reduce using rule 143 (procedureDeclaration)


state 181

   78 listType: listType TOKEN_COMMA @2 . varIdentifier

    TOKEN_IDENTIFIER  shift, and go to state 1

    identifier     go to state 107
    varIdentifier  go to state 194


state 182

   36 arithmeticExpression: ifClause simpleArithmeticExpression TOKEN_ELSE arithmeticExpression .

    $default  reduce using rule 36 (arithmeticExpression)


state 183

   56 subscriptList: subscriptList TOKEN_COMMA . subscriptExpression

    TOKEN_PLUS          shift, and go to state 54
    TOKEN_MINUS         shift, and go to state 55
    TOKEN_OPEN_BRACKET  shift, and go to state 110
    TOKEN_REAL_NUM      shift, and go to state 57
    TOKEN_INTEGER       shift, and go to state 3
    TOKEN_IF            shift, and go to state 17

    arithmeticExpression        go to state 161
    simpleArithmeticExpression  go to state 147
    term                        go to state 62
    factor                      go to state 63
    primary                     go to state 64
    realNumber                  go to state 65
    integer                     go to state 66
    subscriptExpression         go to state 195
    ifClause                    go to state 76


state 184

   54 subscriptedVariable: arrayIdentifier TOKEN_OPEN_SQUARE_BRACKET subscriptList TOKEN_CLOSE_SQUARE_BRACKET .

    $default  reduce using rule 54 (subscriptedVariable)


state 185

  103 forStatement: TOKEN_FOR variable TOKEN_ASSIGN arithmeticExpression TOKEN_STEP . arithmeticExpression TOKEN_UNTIL arithmeticExpression TOKEN_DO statement

    TOKEN_PLUS          shift, and go to state 54
    TOKEN_MINUS         shift, and go to state 55
    TOKEN_OPEN_BRACKET  shift, and go to state 110
    TOKEN_REAL_NUM      shift, and go to state 57
    TOKEN_INTEGER       shift, and go to state 3
    TOKEN_IF            shift, and go to state 17

    arithmeticExpression        go to state 196
    simpleArithmeticExpression  go to state 147
    term                        go to state 62
    factor                      go to state 63
    primary                     go to state 64
    realNumber                  go to state 65
    integer                     go to state 66
    ifClause                    go to state 76


state 186

  113 parameterDelimiter: TOKEN_CLOSE_SQUARE_BRACKET identifier . TOKEN_COLON TOKEN_OPEN_SQUARE_BRACKET

    TOKEN_COLON  shift, and go to state 197


state 187

  110 actualParameterList: actualParameterList parameterDelimiter actualParameter .

    $default  reduce using rule 110 (actualParameterList)


state 188

  124 formalParameterPart: TOKEN_OPEN_BRACKET $@5 . formalParameterList TOKEN_CLOSE_BRACKET

    TOKEN_IDENTIFIER  shift, and go to state 1

    identifier           go to state 198
    formalParameter      go to state 199
    formalParameterList  go to state 200


state 189

  140 procedureHeading: procedureIdentifier @6 formalParameterPart TOKEN_SEMICOLON . $@7 valuePart specificationPart

    $default  reduce using rule 139 ($@7)

    $@7  go to state 201


state 190

   22 boundPair: lowerBound TOKEN_COLON . upperBound

    TOKEN_PLUS          shift, and go to state 54
    TOKEN_MINUS         shift, and go to state 55
    TOKEN_OPEN_BRACKET  shift, and go to state 110
    TOKEN_REAL_NUM      shift, and go to state 57
    TOKEN_INTEGER       shift, and go to state 3
    TOKEN_IF            shift, and go to state 17

    upperBound                  go to state 202
    arithmeticExpression        go to state 203
    simpleArithmeticExpression  go to state 147
    term                        go to state 62
    factor                      go to state 63
    primary                     go to state 64
    realNumber                  go to state 65
    integer                     go to state 66
    ifClause                    go to state 76


state 191

   24 boundPairList: boundPairList TOKEN_COMMA . boundPair

    TOKEN_PLUS          shift, and go to state 54
    TOKEN_MINUS         shift, and go to state 55
    TOKEN_OPEN_BRACKET  shift, and go to state 110
    TOKEN_REAL_NUM      shift, and go to state 57
    TOKEN_INTEGER       shift, and go to state 3
    TOKEN_IF            shift, and go to state 17

    lowerBound                  go to state 175
    boundPair                   go to state 204
    arithmeticExpression        go to state 178
    simpleArithmeticExpression  go to state 147
    term                        go to state 62
    factor                      go to state 63
    primary                     go to state 64
    realNumber                  go to state 65
    integer                     go to state 66
    ifClause                    go to state 76


state 192

   26 arraySegment: arrayIdentifier TOKEN_OPEN_SQUARE_BRACKET boundPairList TOKEN_CLOSE_SQUARE_BRACKET .

    $default  reduce using rule 26 (arraySegment)


state 193

   30 arrayList: arrayList TOKEN_COMMA @1 arraySegment .

    $default  reduce using rule 30 (arrayList)


state 194

   78 listType: listType TOKEN_COMMA @2 varIdentifier .

    $default  reduce using rule 78 (listType)


state 195

   56 subscriptList: subscriptList TOKEN_COMMA subscriptExpression .

    $default  reduce using rule 56 (subscriptList)


state 196

  103 forStatement: TOKEN_FOR variable TOKEN_ASSIGN arithmeticExpression TOKEN_STEP arithmeticExpression . TOKEN_UNTIL arithmeticExpression TOKEN_DO statement

    TOKEN_UNTIL  shift, and go to state 205


state 197

  113 parameterDelimiter: TOKEN_CLOSE_SQUARE_BRACKET identifier TOKEN_COLON . TOKEN_OPEN_SQUARE_BRACKET

    TOKEN_OPEN_SQUARE_BRACKET  shift, and go to state 206


state 198

  118 formalParameter: identifier .

    $default  reduce using rule 118 (formalParameter)


state 199

  119 formalParameterList: formalParameter .

    $default  reduce using rule 119 (formalParameterList)


state 200

  121 formalParameterList: formalParameterList . parameterDelimiter $@4 formalParameter
  124 formalParameterPart: TOKEN_OPEN_BRACKET $@5 formalParameterList . TOKEN_CLOSE_BRACKET

    TOKEN_COMMA                 shift, and go to state 167
    TOKEN_CLOSE_BRACKET         shift, and go to state 207
    TOKEN_CLOSE_SQUARE_BRACKET  shift, and go to state 169

    parameterDelimiter  go to state 208


state 201

  140 procedureHeading: procedureIdentifier @6 formalParameterPart TOKEN_SEMICOLON $@7 . valuePart specificationPart

    TOKEN_VALUE  shift, and go to state 209

    $default  reduce using rule 104 (empty)

    empty      go to state 210
    valuePart  go to state 211


state 202

   22 boundPair: lowerBound TOKEN_COLON upperBound .

    $default  reduce using rule 22 (boundPair)


state 203

   21 upperBound: arithmeticExpression .

    $default  reduce using rule 21 (upperBound)


state 204

   24 boundPairList: boundPairList TOKEN_COMMA boundPair .

    $default  reduce using rule 24 (boundPairList)


state 205

  103 forStatement: TOKEN_FOR variable TOKEN_ASSIGN arithmeticExpression TOKEN_STEP arithmeticExpression TOKEN_UNTIL . arithmeticExpression TOKEN_DO statement

    TOKEN_PLUS          shift, and go to state 54
    TOKEN_MINUS         shift, and go to state 55
    TOKEN_OPEN_BRACKET  shift, and go to state 110
    TOKEN_REAL_NUM      shift, and go to state 57
    TOKEN_INTEGER       shift, and go to state 3
    TOKEN_IF            shift, and go to state 17

    arithmeticExpression        go to state 212
    simpleArithmeticExpression  go to state 147
    term                        go to state 62
    factor                      go to state 63
    primary                     go to state 64
    realNumber                  go to state 65
    integer                     go to state 66
    ifClause                    go to state 76


state 206

  113 parameterDelimiter: TOKEN_CLOSE_SQUARE_BRACKET identifier TOKEN_COLON TOKEN_OPEN_SQUARE_BRACKET .

    $default  reduce using rule 113 (parameterDelimiter)


state 207

  124 formalParameterPart: TOKEN_OPEN_BRACKET $@5 formalParameterList TOKEN_CLOSE_BRACKET .

    $default  reduce using rule 124 (formalParameterPart)


state 208

  121 formalParameterList: formalParameterList parameterDelimiter . $@4 formalParameter

    $default  reduce using rule 120 ($@4)

    $@4  go to state 213


state 209

  127 valuePart: TOKEN_VALUE . identifierList TOKEN_SEMICOLON

    TOKEN_IDENTIFIER  shift, and go to state 1

    identifier      go to state 214
    identifierList  go to state 215


state 210

  128 valuePart: empty .

    $default  reduce using rule 128 (valuePart)


state 211

  140 procedureHeading: procedureIdentifier @6 formalParameterPart TOKEN_SEMICOLON $@7 valuePart . specificationPart

    TOKEN_SWITCH      shift, and go to state 216
    TOKEN_BOOLEAN     shift, and go to state 44
    TOKEN_TYPE_LABEL  shift, and go to state 217
    TOKEN_TINTEGER    shift, and go to state 46
    TOKEN_TREAL       shift, and go to state 47

    $default  reduce using rule 104 (empty)

    type                         go to state 218
    empty                        go to state 219
    specifier                    go to state 220
    specificationPart            go to state 221
    specificationIdentifierList  go to state 222


state 212

  103 forStatement: TOKEN_FOR variable TOKEN_ASSIGN arithmeticExpression TOKEN_STEP arithmeticExpression TOKEN_UNTIL arithmeticExpression . TOKEN_DO statement

    TOKEN_DO  shift, and go to state 223


state 213

  121 formalParameterList: formalParameterList parameterDelimiter $@4 . formalParameter

    TOKEN_IDENTIFIER  shift, and go to state 1

    identifier       go to state 198
    formalParameter  go to state 224


state 214

  125 identifierList: identifier .

    $default  reduce using rule 125 (identifierList)


state 215

  126 identifierList: identifierList . TOKEN_COMMA identifier
  127 valuePart: TOKEN_VALUE identifierList . TOKEN_SEMICOLON

    TOKEN_COMMA      shift, and go to state 225
    TOKEN_SEMICOLON  shift, and go to state 226


state 216

  132 specifier: TOKEN_SWITCH .

    $default  reduce using rule 132 (specifier)


state 217

  131 specifier: TOKEN_TYPE_LABEL .

    $default  reduce using rule 131 (specifier)


state 218

  129 specifier: type .
  130          | type . TOKEN_ARRAY
  133          | type . TOKEN_PROCEDURE

    TOKEN_PROCEDURE  shift, and go to state 227
    TOKEN_ARRAY      shift, and go to state 228

    $default  reduce using rule 129 (specifier)


state 219

  134 specificationPart: empty .

    $default  reduce using rule 134 (specificationPart)


state 220

  136 specificationIdentifierList: specifier . identifierList TOKEN_SEMICOLON

    TOKEN_IDENTIFIER  shift, and go to state 1

    identifier      go to state 214
    identifierList  go to state 229


state 221

  140 procedureHeading: procedureIdentifier @6 formalParameterPart TOKEN_SEMICOLON $@7 valuePart specificationPart .

    $default  reduce using rule 140 (procedureHeading)


state 222

  135 specificationPart: specificationIdentifierList .
  137 specificationIdentifierList: specificationIdentifierList . specifier identifierList TOKEN_SEMICOLON

    TOKEN_SWITCH      shift, and go to state 216
    TOKEN_BOOLEAN     shift, and go to state 44
    TOKEN_TYPE_LABEL  shift, and go to state 217
    TOKEN_TINTEGER    shift, and go to state 46
    TOKEN_TREAL       shift, and go to state 47

    $default  reduce using rule 135 (specificationPart)

    type       go to state 218
    specifier  go to state 230


state 223

  103 forStatement: TOKEN_FOR variable TOKEN_ASSIGN arithmeticExpression TOKEN_STEP arithmeticExpression TOKEN_UNTIL arithmeticExpression TOKEN_DO . statement

    TOKEN_PRINT              shift, and go to state 15
    TOKEN_IDENTIFIER         shift, and go to state 1
    TOKEN_BEGIN              shift, and go to state 2
    TOKEN_INTEGER            shift, and go to state 3
    TOKEN_FOR                shift, and go to state 16
    TOKEN_IF                 shift, and go to state 17
    TOKEN_ASSIGN_IDENTIFIER  shift, and go to state 18

    $default  reduce using rule 104 (empty)

    blockHead                 go to state 4
    unlabelledBlock           go to state 5
    block                     go to state 19
    tlabel                    go to state 20
    label                     go to state 21
    unlabelledCompound        go to state 10
    tbegin                    go to state 11
    compoundStatement         go to state 22
    integer                   go to state 13
    identifier                go to state 24
    unconditionalStatement    go to state 25
    conditionalStatement      go to state 26
    ifStatement               go to state 27
    ifClause                  go to state 28
    basicStatement            go to state 29
    unlabelledBasicStatement  go to state 30
    dummyStatement            go to state 31
    assignmentStatement       go to state 32
    forStatement              go to state 33
    empty                     go to state 34
    procedureStatement        go to state 35
    procedureIdentifier       go to state 36
    statement                 go to state 231


state 224

  121 formalParameterList: formalParameterList parameterDelimiter $@4 formalParameter .

    $default  reduce using rule 121 (formalParameterList)


state 225

  126 identifierList: identifierList TOKEN_COMMA . identifier

    TOKEN_IDENTIFIER  shift, and go to state 1

    identifier  go to state 232


state 226

  127 valuePart: TOKEN_VALUE identifierList TOKEN_SEMICOLON .

    $default  reduce using rule 127 (valuePart)


state 227

  133 specifier: type TOKEN_PROCEDURE .

    $default  reduce using rule 133 (specifier)


state 228

  130 specifier: type TOKEN_ARRAY .

    $default  reduce using rule 130 (specifier)


state 229

  126 identifierList: identifierList . TOKEN_COMMA identifier
  136 specificationIdentifierList: specifier identifierList . TOKEN_SEMICOLON

    TOKEN_COMMA      shift, and go to state 225
    TOKEN_SEMICOLON  shift, and go to state 233


state 230

  137 specificationIdentifierList: specificationIdentifierList specifier . identifierList TOKEN_SEMICOLON

    TOKEN_IDENTIFIER  shift, and go to state 1

    identifier      go to state 214
    identifierList  go to state 234


state 231

  103 forStatement: TOKEN_FOR variable TOKEN_ASSIGN arithmeticExpression TOKEN_STEP arithmeticExpression TOKEN_UNTIL arithmeticExpression TOKEN_DO statement .

    $default  reduce using rule 103 (forStatement)


state 232

  126 identifierList: identifierList TOKEN_COMMA identifier .

    $default  reduce using rule 126 (identifierList)


state 233

  136 specificationIdentifierList: specifier identifierList TOKEN_SEMICOLON .

    $default  reduce using rule 136 (specificationIdentifierList)


state 234

  126 identifierList: identifierList . TOKEN_COMMA identifier
  137 specificationIdentifierList: specificationIdentifierList specifier identifierList . TOKEN_SEMICOLON

    TOKEN_COMMA      shift, and go to state 225
    TOKEN_SEMICOLON  shift, and go to state 235


state 235

  137 specificationIdentifierList: specificationIdentifierList specifier identifierList TOKEN_SEMICOLON .

    $default  reduce using rule 137 (specificationIdentifierList)
