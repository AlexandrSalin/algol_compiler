Terminals unused in grammar

   TOKEN_OPERATOR
   TOKEN_OR
   TOKEN_UNDERSCORE
   TOKEN_SPECIFIER
   TOKEN_LIBRARY
   TOKEN_BRACKET
   TOKEN_CONTINUE
   TOKEN_LESS_EQUAL
   TOKEN_GREATER
   TOKEN_GREATER_EQUAL
   TOKEN_EQUAL
   TOKEN_LESS
   TOKEN_NOTEQUAL
   TOKEN_GOTO
   TOKEN_WHILE
   TOKEN_BOOLEAN
   TOKEN_TYPE_OWN
   TOKEN_TYPE_ARRAY
   TOKEN_TYPE_SWITCH
   TOKEN_TYPE_PROCEDURE
   TOKEN_TYPE_STRING
   TOKEN_TYPE_VALUE
   TOKEN_LTRSTRING
   TOKEN_ASSIGN_IDENTIFIER
   TOKEN_LABEL_IDENTIFIER
   TOKEN_BOOL_IDENTIFIER
   TOKEN_NOT_EQUAL


Grammar

    0 $accept: program $end

    1 $@1: /* empty */

    2 blockHead: TOKEN_BEGIN $@1 declaration
    3          | blockHead TOKEN_SEMICOLON declaration

    4 unlabelledBlock: blockHead TOKEN_SEMICOLON compoundTail

    5 block: unlabelledBlock
    6      | tlabel block

    7 tlabel: label TOKEN_COLON

    8 label: identifier
    9      | integer

   10 program: compoundStatement
   11        | block

   12 @2: /* empty */

   13 unlabelledCompound: TOKEN_BEGIN @2 compoundTail

   14 compoundStatement: unlabelledCompound
   15                  | tlabel compoundStatement

   16 compoundTail: statement TOKEN_END
   17             | statement TOKEN_SEMICOLON compoundTail

   18 declaration: typeDeclaration
   19            | arrayDeclaration
   20            | switchDeclaration
   21            | procedureDeclaration

   22 lowerBound: arithmeticExpression

   23 switchList: designationalExpression
   24           | switchList TOKEN_COMMA designationalExpression

   25 switchDeclaration: TOKEN_SWITCH switchIdentifier TOKEN_ASSIGN switchList

   26 upperBound: arithmeticExpression

   27 boundPair: lowerBound TOKEN_COLON upperBound

   28 boundPairList: boundPair
   29              | boundPairList TOKEN_COMMA boundPair

   30 arrayIdentifier: identifier

   31 arraySegment: arrayIdentifier TOKEN_OPEN_SQUARE_BRACKET boundPairList TOKEN_CLOSE_SQUARE_BRACKET
   32             | arrayIdentifier TOKEN_COMMA arraySegment

   33 arrayList: arraySegment
   34          | arrayList TOKEN_COMMA arraySegment

   35 arrayDeclaration: TOKEN_ARRAY arrayList
   36                 | type TOKEN_ARRAY arrayList

   37 expression: arithmeticExpression
   38           | booleanExpression
   39           | designationalExpression

   40 switchIdentifier: identifier

   41 switchDesignator: switchIdentifier TOKEN_OPEN_CURLY_BRACKET subscriptExpression TOKEN_CLOSE_CURLY_BRACKET

   42 simpleDesignationalExpression: tlabel
   43                              | switchDesignator
   44                              | TOKEN_OPEN_BRACKET designationalExpression TOKEN_CLOSE_BRACKET

   45 designationalExpression: simpleDesignationalExpression
   46                        | ifClause simpleDesignationalExpression TOKEN_ELSE designationalExpression

   47 arithmeticExpression: simpleArithmeticExpression

   48 simpleArithmeticExpression: term
   49                           | TOKEN_PLUS term
   50                           | TOKEN_MINUS term
   51                           | simpleArithmeticExpression TOKEN_PLUS term
   52                           | simpleArithmeticExpression TOKEN_MINUS term

   53 term: factor
   54     | term TOKEN_MULTIPLY factor
   55     | term TOKEN_DIVIDE factor

   56 factor: primary
   57       | factor TOKEN_POWER primary

   58 primary: unsignedNumber
   59        | functionDesignator
   60        | variable
   61        | TOKEN_OPEN_BRACKET arithmeticExpression TOKEN_CLOSE_BRACKET

   62 unsignedNumber: realNumber
   63               | integer

   64 realNumber: TOKEN_REAL_NUM

   65 integer: TOKEN_INTEGER

   66 simpleVariable: varIdentifier

   67 variable: simpleVariable
   68         | subscriptedVariable

   69 subscriptedVariable: arrayIdentifier TOKEN_OPEN_SQUARE_BRACKET subscriptList TOKEN_CLOSE_SQUARE_BRACKET

   70 subscriptList: subscriptExpression
   71              | subscriptList TOKEN_COMMA subscriptExpression

   72 subscriptExpression: arithmeticExpression

   73 identifier: TOKEN_IDENTIFIER

   74 booleanExpression: simpleBoolean

   75 simpleBoolean: implication
   76              | simpleBoolean TOKEN_EQUIV implication

   77 implication: booleanTerm
   78            | implication TOKEN_IMPLY booleanTerm

   79 booleanTerm: booleanFactor
   80            | booleanTerm TOKEN_OR_OP booleanFactor

   81 booleanFactor: booleanSecondary
   82              | booleanFactor TOKEN_AND_OP booleanSecondary

   83 booleanSecondary: booleanPrimary
   84                 | TOKEN_NOT_OP booleanPrimary

   85 booleanPrimary: logicalValue
   86               | relation
   87               | TOKEN_OPEN_BRACKET booleanExpression TOKEN_CLOSE_BRACKET

   88 logicalValue: TOKEN_LOGICAL_VALUE

   89 relation: simpleArithmeticExpression relationalOperator simpleArithmeticExpression

   90 relationalOperator: TOKEN_REL_OP

   91 listType: varIdentifier
   92         | listType TOKEN_COMMA varIdentifier

   93 type: TOKEN_TYPE_REAL
   94     | TOKEN_TYPE_INTEGER
   95     | TOKEN_TYPE_BOOLEAN

   96 typeDeclaration: type listType

   97 varIdentifier: identifier

   98 unconditionalStatement: basicStatement
   99                       | compoundStatement
  100                       | block

  101 conditionalStatement: ifStatement
  102                     | ifStatement TOKEN_ELSE statement
  103                     | ifClause forStatement
  104                     | tlabel conditionalStatement

  105 ifStatement: ifClause unconditionalStatement

  106 ifClause: TOKEN_IF booleanExpression TOKEN_THEN

  107 basicStatement: unlabelledBasicStatement
  108               | tlabel basicStatement

  109 unlabelledBasicStatement: assignmentStatement
  110                         | dummyStatement
  111                         | procedureStatement
  112                         | returnStatement

  113 dummyStatement: empty

  114 returnStatement: TOKEN_RETURN expression

  115 assignmentStatement: variable TOKEN_ASSIGN arithmeticExpression
  116                    | variable TOKEN_ASSIGN booleanExpression

  117 forStatement: TOKEN_FOR variable TOKEN_ASSIGN arithmeticExpression TOKEN_STEP arithmeticExpression TOKEN_UNTIL arithmeticExpression TOKEN_DO statement

  118 empty: /* empty */

  119 procedureStatement: procedureIdentifier actualParameterPart

  120 procedureIdentifier: identifier

  121 actualParameterPart: TOKEN_OPEN_BRACKET TOKEN_CLOSE_BRACKET
  122                    | TOKEN_OPEN_BRACKET actualParameterList TOKEN_CLOSE_BRACKET

  123 actualParameterList: actualParameter
  124                    | actualParameterList parameterDelimiter actualParameter

  125 actualParameter: expression

  126 parameterDelimiter: TOKEN_COMMA
  127                   | TOKEN_CLOSE_BRACKET identifier TOKEN_COLON TOKEN_OPEN_BRACKET

  128 functionDesignator: procedureIdentifier actualParameterPart

  129 statement: unconditionalStatement
  130          | conditionalStatement
  131          | forStatement
  132          | TOKEN_PRINT expression

  133 formalParameter: identifier

  134 formalParameterList: formalParameter

  135 $@3: /* empty */

  136 formalParameterList: formalParameterList parameterDelimiter $@3 formalParameter

  137 formalParameterPart: empty

  138 $@4: /* empty */

  139 formalParameterPart: TOKEN_OPEN_BRACKET $@4 formalParameterList TOKEN_CLOSE_BRACKET

  140 identifierList: identifier
  141               | identifierList TOKEN_COMMA identifier

  142 valuePart: TOKEN_VALUE identifierList TOKEN_SEMICOLON
  143          | empty

  144 specifier: type
  145          | type TOKEN_ARRAY
  146          | TOKEN_TYPE_LABEL
  147          | TOKEN_SWITCH
  148          | type TOKEN_PROCEDURE

  149 specificationPart: empty
  150                  | specificationIdentifierList

  151 specificationIdentifierList: specifier identifierList TOKEN_SEMICOLON
  152                            | specificationIdentifierList specifier identifierList TOKEN_SEMICOLON

  153 @5: /* empty */

  154 $@6: /* empty */

  155 procedureHeading: procedureIdentifier @5 formalParameterPart TOKEN_SEMICOLON $@6 valuePart specificationPart

  156 procedureBody: TOKEN_BEGIN TOKEN_SEMICOLON statement TOKEN_END

  157 procedureDeclaration: TOKEN_PROCEDURE procedureHeading procedureBody
  158                     | type TOKEN_PROCEDURE procedureHeading procedureBody


Terminals, with rules where they appear

$end (0) 0
error (256)
TOKEN_PRINT (258) 132
TOKEN_IDENTIFIER (259) 73
TOKEN_BEGIN (260) 2 13 156
TOKEN_END (261) 16 156
TOKEN_LOGICAL_VALUE (262) 88
TOKEN_OPERATOR (263)
TOKEN_OR (264)
TOKEN_PROCEDURE (265) 148 157 158
TOKEN_PLUS (266) 49 51
TOKEN_MINUS (267) 50 52
TOKEN_DIVIDE (268) 55
TOKEN_POWER (269) 57
TOKEN_MULTIPLY (270) 54
TOKEN_COMMA (271) 24 29 32 34 71 92 126 141
TOKEN_UNDERSCORE (272)
TOKEN_SPECIFIER (273)
TOKEN_LIBRARY (274)
TOKEN_BRACKET (275)
TOKEN_OPEN_BRACKET (276) 44 61 87 121 122 127 139
TOKEN_CLOSE_BRACKET (277) 44 61 87 121 122 127 139
TOKEN_OPEN_SQUARE_BRACKET (278) 31 69
TOKEN_CLOSE_SQUARE_BRACKET (279) 31 69
TOKEN_OPEN_CURLY_BRACKET (280) 41
TOKEN_CLOSE_CURLY_BRACKET (281) 41
TOKEN_CONTINUE (282)
TOKEN_REAL_NUM (283) 64
TOKEN_INTEGER (284) 65
TOKEN_COLON (285) 7 27 127
TOKEN_REL_OP (286) 90
TOKEN_LESS_EQUAL (287)
TOKEN_GREATER (288)
TOKEN_GREATER_EQUAL (289)
TOKEN_EQUAL (290)
TOKEN_LESS (291)
TOKEN_NOTEQUAL (292)
TOKEN_EQUIV (293) 76
TOKEN_AND_OP (294) 82
TOKEN_OR_OP (295) 80
TOKEN_NOT_OP (296) 84
TOKEN_GOTO (297)
TOKEN_FOR (298) 117
TOKEN_DO (299) 117
TOKEN_WHILE (300)
TOKEN_STEP (301) 117
TOKEN_UNTIL (302) 117
TOKEN_IF (303) 106
TOKEN_THEN (304) 106
TOKEN_ELSE (305) 46 102
TOKEN_SWITCH (306) 25 147
TOKEN_VALUE (307) 142
TOKEN_BOOLEAN (308)
TOKEN_TYPE_OWN (309)
TOKEN_TYPE_INTEGER (310) 94
TOKEN_TYPE_REAL (311) 93
TOKEN_TYPE_BOOLEAN (312) 95
TOKEN_TYPE_ARRAY (313)
TOKEN_TYPE_SWITCH (314)
TOKEN_TYPE_PROCEDURE (315)
TOKEN_TYPE_STRING (316)
TOKEN_TYPE_LABEL (317) 146
TOKEN_TYPE_VALUE (318)
TOKEN_ARRAY (319) 35 36 145
TOKEN_IMPLY (320) 78
TOKEN_SEMICOLON (321) 3 4 17 142 151 152 155 156
TOKEN_LTRSTRING (322)
TOKEN_RETURN (323) 114
TOKEN_ASSIGN_IDENTIFIER (324)
TOKEN_LABEL_IDENTIFIER (325)
TOKEN_BOOL_IDENTIFIER (326)
TOKEN_ASSIGN (327) 25 115 116 117
TOKEN_NOT_EQUAL (328)


Nonterminals, with rules where they appear

$accept (74)
    on left: 0
blockHead (75)
    on left: 2 3, on right: 3 4
$@1 (76)
    on left: 1, on right: 2
unlabelledBlock (77)
    on left: 4, on right: 5
block (78)
    on left: 5 6, on right: 6 11 100
tlabel (79)
    on left: 7, on right: 6 15 42 104 108
label (80)
    on left: 8 9, on right: 7
program (81)
    on left: 10 11, on right: 0
unlabelledCompound (82)
    on left: 13, on right: 14
@2 (83)
    on left: 12, on right: 13
compoundStatement (84)
    on left: 14 15, on right: 10 15 99
compoundTail (85)
    on left: 16 17, on right: 4 13 17
declaration (86)
    on left: 18 19 20 21, on right: 2 3
lowerBound (87)
    on left: 22, on right: 27
switchList (88)
    on left: 23 24, on right: 24 25
switchDeclaration (89)
    on left: 25, on right: 20
upperBound (90)
    on left: 26, on right: 27
boundPair (91)
    on left: 27, on right: 28 29
boundPairList (92)
    on left: 28 29, on right: 29 31
arrayIdentifier (93)
    on left: 30, on right: 31 32 69
arraySegment (94)
    on left: 31 32, on right: 32 33 34
arrayList (95)
    on left: 33 34, on right: 34 35 36
arrayDeclaration (96)
    on left: 35 36, on right: 19
expression (97)
    on left: 37 38 39, on right: 114 125 132
switchIdentifier (98)
    on left: 40, on right: 25 41
switchDesignator (99)
    on left: 41, on right: 43
simpleDesignationalExpression (100)
    on left: 42 43 44, on right: 45 46
designationalExpression (101)
    on left: 45 46, on right: 23 24 39 44 46
arithmeticExpression (102)
    on left: 47, on right: 22 26 37 61 72 115 117
simpleArithmeticExpression (103)
    on left: 48 49 50 51 52, on right: 47 51 52 89
term (104)
    on left: 53 54 55, on right: 48 49 50 51 52 54 55
factor (105)
    on left: 56 57, on right: 53 54 55 57
primary (106)
    on left: 58 59 60 61, on right: 56 57
unsignedNumber (107)
    on left: 62 63, on right: 58
realNumber (108)
    on left: 64, on right: 62
integer (109)
    on left: 65, on right: 9 63
simpleVariable (110)
    on left: 66, on right: 67
variable (111)
    on left: 67 68, on right: 60 115 116 117
subscriptedVariable (112)
    on left: 69, on right: 68
subscriptList (113)
    on left: 70 71, on right: 69 71
subscriptExpression (114)
    on left: 72, on right: 41 70 71
identifier (115)
    on left: 73, on right: 8 30 40 97 120 127 133 140 141
booleanExpression (116)
    on left: 74, on right: 38 87 106 116
simpleBoolean (117)
    on left: 75 76, on right: 74 76
implication (118)
    on left: 77 78, on right: 75 76 78
booleanTerm (119)
    on left: 79 80, on right: 77 78 80
booleanFactor (120)
    on left: 81 82, on right: 79 80 82
booleanSecondary (121)
    on left: 83 84, on right: 81 82
booleanPrimary (122)
    on left: 85 86 87, on right: 83 84
logicalValue (123)
    on left: 88, on right: 85
relation (124)
    on left: 89, on right: 86
relationalOperator (125)
    on left: 90, on right: 89
listType (126)
    on left: 91 92, on right: 92 96
type (127)
    on left: 93 94 95, on right: 36 96 144 145 148 158
typeDeclaration (128)
    on left: 96, on right: 18
varIdentifier (129)
    on left: 97, on right: 66 91 92
unconditionalStatement (130)
    on left: 98 99 100, on right: 105 129
conditionalStatement (131)
    on left: 101 102 103 104, on right: 104 130
ifStatement (132)
    on left: 105, on right: 101 102
ifClause (133)
    on left: 106, on right: 46 103 105
basicStatement (134)
    on left: 107 108, on right: 98 108
unlabelledBasicStatement (135)
    on left: 109 110 111 112, on right: 107
dummyStatement (136)
    on left: 113, on right: 110
returnStatement (137)
    on left: 114, on right: 112
assignmentStatement (138)
    on left: 115 116, on right: 109
forStatement (139)
    on left: 117, on right: 103 131
empty (140)
    on left: 118, on right: 113 137 143 149
procedureStatement (141)
    on left: 119, on right: 111
procedureIdentifier (142)
    on left: 120, on right: 119 128 155
actualParameterPart (143)
    on left: 121 122, on right: 119 128
actualParameterList (144)
    on left: 123 124, on right: 122 124
actualParameter (145)
    on left: 125, on right: 123 124
parameterDelimiter (146)
    on left: 126 127, on right: 124 136
functionDesignator (147)
    on left: 128, on right: 59
statement (148)
    on left: 129 130 131 132, on right: 16 17 102 117 156
formalParameter (149)
    on left: 133, on right: 134 136
formalParameterList (150)
    on left: 134 136, on right: 136 139
$@3 (151)
    on left: 135, on right: 136
formalParameterPart (152)
    on left: 137 139, on right: 155
$@4 (153)
    on left: 138, on right: 139
identifierList (154)
    on left: 140 141, on right: 141 142 151 152
valuePart (155)
    on left: 142 143, on right: 155
specifier (156)
    on left: 144 145 146 147 148, on right: 151 152
specificationPart (157)
    on left: 149 150, on right: 155
specificationIdentifierList (158)
    on left: 151 152, on right: 150 152
procedureHeading (159)
    on left: 155, on right: 157 158
@5 (160)
    on left: 153, on right: 155
$@6 (161)
    on left: 154, on right: 155
procedureBody (162)
    on left: 156, on right: 157 158
procedureDeclaration (163)
    on left: 157 158, on right: 21


state 0

    0 $accept: . program $end

    TOKEN_IDENTIFIER  shift, and go to state 1
    TOKEN_BEGIN       shift, and go to state 2
    TOKEN_INTEGER     shift, and go to state 3

    blockHead           go to state 4
    unlabelledBlock     go to state 5
    block               go to state 6
    tlabel              go to state 7
    label               go to state 8
    program             go to state 9
    unlabelledCompound  go to state 10
    compoundStatement   go to state 11
    integer             go to state 12
    identifier          go to state 13


state 1

   73 identifier: TOKEN_IDENTIFIER .

    $default  reduce using rule 73 (identifier)


state 2

    2 blockHead: TOKEN_BEGIN . $@1 declaration
   13 unlabelledCompound: TOKEN_BEGIN . @2 compoundTail

    TOKEN_PROCEDURE     reduce using rule 1 ($@1)
    TOKEN_SWITCH        reduce using rule 1 ($@1)
    TOKEN_TYPE_INTEGER  reduce using rule 1 ($@1)
    TOKEN_TYPE_REAL     reduce using rule 1 ($@1)
    TOKEN_TYPE_BOOLEAN  reduce using rule 1 ($@1)
    TOKEN_ARRAY         reduce using rule 1 ($@1)
    $default            reduce using rule 12 (@2)

    $@1  go to state 14
    @2   go to state 15


state 3

   65 integer: TOKEN_INTEGER .

    $default  reduce using rule 65 (integer)


state 4

    3 blockHead: blockHead . TOKEN_SEMICOLON declaration
    4 unlabelledBlock: blockHead . TOKEN_SEMICOLON compoundTail

    TOKEN_SEMICOLON  shift, and go to state 16


state 5

    5 block: unlabelledBlock .

    $default  reduce using rule 5 (block)


state 6

   11 program: block .

    $default  reduce using rule 11 (program)


state 7

    6 block: tlabel . block
   15 compoundStatement: tlabel . compoundStatement

    TOKEN_IDENTIFIER  shift, and go to state 1
    TOKEN_BEGIN       shift, and go to state 2
    TOKEN_INTEGER     shift, and go to state 3

    blockHead           go to state 4
    unlabelledBlock     go to state 5
    block               go to state 17
    tlabel              go to state 7
    label               go to state 8
    unlabelledCompound  go to state 10
    compoundStatement   go to state 18
    integer             go to state 12
    identifier          go to state 13


state 8

    7 tlabel: label . TOKEN_COLON

    TOKEN_COLON  shift, and go to state 19


state 9

    0 $accept: program . $end

    $end  shift, and go to state 20


state 10

   14 compoundStatement: unlabelledCompound .

    $default  reduce using rule 14 (compoundStatement)


state 11

   10 program: compoundStatement .

    $default  reduce using rule 10 (program)


state 12

    9 label: integer .

    $default  reduce using rule 9 (label)


state 13

    8 label: identifier .

    $default  reduce using rule 8 (label)


state 14

    2 blockHead: TOKEN_BEGIN $@1 . declaration

    TOKEN_PROCEDURE     shift, and go to state 21
    TOKEN_SWITCH        shift, and go to state 22
    TOKEN_TYPE_INTEGER  shift, and go to state 23
    TOKEN_TYPE_REAL     shift, and go to state 24
    TOKEN_TYPE_BOOLEAN  shift, and go to state 25
    TOKEN_ARRAY         shift, and go to state 26

    declaration           go to state 27
    switchDeclaration     go to state 28
    arrayDeclaration      go to state 29
    type                  go to state 30
    typeDeclaration       go to state 31
    procedureDeclaration  go to state 32


state 15

   13 unlabelledCompound: TOKEN_BEGIN @2 . compoundTail

    TOKEN_PRINT       shift, and go to state 33
    TOKEN_IDENTIFIER  shift, and go to state 1
    TOKEN_BEGIN       shift, and go to state 2
    TOKEN_INTEGER     shift, and go to state 3
    TOKEN_FOR         shift, and go to state 34
    TOKEN_IF          shift, and go to state 35
    TOKEN_RETURN      shift, and go to state 36

    $default  reduce using rule 118 (empty)

    blockHead                 go to state 4
    unlabelledBlock           go to state 5
    block                     go to state 37
    tlabel                    go to state 38
    label                     go to state 8
    unlabelledCompound        go to state 10
    compoundStatement         go to state 39
    compoundTail              go to state 40
    arrayIdentifier           go to state 41
    integer                   go to state 12
    simpleVariable            go to state 42
    variable                  go to state 43
    subscriptedVariable       go to state 44
    identifier                go to state 45
    varIdentifier             go to state 46
    unconditionalStatement    go to state 47
    conditionalStatement      go to state 48
    ifStatement               go to state 49
    ifClause                  go to state 50
    basicStatement            go to state 51
    unlabelledBasicStatement  go to state 52
    dummyStatement            go to state 53
    returnStatement           go to state 54
    assignmentStatement       go to state 55
    forStatement              go to state 56
    empty                     go to state 57
    procedureStatement        go to state 58
    procedureIdentifier       go to state 59
    statement                 go to state 60


state 16

    3 blockHead: blockHead TOKEN_SEMICOLON . declaration
    4 unlabelledBlock: blockHead TOKEN_SEMICOLON . compoundTail

    TOKEN_PRINT         shift, and go to state 33
    TOKEN_IDENTIFIER    shift, and go to state 1
    TOKEN_BEGIN         shift, and go to state 2
    TOKEN_PROCEDURE     shift, and go to state 21
    TOKEN_INTEGER       shift, and go to state 3
    TOKEN_FOR           shift, and go to state 34
    TOKEN_IF            shift, and go to state 35
    TOKEN_SWITCH        shift, and go to state 22
    TOKEN_TYPE_INTEGER  shift, and go to state 23
    TOKEN_TYPE_REAL     shift, and go to state 24
    TOKEN_TYPE_BOOLEAN  shift, and go to state 25
    TOKEN_ARRAY         shift, and go to state 26
    TOKEN_RETURN        shift, and go to state 36

    $default  reduce using rule 118 (empty)

    blockHead                 go to state 4
    unlabelledBlock           go to state 5
    block                     go to state 37
    tlabel                    go to state 38
    label                     go to state 8
    unlabelledCompound        go to state 10
    compoundStatement         go to state 39
    compoundTail              go to state 61
    declaration               go to state 62
    switchDeclaration         go to state 28
    arrayIdentifier           go to state 41
    arrayDeclaration          go to state 29
    integer                   go to state 12
    simpleVariable            go to state 42
    variable                  go to state 43
    subscriptedVariable       go to state 44
    identifier                go to state 45
    type                      go to state 30
    typeDeclaration           go to state 31
    varIdentifier             go to state 46
    unconditionalStatement    go to state 47
    conditionalStatement      go to state 48
    ifStatement               go to state 49
    ifClause                  go to state 50
    basicStatement            go to state 51
    unlabelledBasicStatement  go to state 52
    dummyStatement            go to state 53
    returnStatement           go to state 54
    assignmentStatement       go to state 55
    forStatement              go to state 56
    empty                     go to state 57
    procedureStatement        go to state 58
    procedureIdentifier       go to state 59
    statement                 go to state 60
    procedureDeclaration      go to state 32


state 17

    6 block: tlabel block .

    $default  reduce using rule 6 (block)


state 18

   15 compoundStatement: tlabel compoundStatement .

    $default  reduce using rule 15 (compoundStatement)


state 19

    7 tlabel: label TOKEN_COLON .

    $default  reduce using rule 7 (tlabel)


state 20

    0 $accept: program $end .

    $default  accept


state 21

  157 procedureDeclaration: TOKEN_PROCEDURE . procedureHeading procedureBody

    TOKEN_IDENTIFIER  shift, and go to state 1

    identifier           go to state 63
    procedureIdentifier  go to state 64
    procedureHeading     go to state 65


state 22

   25 switchDeclaration: TOKEN_SWITCH . switchIdentifier TOKEN_ASSIGN switchList

    TOKEN_IDENTIFIER  shift, and go to state 1

    switchIdentifier  go to state 66
    identifier        go to state 67


state 23

   94 type: TOKEN_TYPE_INTEGER .

    $default  reduce using rule 94 (type)


state 24

   93 type: TOKEN_TYPE_REAL .

    $default  reduce using rule 93 (type)


state 25

   95 type: TOKEN_TYPE_BOOLEAN .

    $default  reduce using rule 95 (type)


state 26

   35 arrayDeclaration: TOKEN_ARRAY . arrayList

    TOKEN_IDENTIFIER  shift, and go to state 1

    arrayIdentifier  go to state 68
    arraySegment     go to state 69
    arrayList        go to state 70
    identifier       go to state 71


state 27

    2 blockHead: TOKEN_BEGIN $@1 declaration .

    $default  reduce using rule 2 (blockHead)


state 28

   20 declaration: switchDeclaration .

    $default  reduce using rule 20 (declaration)


state 29

   19 declaration: arrayDeclaration .

    $default  reduce using rule 19 (declaration)


state 30

   36 arrayDeclaration: type . TOKEN_ARRAY arrayList
   96 typeDeclaration: type . listType
  158 procedureDeclaration: type . TOKEN_PROCEDURE procedureHeading procedureBody

    TOKEN_IDENTIFIER  shift, and go to state 1
    TOKEN_PROCEDURE   shift, and go to state 72
    TOKEN_ARRAY       shift, and go to state 73

    identifier     go to state 74
    listType       go to state 75
    varIdentifier  go to state 76


state 31

   18 declaration: typeDeclaration .

    $default  reduce using rule 18 (declaration)


state 32

   21 declaration: procedureDeclaration .

    $default  reduce using rule 21 (declaration)


state 33

  132 statement: TOKEN_PRINT . expression

    TOKEN_IDENTIFIER     shift, and go to state 1
    TOKEN_LOGICAL_VALUE  shift, and go to state 77
    TOKEN_PLUS           shift, and go to state 78
    TOKEN_MINUS          shift, and go to state 79
    TOKEN_OPEN_BRACKET   shift, and go to state 80
    TOKEN_REAL_NUM       shift, and go to state 81
    TOKEN_INTEGER        shift, and go to state 3
    TOKEN_NOT_OP         shift, and go to state 82
    TOKEN_IF             shift, and go to state 35

    tlabel                         go to state 83
    label                          go to state 8
    arrayIdentifier                go to state 41
    expression                     go to state 84
    switchIdentifier               go to state 85
    switchDesignator               go to state 86
    simpleDesignationalExpression  go to state 87
    designationalExpression        go to state 88
    arithmeticExpression           go to state 89
    simpleArithmeticExpression     go to state 90
    term                           go to state 91
    factor                         go to state 92
    primary                        go to state 93
    unsignedNumber                 go to state 94
    realNumber                     go to state 95
    integer                        go to state 96
    simpleVariable                 go to state 42
    variable                       go to state 97
    subscriptedVariable            go to state 44
    identifier                     go to state 98
    booleanExpression              go to state 99
    simpleBoolean                  go to state 100
    implication                    go to state 101
    booleanTerm                    go to state 102
    booleanFactor                  go to state 103
    booleanSecondary               go to state 104
    booleanPrimary                 go to state 105
    logicalValue                   go to state 106
    relation                       go to state 107
    varIdentifier                  go to state 46
    ifClause                       go to state 108
    procedureIdentifier            go to state 109
    functionDesignator             go to state 110


state 34

  117 forStatement: TOKEN_FOR . variable TOKEN_ASSIGN arithmeticExpression TOKEN_STEP arithmeticExpression TOKEN_UNTIL arithmeticExpression TOKEN_DO statement

    TOKEN_IDENTIFIER  shift, and go to state 1

    arrayIdentifier      go to state 41
    simpleVariable       go to state 42
    variable             go to state 111
    subscriptedVariable  go to state 44
    identifier           go to state 112
    varIdentifier        go to state 46


state 35

  106 ifClause: TOKEN_IF . booleanExpression TOKEN_THEN

    TOKEN_IDENTIFIER     shift, and go to state 1
    TOKEN_LOGICAL_VALUE  shift, and go to state 77
    TOKEN_PLUS           shift, and go to state 78
    TOKEN_MINUS          shift, and go to state 79
    TOKEN_OPEN_BRACKET   shift, and go to state 113
    TOKEN_REAL_NUM       shift, and go to state 81
    TOKEN_INTEGER        shift, and go to state 3
    TOKEN_NOT_OP         shift, and go to state 82

    arrayIdentifier             go to state 41
    simpleArithmeticExpression  go to state 114
    term                        go to state 91
    factor                      go to state 92
    primary                     go to state 93
    unsignedNumber              go to state 94
    realNumber                  go to state 95
    integer                     go to state 115
    simpleVariable              go to state 42
    variable                    go to state 97
    subscriptedVariable         go to state 44
    identifier                  go to state 116
    booleanExpression           go to state 117
    simpleBoolean               go to state 100
    implication                 go to state 101
    booleanTerm                 go to state 102
    booleanFactor               go to state 103
    booleanSecondary            go to state 104
    booleanPrimary              go to state 105
    logicalValue                go to state 106
    relation                    go to state 107
    varIdentifier               go to state 46
    procedureIdentifier         go to state 109
    functionDesignator          go to state 110


state 36

  114 returnStatement: TOKEN_RETURN . expression

    TOKEN_IDENTIFIER     shift, and go to state 1
    TOKEN_LOGICAL_VALUE  shift, and go to state 77
    TOKEN_PLUS           shift, and go to state 78
    TOKEN_MINUS          shift, and go to state 79
    TOKEN_OPEN_BRACKET   shift, and go to state 80
    TOKEN_REAL_NUM       shift, and go to state 81
    TOKEN_INTEGER        shift, and go to state 3
    TOKEN_NOT_OP         shift, and go to state 82
    TOKEN_IF             shift, and go to state 35

    tlabel                         go to state 83
    label                          go to state 8
    arrayIdentifier                go to state 41
    expression                     go to state 118
    switchIdentifier               go to state 85
    switchDesignator               go to state 86
    simpleDesignationalExpression  go to state 87
    designationalExpression        go to state 88
    arithmeticExpression           go to state 89
    simpleArithmeticExpression     go to state 90
    term                           go to state 91
    factor                         go to state 92
    primary                        go to state 93
    unsignedNumber                 go to state 94
    realNumber                     go to state 95
    integer                        go to state 96
    simpleVariable                 go to state 42
    variable                       go to state 97
    subscriptedVariable            go to state 44
    identifier                     go to state 98
    booleanExpression              go to state 99
    simpleBoolean                  go to state 100
    implication                    go to state 101
    booleanTerm                    go to state 102
    booleanFactor                  go to state 103
    booleanSecondary               go to state 104
    booleanPrimary                 go to state 105
    logicalValue                   go to state 106
    relation                       go to state 107
    varIdentifier                  go to state 46
    ifClause                       go to state 108
    procedureIdentifier            go to state 109
    functionDesignator             go to state 110


state 37

  100 unconditionalStatement: block .

    $default  reduce using rule 100 (unconditionalStatement)


state 38

    6 block: tlabel . block
   15 compoundStatement: tlabel . compoundStatement
  104 conditionalStatement: tlabel . conditionalStatement
  108 basicStatement: tlabel . basicStatement

    TOKEN_IDENTIFIER  shift, and go to state 1
    TOKEN_BEGIN       shift, and go to state 2
    TOKEN_INTEGER     shift, and go to state 3
    TOKEN_IF          shift, and go to state 35
    TOKEN_RETURN      shift, and go to state 36

    $default  reduce using rule 118 (empty)

    blockHead                 go to state 4
    unlabelledBlock           go to state 5
    block                     go to state 17
    tlabel                    go to state 38
    label                     go to state 8
    unlabelledCompound        go to state 10
    compoundStatement         go to state 18
    arrayIdentifier           go to state 41
    integer                   go to state 12
    simpleVariable            go to state 42
    variable                  go to state 43
    subscriptedVariable       go to state 44
    identifier                go to state 45
    varIdentifier             go to state 46
    conditionalStatement      go to state 119
    ifStatement               go to state 49
    ifClause                  go to state 50
    basicStatement            go to state 120
    unlabelledBasicStatement  go to state 52
    dummyStatement            go to state 53
    returnStatement           go to state 54
    assignmentStatement       go to state 55
    empty                     go to state 57
    procedureStatement        go to state 58
    procedureIdentifier       go to state 59


state 39

   99 unconditionalStatement: compoundStatement .

    $default  reduce using rule 99 (unconditionalStatement)


state 40

   13 unlabelledCompound: TOKEN_BEGIN @2 compoundTail .

    $default  reduce using rule 13 (unlabelledCompound)


state 41

   69 subscriptedVariable: arrayIdentifier . TOKEN_OPEN_SQUARE_BRACKET subscriptList TOKEN_CLOSE_SQUARE_BRACKET

    TOKEN_OPEN_SQUARE_BRACKET  shift, and go to state 121


state 42

   67 variable: simpleVariable .

    $default  reduce using rule 67 (variable)


state 43

  115 assignmentStatement: variable . TOKEN_ASSIGN arithmeticExpression
  116                    | variable . TOKEN_ASSIGN booleanExpression

    TOKEN_ASSIGN  shift, and go to state 122


state 44

   68 variable: subscriptedVariable .

    $default  reduce using rule 68 (variable)


state 45

    8 label: identifier .
   30 arrayIdentifier: identifier .
   97 varIdentifier: identifier .
  120 procedureIdentifier: identifier .

    TOKEN_OPEN_BRACKET         reduce using rule 120 (procedureIdentifier)
    TOKEN_OPEN_SQUARE_BRACKET  reduce using rule 30 (arrayIdentifier)
    TOKEN_ASSIGN               reduce using rule 97 (varIdentifier)
    $default                   reduce using rule 8 (label)


state 46

   66 simpleVariable: varIdentifier .

    $default  reduce using rule 66 (simpleVariable)


state 47

  129 statement: unconditionalStatement .

    $default  reduce using rule 129 (statement)


state 48

  130 statement: conditionalStatement .

    $default  reduce using rule 130 (statement)


state 49

  101 conditionalStatement: ifStatement .
  102                     | ifStatement . TOKEN_ELSE statement

    TOKEN_ELSE  shift, and go to state 123

    $default  reduce using rule 101 (conditionalStatement)


state 50

  103 conditionalStatement: ifClause . forStatement
  105 ifStatement: ifClause . unconditionalStatement

    TOKEN_IDENTIFIER  shift, and go to state 1
    TOKEN_BEGIN       shift, and go to state 2
    TOKEN_INTEGER     shift, and go to state 3
    TOKEN_FOR         shift, and go to state 34
    TOKEN_RETURN      shift, and go to state 36

    $default  reduce using rule 118 (empty)

    blockHead                 go to state 4
    unlabelledBlock           go to state 5
    block                     go to state 37
    tlabel                    go to state 124
    label                     go to state 8
    unlabelledCompound        go to state 10
    compoundStatement         go to state 39
    arrayIdentifier           go to state 41
    integer                   go to state 12
    simpleVariable            go to state 42
    variable                  go to state 43
    subscriptedVariable       go to state 44
    identifier                go to state 45
    varIdentifier             go to state 46
    unconditionalStatement    go to state 125
    basicStatement            go to state 51
    unlabelledBasicStatement  go to state 52
    dummyStatement            go to state 53
    returnStatement           go to state 54
    assignmentStatement       go to state 55
    forStatement              go to state 126
    empty                     go to state 57
    procedureStatement        go to state 58
    procedureIdentifier       go to state 59


state 51

   98 unconditionalStatement: basicStatement .

    $default  reduce using rule 98 (unconditionalStatement)


state 52

  107 basicStatement: unlabelledBasicStatement .

    $default  reduce using rule 107 (basicStatement)


state 53

  110 unlabelledBasicStatement: dummyStatement .

    $default  reduce using rule 110 (unlabelledBasicStatement)


state 54

  112 unlabelledBasicStatement: returnStatement .

    $default  reduce using rule 112 (unlabelledBasicStatement)


state 55

  109 unlabelledBasicStatement: assignmentStatement .

    $default  reduce using rule 109 (unlabelledBasicStatement)


state 56

  131 statement: forStatement .

    $default  reduce using rule 131 (statement)


state 57

  113 dummyStatement: empty .

    $default  reduce using rule 113 (dummyStatement)


state 58

  111 unlabelledBasicStatement: procedureStatement .

    $default  reduce using rule 111 (unlabelledBasicStatement)


state 59

  119 procedureStatement: procedureIdentifier . actualParameterPart

    TOKEN_OPEN_BRACKET  shift, and go to state 127

    actualParameterPart  go to state 128


state 60

   16 compoundTail: statement . TOKEN_END
   17             | statement . TOKEN_SEMICOLON compoundTail

    TOKEN_END        shift, and go to state 129
    TOKEN_SEMICOLON  shift, and go to state 130


state 61

    4 unlabelledBlock: blockHead TOKEN_SEMICOLON compoundTail .

    $default  reduce using rule 4 (unlabelledBlock)


state 62

    3 blockHead: blockHead TOKEN_SEMICOLON declaration .

    $default  reduce using rule 3 (blockHead)


state 63

  120 procedureIdentifier: identifier .

    $default  reduce using rule 120 (procedureIdentifier)


state 64

  155 procedureHeading: procedureIdentifier . @5 formalParameterPart TOKEN_SEMICOLON $@6 valuePart specificationPart

    $default  reduce using rule 153 (@5)

    @5  go to state 131


state 65

  157 procedureDeclaration: TOKEN_PROCEDURE procedureHeading . procedureBody

    TOKEN_BEGIN  shift, and go to state 132

    procedureBody  go to state 133


state 66

   25 switchDeclaration: TOKEN_SWITCH switchIdentifier . TOKEN_ASSIGN switchList

    TOKEN_ASSIGN  shift, and go to state 134


state 67

   40 switchIdentifier: identifier .

    $default  reduce using rule 40 (switchIdentifier)


state 68

   31 arraySegment: arrayIdentifier . TOKEN_OPEN_SQUARE_BRACKET boundPairList TOKEN_CLOSE_SQUARE_BRACKET
   32             | arrayIdentifier . TOKEN_COMMA arraySegment

    TOKEN_COMMA                shift, and go to state 135
    TOKEN_OPEN_SQUARE_BRACKET  shift, and go to state 136


state 69

   33 arrayList: arraySegment .

    $default  reduce using rule 33 (arrayList)


state 70

   34 arrayList: arrayList . TOKEN_COMMA arraySegment
   35 arrayDeclaration: TOKEN_ARRAY arrayList .

    TOKEN_COMMA  shift, and go to state 137

    $default  reduce using rule 35 (arrayDeclaration)


state 71

   30 arrayIdentifier: identifier .

    $default  reduce using rule 30 (arrayIdentifier)


state 72

  158 procedureDeclaration: type TOKEN_PROCEDURE . procedureHeading procedureBody

    TOKEN_IDENTIFIER  shift, and go to state 1

    identifier           go to state 63
    procedureIdentifier  go to state 64
    procedureHeading     go to state 138


state 73

   36 arrayDeclaration: type TOKEN_ARRAY . arrayList

    TOKEN_IDENTIFIER  shift, and go to state 1

    arrayIdentifier  go to state 68
    arraySegment     go to state 69
    arrayList        go to state 139
    identifier       go to state 71


state 74

   97 varIdentifier: identifier .

    $default  reduce using rule 97 (varIdentifier)


state 75

   92 listType: listType . TOKEN_COMMA varIdentifier
   96 typeDeclaration: type listType .

    TOKEN_COMMA  shift, and go to state 140

    $default  reduce using rule 96 (typeDeclaration)


state 76

   91 listType: varIdentifier .

    $default  reduce using rule 91 (listType)


state 77

   88 logicalValue: TOKEN_LOGICAL_VALUE .

    $default  reduce using rule 88 (logicalValue)


state 78

   49 simpleArithmeticExpression: TOKEN_PLUS . term

    TOKEN_IDENTIFIER    shift, and go to state 1
    TOKEN_OPEN_BRACKET  shift, and go to state 141
    TOKEN_REAL_NUM      shift, and go to state 81
    TOKEN_INTEGER       shift, and go to state 3

    arrayIdentifier      go to state 41
    term                 go to state 142
    factor               go to state 92
    primary              go to state 93
    unsignedNumber       go to state 94
    realNumber           go to state 95
    integer              go to state 115
    simpleVariable       go to state 42
    variable             go to state 97
    subscriptedVariable  go to state 44
    identifier           go to state 116
    varIdentifier        go to state 46
    procedureIdentifier  go to state 109
    functionDesignator   go to state 110


state 79

   50 simpleArithmeticExpression: TOKEN_MINUS . term

    TOKEN_IDENTIFIER    shift, and go to state 1
    TOKEN_OPEN_BRACKET  shift, and go to state 141
    TOKEN_REAL_NUM      shift, and go to state 81
    TOKEN_INTEGER       shift, and go to state 3

    arrayIdentifier      go to state 41
    term                 go to state 143
    factor               go to state 92
    primary              go to state 93
    unsignedNumber       go to state 94
    realNumber           go to state 95
    integer              go to state 115
    simpleVariable       go to state 42
    variable             go to state 97
    subscriptedVariable  go to state 44
    identifier           go to state 116
    varIdentifier        go to state 46
    procedureIdentifier  go to state 109
    functionDesignator   go to state 110


state 80

   44 simpleDesignationalExpression: TOKEN_OPEN_BRACKET . designationalExpression TOKEN_CLOSE_BRACKET
   61 primary: TOKEN_OPEN_BRACKET . arithmeticExpression TOKEN_CLOSE_BRACKET
   87 booleanPrimary: TOKEN_OPEN_BRACKET . booleanExpression TOKEN_CLOSE_BRACKET

    TOKEN_IDENTIFIER     shift, and go to state 1
    TOKEN_LOGICAL_VALUE  shift, and go to state 77
    TOKEN_PLUS           shift, and go to state 78
    TOKEN_MINUS          shift, and go to state 79
    TOKEN_OPEN_BRACKET   shift, and go to state 80
    TOKEN_REAL_NUM       shift, and go to state 81
    TOKEN_INTEGER        shift, and go to state 3
    TOKEN_NOT_OP         shift, and go to state 82
    TOKEN_IF             shift, and go to state 35

    tlabel                         go to state 83
    label                          go to state 8
    arrayIdentifier                go to state 41
    switchIdentifier               go to state 85
    switchDesignator               go to state 86
    simpleDesignationalExpression  go to state 87
    designationalExpression        go to state 144
    arithmeticExpression           go to state 145
    simpleArithmeticExpression     go to state 90
    term                           go to state 91
    factor                         go to state 92
    primary                        go to state 93
    unsignedNumber                 go to state 94
    realNumber                     go to state 95
    integer                        go to state 96
    simpleVariable                 go to state 42
    variable                       go to state 97
    subscriptedVariable            go to state 44
    identifier                     go to state 98
    booleanExpression              go to state 146
    simpleBoolean                  go to state 100
    implication                    go to state 101
    booleanTerm                    go to state 102
    booleanFactor                  go to state 103
    booleanSecondary               go to state 104
    booleanPrimary                 go to state 105
    logicalValue                   go to state 106
    relation                       go to state 107
    varIdentifier                  go to state 46
    ifClause                       go to state 108
    procedureIdentifier            go to state 109
    functionDesignator             go to state 110


state 81

   64 realNumber: TOKEN_REAL_NUM .

    $default  reduce using rule 64 (realNumber)


state 82

   84 booleanSecondary: TOKEN_NOT_OP . booleanPrimary

    TOKEN_IDENTIFIER     shift, and go to state 1
    TOKEN_LOGICAL_VALUE  shift, and go to state 77
    TOKEN_PLUS           shift, and go to state 78
    TOKEN_MINUS          shift, and go to state 79
    TOKEN_OPEN_BRACKET   shift, and go to state 113
    TOKEN_REAL_NUM       shift, and go to state 81
    TOKEN_INTEGER        shift, and go to state 3

    arrayIdentifier             go to state 41
    simpleArithmeticExpression  go to state 114
    term                        go to state 91
    factor                      go to state 92
    primary                     go to state 93
    unsignedNumber              go to state 94
    realNumber                  go to state 95
    integer                     go to state 115
    simpleVariable              go to state 42
    variable                    go to state 97
    subscriptedVariable         go to state 44
    identifier                  go to state 116
    booleanPrimary              go to state 147
    logicalValue                go to state 106
    relation                    go to state 107
    varIdentifier               go to state 46
    procedureIdentifier         go to state 109
    functionDesignator          go to state 110


state 83

   42 simpleDesignationalExpression: tlabel .

    $default  reduce using rule 42 (simpleDesignationalExpression)


state 84

  132 statement: TOKEN_PRINT expression .

    $default  reduce using rule 132 (statement)


state 85

   41 switchDesignator: switchIdentifier . TOKEN_OPEN_CURLY_BRACKET subscriptExpression TOKEN_CLOSE_CURLY_BRACKET

    TOKEN_OPEN_CURLY_BRACKET  shift, and go to state 148


state 86

   43 simpleDesignationalExpression: switchDesignator .

    $default  reduce using rule 43 (simpleDesignationalExpression)


state 87

   45 designationalExpression: simpleDesignationalExpression .

    $default  reduce using rule 45 (designationalExpression)


state 88

   39 expression: designationalExpression .

    $default  reduce using rule 39 (expression)


state 89

   37 expression: arithmeticExpression .

    $default  reduce using rule 37 (expression)


state 90

   47 arithmeticExpression: simpleArithmeticExpression .
   51 simpleArithmeticExpression: simpleArithmeticExpression . TOKEN_PLUS term
   52                           | simpleArithmeticExpression . TOKEN_MINUS term
   89 relation: simpleArithmeticExpression . relationalOperator simpleArithmeticExpression

    TOKEN_PLUS    shift, and go to state 149
    TOKEN_MINUS   shift, and go to state 150
    TOKEN_REL_OP  shift, and go to state 151

    $default  reduce using rule 47 (arithmeticExpression)

    relationalOperator  go to state 152


state 91

   48 simpleArithmeticExpression: term .
   54 term: term . TOKEN_MULTIPLY factor
   55     | term . TOKEN_DIVIDE factor

    TOKEN_DIVIDE    shift, and go to state 153
    TOKEN_MULTIPLY  shift, and go to state 154

    $default  reduce using rule 48 (simpleArithmeticExpression)


state 92

   53 term: factor .
   57 factor: factor . TOKEN_POWER primary

    TOKEN_POWER  shift, and go to state 155

    $default  reduce using rule 53 (term)


state 93

   56 factor: primary .

    $default  reduce using rule 56 (factor)


state 94

   58 primary: unsignedNumber .

    $default  reduce using rule 58 (primary)


state 95

   62 unsignedNumber: realNumber .

    $default  reduce using rule 62 (unsignedNumber)


state 96

    9 label: integer .
   63 unsignedNumber: integer .

    TOKEN_COLON  reduce using rule 9 (label)
    $default     reduce using rule 63 (unsignedNumber)


state 97

   60 primary: variable .

    $default  reduce using rule 60 (primary)


state 98

    8 label: identifier .
   30 arrayIdentifier: identifier .
   40 switchIdentifier: identifier .
   97 varIdentifier: identifier .
  120 procedureIdentifier: identifier .

    TOKEN_OPEN_BRACKET         reduce using rule 120 (procedureIdentifier)
    TOKEN_OPEN_SQUARE_BRACKET  reduce using rule 30 (arrayIdentifier)
    TOKEN_OPEN_CURLY_BRACKET   reduce using rule 40 (switchIdentifier)
    TOKEN_COLON                reduce using rule 8 (label)
    $default                   reduce using rule 97 (varIdentifier)


state 99

   38 expression: booleanExpression .

    $default  reduce using rule 38 (expression)


state 100

   74 booleanExpression: simpleBoolean .
   76 simpleBoolean: simpleBoolean . TOKEN_EQUIV implication

    TOKEN_EQUIV  shift, and go to state 156

    $default  reduce using rule 74 (booleanExpression)


state 101

   75 simpleBoolean: implication .
   78 implication: implication . TOKEN_IMPLY booleanTerm

    TOKEN_IMPLY  shift, and go to state 157

    $default  reduce using rule 75 (simpleBoolean)


state 102

   77 implication: booleanTerm .
   80 booleanTerm: booleanTerm . TOKEN_OR_OP booleanFactor

    TOKEN_OR_OP  shift, and go to state 158

    $default  reduce using rule 77 (implication)


state 103

   79 booleanTerm: booleanFactor .
   82 booleanFactor: booleanFactor . TOKEN_AND_OP booleanSecondary

    TOKEN_AND_OP  shift, and go to state 159

    $default  reduce using rule 79 (booleanTerm)


state 104

   81 booleanFactor: booleanSecondary .

    $default  reduce using rule 81 (booleanFactor)


state 105

   83 booleanSecondary: booleanPrimary .

    $default  reduce using rule 83 (booleanSecondary)


state 106

   85 booleanPrimary: logicalValue .

    $default  reduce using rule 85 (booleanPrimary)


state 107

   86 booleanPrimary: relation .

    $default  reduce using rule 86 (booleanPrimary)


state 108

   46 designationalExpression: ifClause . simpleDesignationalExpression TOKEN_ELSE designationalExpression

    TOKEN_IDENTIFIER    shift, and go to state 1
    TOKEN_OPEN_BRACKET  shift, and go to state 160
    TOKEN_INTEGER       shift, and go to state 3

    tlabel                         go to state 83
    label                          go to state 8
    switchIdentifier               go to state 85
    switchDesignator               go to state 86
    simpleDesignationalExpression  go to state 161
    integer                        go to state 12
    identifier                     go to state 162


state 109

  128 functionDesignator: procedureIdentifier . actualParameterPart

    TOKEN_OPEN_BRACKET  shift, and go to state 127

    actualParameterPart  go to state 163


state 110

   59 primary: functionDesignator .

    $default  reduce using rule 59 (primary)


state 111

  117 forStatement: TOKEN_FOR variable . TOKEN_ASSIGN arithmeticExpression TOKEN_STEP arithmeticExpression TOKEN_UNTIL arithmeticExpression TOKEN_DO statement

    TOKEN_ASSIGN  shift, and go to state 164


state 112

   30 arrayIdentifier: identifier .
   97 varIdentifier: identifier .

    TOKEN_ASSIGN  reduce using rule 97 (varIdentifier)
    $default      reduce using rule 30 (arrayIdentifier)


state 113

   61 primary: TOKEN_OPEN_BRACKET . arithmeticExpression TOKEN_CLOSE_BRACKET
   87 booleanPrimary: TOKEN_OPEN_BRACKET . booleanExpression TOKEN_CLOSE_BRACKET

    TOKEN_IDENTIFIER     shift, and go to state 1
    TOKEN_LOGICAL_VALUE  shift, and go to state 77
    TOKEN_PLUS           shift, and go to state 78
    TOKEN_MINUS          shift, and go to state 79
    TOKEN_OPEN_BRACKET   shift, and go to state 113
    TOKEN_REAL_NUM       shift, and go to state 81
    TOKEN_INTEGER        shift, and go to state 3
    TOKEN_NOT_OP         shift, and go to state 82

    arrayIdentifier             go to state 41
    arithmeticExpression        go to state 145
    simpleArithmeticExpression  go to state 90
    term                        go to state 91
    factor                      go to state 92
    primary                     go to state 93
    unsignedNumber              go to state 94
    realNumber                  go to state 95
    integer                     go to state 115
    simpleVariable              go to state 42
    variable                    go to state 97
    subscriptedVariable         go to state 44
    identifier                  go to state 116
    booleanExpression           go to state 146
    simpleBoolean               go to state 100
    implication                 go to state 101
    booleanTerm                 go to state 102
    booleanFactor               go to state 103
    booleanSecondary            go to state 104
    booleanPrimary              go to state 105
    logicalValue                go to state 106
    relation                    go to state 107
    varIdentifier               go to state 46
    procedureIdentifier         go to state 109
    functionDesignator          go to state 110


state 114

   51 simpleArithmeticExpression: simpleArithmeticExpression . TOKEN_PLUS term
   52                           | simpleArithmeticExpression . TOKEN_MINUS term
   89 relation: simpleArithmeticExpression . relationalOperator simpleArithmeticExpression

    TOKEN_PLUS    shift, and go to state 149
    TOKEN_MINUS   shift, and go to state 150
    TOKEN_REL_OP  shift, and go to state 151

    relationalOperator  go to state 152


state 115

   63 unsignedNumber: integer .

    $default  reduce using rule 63 (unsignedNumber)


state 116

   30 arrayIdentifier: identifier .
   97 varIdentifier: identifier .
  120 procedureIdentifier: identifier .

    TOKEN_OPEN_BRACKET         reduce using rule 120 (procedureIdentifier)
    TOKEN_OPEN_SQUARE_BRACKET  reduce using rule 30 (arrayIdentifier)
    $default                   reduce using rule 97 (varIdentifier)


state 117

  106 ifClause: TOKEN_IF booleanExpression . TOKEN_THEN

    TOKEN_THEN  shift, and go to state 165


state 118

  114 returnStatement: TOKEN_RETURN expression .

    $default  reduce using rule 114 (returnStatement)


state 119

  104 conditionalStatement: tlabel conditionalStatement .

    $default  reduce using rule 104 (conditionalStatement)


state 120

  108 basicStatement: tlabel basicStatement .

    $default  reduce using rule 108 (basicStatement)


state 121

   69 subscriptedVariable: arrayIdentifier TOKEN_OPEN_SQUARE_BRACKET . subscriptList TOKEN_CLOSE_SQUARE_BRACKET

    TOKEN_IDENTIFIER    shift, and go to state 1
    TOKEN_PLUS          shift, and go to state 78
    TOKEN_MINUS         shift, and go to state 79
    TOKEN_OPEN_BRACKET  shift, and go to state 141
    TOKEN_REAL_NUM      shift, and go to state 81
    TOKEN_INTEGER       shift, and go to state 3

    arrayIdentifier             go to state 41
    arithmeticExpression        go to state 166
    simpleArithmeticExpression  go to state 167
    term                        go to state 91
    factor                      go to state 92
    primary                     go to state 93
    unsignedNumber              go to state 94
    realNumber                  go to state 95
    integer                     go to state 115
    simpleVariable              go to state 42
    variable                    go to state 97
    subscriptedVariable         go to state 44
    subscriptList               go to state 168
    subscriptExpression         go to state 169
    identifier                  go to state 116
    varIdentifier               go to state 46
    procedureIdentifier         go to state 109
    functionDesignator          go to state 110


state 122

  115 assignmentStatement: variable TOKEN_ASSIGN . arithmeticExpression
  116                    | variable TOKEN_ASSIGN . booleanExpression

    TOKEN_IDENTIFIER     shift, and go to state 1
    TOKEN_LOGICAL_VALUE  shift, and go to state 77
    TOKEN_PLUS           shift, and go to state 78
    TOKEN_MINUS          shift, and go to state 79
    TOKEN_OPEN_BRACKET   shift, and go to state 113
    TOKEN_REAL_NUM       shift, and go to state 81
    TOKEN_INTEGER        shift, and go to state 3
    TOKEN_NOT_OP         shift, and go to state 82

    arrayIdentifier             go to state 41
    arithmeticExpression        go to state 170
    simpleArithmeticExpression  go to state 90
    term                        go to state 91
    factor                      go to state 92
    primary                     go to state 93
    unsignedNumber              go to state 94
    realNumber                  go to state 95
    integer                     go to state 115
    simpleVariable              go to state 42
    variable                    go to state 97
    subscriptedVariable         go to state 44
    identifier                  go to state 116
    booleanExpression           go to state 171
    simpleBoolean               go to state 100
    implication                 go to state 101
    booleanTerm                 go to state 102
    booleanFactor               go to state 103
    booleanSecondary            go to state 104
    booleanPrimary              go to state 105
    logicalValue                go to state 106
    relation                    go to state 107
    varIdentifier               go to state 46
    procedureIdentifier         go to state 109
    functionDesignator          go to state 110


state 123

  102 conditionalStatement: ifStatement TOKEN_ELSE . statement

    TOKEN_PRINT       shift, and go to state 33
    TOKEN_IDENTIFIER  shift, and go to state 1
    TOKEN_BEGIN       shift, and go to state 2
    TOKEN_INTEGER     shift, and go to state 3
    TOKEN_FOR         shift, and go to state 34
    TOKEN_IF          shift, and go to state 35
    TOKEN_RETURN      shift, and go to state 36

    $default  reduce using rule 118 (empty)

    blockHead                 go to state 4
    unlabelledBlock           go to state 5
    block                     go to state 37
    tlabel                    go to state 38
    label                     go to state 8
    unlabelledCompound        go to state 10
    compoundStatement         go to state 39
    arrayIdentifier           go to state 41
    integer                   go to state 12
    simpleVariable            go to state 42
    variable                  go to state 43
    subscriptedVariable       go to state 44
    identifier                go to state 45
    varIdentifier             go to state 46
    unconditionalStatement    go to state 47
    conditionalStatement      go to state 48
    ifStatement               go to state 49
    ifClause                  go to state 50
    basicStatement            go to state 51
    unlabelledBasicStatement  go to state 52
    dummyStatement            go to state 53
    returnStatement           go to state 54
    assignmentStatement       go to state 55
    forStatement              go to state 56
    empty                     go to state 57
    procedureStatement        go to state 58
    procedureIdentifier       go to state 59
    statement                 go to state 172


state 124

    6 block: tlabel . block
   15 compoundStatement: tlabel . compoundStatement
  108 basicStatement: tlabel . basicStatement

    TOKEN_IDENTIFIER  shift, and go to state 1
    TOKEN_BEGIN       shift, and go to state 2
    TOKEN_INTEGER     shift, and go to state 3
    TOKEN_RETURN      shift, and go to state 36

    $default  reduce using rule 118 (empty)

    blockHead                 go to state 4
    unlabelledBlock           go to state 5
    block                     go to state 17
    tlabel                    go to state 124
    label                     go to state 8
    unlabelledCompound        go to state 10
    compoundStatement         go to state 18
    arrayIdentifier           go to state 41
    integer                   go to state 12
    simpleVariable            go to state 42
    variable                  go to state 43
    subscriptedVariable       go to state 44
    identifier                go to state 45
    varIdentifier             go to state 46
    basicStatement            go to state 120
    unlabelledBasicStatement  go to state 52
    dummyStatement            go to state 53
    returnStatement           go to state 54
    assignmentStatement       go to state 55
    empty                     go to state 57
    procedureStatement        go to state 58
    procedureIdentifier       go to state 59


state 125

  105 ifStatement: ifClause unconditionalStatement .

    $default  reduce using rule 105 (ifStatement)


state 126

  103 conditionalStatement: ifClause forStatement .

    $default  reduce using rule 103 (conditionalStatement)


state 127

  121 actualParameterPart: TOKEN_OPEN_BRACKET . TOKEN_CLOSE_BRACKET
  122                    | TOKEN_OPEN_BRACKET . actualParameterList TOKEN_CLOSE_BRACKET

    TOKEN_IDENTIFIER     shift, and go to state 1
    TOKEN_LOGICAL_VALUE  shift, and go to state 77
    TOKEN_PLUS           shift, and go to state 78
    TOKEN_MINUS          shift, and go to state 79
    TOKEN_OPEN_BRACKET   shift, and go to state 80
    TOKEN_CLOSE_BRACKET  shift, and go to state 173
    TOKEN_REAL_NUM       shift, and go to state 81
    TOKEN_INTEGER        shift, and go to state 3
    TOKEN_NOT_OP         shift, and go to state 82
    TOKEN_IF             shift, and go to state 35

    tlabel                         go to state 83
    label                          go to state 8
    arrayIdentifier                go to state 41
    expression                     go to state 174
    switchIdentifier               go to state 85
    switchDesignator               go to state 86
    simpleDesignationalExpression  go to state 87
    designationalExpression        go to state 88
    arithmeticExpression           go to state 89
    simpleArithmeticExpression     go to state 90
    term                           go to state 91
    factor                         go to state 92
    primary                        go to state 93
    unsignedNumber                 go to state 94
    realNumber                     go to state 95
    integer                        go to state 96
    simpleVariable                 go to state 42
    variable                       go to state 97
    subscriptedVariable            go to state 44
    identifier                     go to state 98
    booleanExpression              go to state 99
    simpleBoolean                  go to state 100
    implication                    go to state 101
    booleanTerm                    go to state 102
    booleanFactor                  go to state 103
    booleanSecondary               go to state 104
    booleanPrimary                 go to state 105
    logicalValue                   go to state 106
    relation                       go to state 107
    varIdentifier                  go to state 46
    ifClause                       go to state 108
    procedureIdentifier            go to state 109
    actualParameterList            go to state 175
    actualParameter                go to state 176
    functionDesignator             go to state 110


state 128

  119 procedureStatement: procedureIdentifier actualParameterPart .

    $default  reduce using rule 119 (procedureStatement)


state 129

   16 compoundTail: statement TOKEN_END .

    $default  reduce using rule 16 (compoundTail)


state 130

   17 compoundTail: statement TOKEN_SEMICOLON . compoundTail

    TOKEN_PRINT       shift, and go to state 33
    TOKEN_IDENTIFIER  shift, and go to state 1
    TOKEN_BEGIN       shift, and go to state 2
    TOKEN_INTEGER     shift, and go to state 3
    TOKEN_FOR         shift, and go to state 34
    TOKEN_IF          shift, and go to state 35
    TOKEN_RETURN      shift, and go to state 36

    $default  reduce using rule 118 (empty)

    blockHead                 go to state 4
    unlabelledBlock           go to state 5
    block                     go to state 37
    tlabel                    go to state 38
    label                     go to state 8
    unlabelledCompound        go to state 10
    compoundStatement         go to state 39
    compoundTail              go to state 177
    arrayIdentifier           go to state 41
    integer                   go to state 12
    simpleVariable            go to state 42
    variable                  go to state 43
    subscriptedVariable       go to state 44
    identifier                go to state 45
    varIdentifier             go to state 46
    unconditionalStatement    go to state 47
    conditionalStatement      go to state 48
    ifStatement               go to state 49
    ifClause                  go to state 50
    basicStatement            go to state 51
    unlabelledBasicStatement  go to state 52
    dummyStatement            go to state 53
    returnStatement           go to state 54
    assignmentStatement       go to state 55
    forStatement              go to state 56
    empty                     go to state 57
    procedureStatement        go to state 58
    procedureIdentifier       go to state 59
    statement                 go to state 60


state 131

  155 procedureHeading: procedureIdentifier @5 . formalParameterPart TOKEN_SEMICOLON $@6 valuePart specificationPart

    TOKEN_OPEN_BRACKET  shift, and go to state 178

    $default  reduce using rule 118 (empty)

    empty                go to state 179
    formalParameterPart  go to state 180


state 132

  156 procedureBody: TOKEN_BEGIN . TOKEN_SEMICOLON statement TOKEN_END

    TOKEN_SEMICOLON  shift, and go to state 181


state 133

  157 procedureDeclaration: TOKEN_PROCEDURE procedureHeading procedureBody .

    $default  reduce using rule 157 (procedureDeclaration)


state 134

   25 switchDeclaration: TOKEN_SWITCH switchIdentifier TOKEN_ASSIGN . switchList

    TOKEN_IDENTIFIER    shift, and go to state 1
    TOKEN_OPEN_BRACKET  shift, and go to state 160
    TOKEN_INTEGER       shift, and go to state 3
    TOKEN_IF            shift, and go to state 35

    tlabel                         go to state 83
    label                          go to state 8
    switchList                     go to state 182
    switchIdentifier               go to state 85
    switchDesignator               go to state 86
    simpleDesignationalExpression  go to state 87
    designationalExpression        go to state 183
    integer                        go to state 12
    identifier                     go to state 162
    ifClause                       go to state 108


state 135

   32 arraySegment: arrayIdentifier TOKEN_COMMA . arraySegment

    TOKEN_IDENTIFIER  shift, and go to state 1

    arrayIdentifier  go to state 68
    arraySegment     go to state 184
    identifier       go to state 71


state 136

   31 arraySegment: arrayIdentifier TOKEN_OPEN_SQUARE_BRACKET . boundPairList TOKEN_CLOSE_SQUARE_BRACKET

    TOKEN_IDENTIFIER    shift, and go to state 1
    TOKEN_PLUS          shift, and go to state 78
    TOKEN_MINUS         shift, and go to state 79
    TOKEN_OPEN_BRACKET  shift, and go to state 141
    TOKEN_REAL_NUM      shift, and go to state 81
    TOKEN_INTEGER       shift, and go to state 3

    lowerBound                  go to state 185
    boundPair                   go to state 186
    boundPairList               go to state 187
    arrayIdentifier             go to state 41
    arithmeticExpression        go to state 188
    simpleArithmeticExpression  go to state 167
    term                        go to state 91
    factor                      go to state 92
    primary                     go to state 93
    unsignedNumber              go to state 94
    realNumber                  go to state 95
    integer                     go to state 115
    simpleVariable              go to state 42
    variable                    go to state 97
    subscriptedVariable         go to state 44
    identifier                  go to state 116
    varIdentifier               go to state 46
    procedureIdentifier         go to state 109
    functionDesignator          go to state 110


state 137

   34 arrayList: arrayList TOKEN_COMMA . arraySegment

    TOKEN_IDENTIFIER  shift, and go to state 1

    arrayIdentifier  go to state 68
    arraySegment     go to state 189
    identifier       go to state 71


state 138

  158 procedureDeclaration: type TOKEN_PROCEDURE procedureHeading . procedureBody

    TOKEN_BEGIN  shift, and go to state 132

    procedureBody  go to state 190


state 139

   34 arrayList: arrayList . TOKEN_COMMA arraySegment
   36 arrayDeclaration: type TOKEN_ARRAY arrayList .

    TOKEN_COMMA  shift, and go to state 137

    $default  reduce using rule 36 (arrayDeclaration)


state 140

   92 listType: listType TOKEN_COMMA . varIdentifier

    TOKEN_IDENTIFIER  shift, and go to state 1

    identifier     go to state 74
    varIdentifier  go to state 191


state 141

   61 primary: TOKEN_OPEN_BRACKET . arithmeticExpression TOKEN_CLOSE_BRACKET

    TOKEN_IDENTIFIER    shift, and go to state 1
    TOKEN_PLUS          shift, and go to state 78
    TOKEN_MINUS         shift, and go to state 79
    TOKEN_OPEN_BRACKET  shift, and go to state 141
    TOKEN_REAL_NUM      shift, and go to state 81
    TOKEN_INTEGER       shift, and go to state 3

    arrayIdentifier             go to state 41
    arithmeticExpression        go to state 145
    simpleArithmeticExpression  go to state 167
    term                        go to state 91
    factor                      go to state 92
    primary                     go to state 93
    unsignedNumber              go to state 94
    realNumber                  go to state 95
    integer                     go to state 115
    simpleVariable              go to state 42
    variable                    go to state 97
    subscriptedVariable         go to state 44
    identifier                  go to state 116
    varIdentifier               go to state 46
    procedureIdentifier         go to state 109
    functionDesignator          go to state 110


state 142

   49 simpleArithmeticExpression: TOKEN_PLUS term .
   54 term: term . TOKEN_MULTIPLY factor
   55     | term . TOKEN_DIVIDE factor

    TOKEN_DIVIDE    shift, and go to state 153
    TOKEN_MULTIPLY  shift, and go to state 154

    $default  reduce using rule 49 (simpleArithmeticExpression)


state 143

   50 simpleArithmeticExpression: TOKEN_MINUS term .
   54 term: term . TOKEN_MULTIPLY factor
   55     | term . TOKEN_DIVIDE factor

    TOKEN_DIVIDE    shift, and go to state 153
    TOKEN_MULTIPLY  shift, and go to state 154

    $default  reduce using rule 50 (simpleArithmeticExpression)


state 144

   44 simpleDesignationalExpression: TOKEN_OPEN_BRACKET designationalExpression . TOKEN_CLOSE_BRACKET

    TOKEN_CLOSE_BRACKET  shift, and go to state 192


state 145

   61 primary: TOKEN_OPEN_BRACKET arithmeticExpression . TOKEN_CLOSE_BRACKET

    TOKEN_CLOSE_BRACKET  shift, and go to state 193


state 146

   87 booleanPrimary: TOKEN_OPEN_BRACKET booleanExpression . TOKEN_CLOSE_BRACKET

    TOKEN_CLOSE_BRACKET  shift, and go to state 194


state 147

   84 booleanSecondary: TOKEN_NOT_OP booleanPrimary .

    $default  reduce using rule 84 (booleanSecondary)


state 148

   41 switchDesignator: switchIdentifier TOKEN_OPEN_CURLY_BRACKET . subscriptExpression TOKEN_CLOSE_CURLY_BRACKET

    TOKEN_IDENTIFIER    shift, and go to state 1
    TOKEN_PLUS          shift, and go to state 78
    TOKEN_MINUS         shift, and go to state 79
    TOKEN_OPEN_BRACKET  shift, and go to state 141
    TOKEN_REAL_NUM      shift, and go to state 81
    TOKEN_INTEGER       shift, and go to state 3

    arrayIdentifier             go to state 41
    arithmeticExpression        go to state 166
    simpleArithmeticExpression  go to state 167
    term                        go to state 91
    factor                      go to state 92
    primary                     go to state 93
    unsignedNumber              go to state 94
    realNumber                  go to state 95
    integer                     go to state 115
    simpleVariable              go to state 42
    variable                    go to state 97
    subscriptedVariable         go to state 44
    subscriptExpression         go to state 195
    identifier                  go to state 116
    varIdentifier               go to state 46
    procedureIdentifier         go to state 109
    functionDesignator          go to state 110


state 149

   51 simpleArithmeticExpression: simpleArithmeticExpression TOKEN_PLUS . term

    TOKEN_IDENTIFIER    shift, and go to state 1
    TOKEN_OPEN_BRACKET  shift, and go to state 141
    TOKEN_REAL_NUM      shift, and go to state 81
    TOKEN_INTEGER       shift, and go to state 3

    arrayIdentifier      go to state 41
    term                 go to state 196
    factor               go to state 92
    primary              go to state 93
    unsignedNumber       go to state 94
    realNumber           go to state 95
    integer              go to state 115
    simpleVariable       go to state 42
    variable             go to state 97
    subscriptedVariable  go to state 44
    identifier           go to state 116
    varIdentifier        go to state 46
    procedureIdentifier  go to state 109
    functionDesignator   go to state 110


state 150

   52 simpleArithmeticExpression: simpleArithmeticExpression TOKEN_MINUS . term

    TOKEN_IDENTIFIER    shift, and go to state 1
    TOKEN_OPEN_BRACKET  shift, and go to state 141
    TOKEN_REAL_NUM      shift, and go to state 81
    TOKEN_INTEGER       shift, and go to state 3

    arrayIdentifier      go to state 41
    term                 go to state 197
    factor               go to state 92
    primary              go to state 93
    unsignedNumber       go to state 94
    realNumber           go to state 95
    integer              go to state 115
    simpleVariable       go to state 42
    variable             go to state 97
    subscriptedVariable  go to state 44
    identifier           go to state 116
    varIdentifier        go to state 46
    procedureIdentifier  go to state 109
    functionDesignator   go to state 110


state 151

   90 relationalOperator: TOKEN_REL_OP .

    $default  reduce using rule 90 (relationalOperator)


state 152

   89 relation: simpleArithmeticExpression relationalOperator . simpleArithmeticExpression

    TOKEN_IDENTIFIER    shift, and go to state 1
    TOKEN_PLUS          shift, and go to state 78
    TOKEN_MINUS         shift, and go to state 79
    TOKEN_OPEN_BRACKET  shift, and go to state 141
    TOKEN_REAL_NUM      shift, and go to state 81
    TOKEN_INTEGER       shift, and go to state 3

    arrayIdentifier             go to state 41
    simpleArithmeticExpression  go to state 198
    term                        go to state 91
    factor                      go to state 92
    primary                     go to state 93
    unsignedNumber              go to state 94
    realNumber                  go to state 95
    integer                     go to state 115
    simpleVariable              go to state 42
    variable                    go to state 97
    subscriptedVariable         go to state 44
    identifier                  go to state 116
    varIdentifier               go to state 46
    procedureIdentifier         go to state 109
    functionDesignator          go to state 110


state 153

   55 term: term TOKEN_DIVIDE . factor

    TOKEN_IDENTIFIER    shift, and go to state 1
    TOKEN_OPEN_BRACKET  shift, and go to state 141
    TOKEN_REAL_NUM      shift, and go to state 81
    TOKEN_INTEGER       shift, and go to state 3

    arrayIdentifier      go to state 41
    factor               go to state 199
    primary              go to state 93
    unsignedNumber       go to state 94
    realNumber           go to state 95
    integer              go to state 115
    simpleVariable       go to state 42
    variable             go to state 97
    subscriptedVariable  go to state 44
    identifier           go to state 116
    varIdentifier        go to state 46
    procedureIdentifier  go to state 109
    functionDesignator   go to state 110


state 154

   54 term: term TOKEN_MULTIPLY . factor

    TOKEN_IDENTIFIER    shift, and go to state 1
    TOKEN_OPEN_BRACKET  shift, and go to state 141
    TOKEN_REAL_NUM      shift, and go to state 81
    TOKEN_INTEGER       shift, and go to state 3

    arrayIdentifier      go to state 41
    factor               go to state 200
    primary              go to state 93
    unsignedNumber       go to state 94
    realNumber           go to state 95
    integer              go to state 115
    simpleVariable       go to state 42
    variable             go to state 97
    subscriptedVariable  go to state 44
    identifier           go to state 116
    varIdentifier        go to state 46
    procedureIdentifier  go to state 109
    functionDesignator   go to state 110


state 155

   57 factor: factor TOKEN_POWER . primary

    TOKEN_IDENTIFIER    shift, and go to state 1
    TOKEN_OPEN_BRACKET  shift, and go to state 141
    TOKEN_REAL_NUM      shift, and go to state 81
    TOKEN_INTEGER       shift, and go to state 3

    arrayIdentifier      go to state 41
    primary              go to state 201
    unsignedNumber       go to state 94
    realNumber           go to state 95
    integer              go to state 115
    simpleVariable       go to state 42
    variable             go to state 97
    subscriptedVariable  go to state 44
    identifier           go to state 116
    varIdentifier        go to state 46
    procedureIdentifier  go to state 109
    functionDesignator   go to state 110


state 156

   76 simpleBoolean: simpleBoolean TOKEN_EQUIV . implication

    TOKEN_IDENTIFIER     shift, and go to state 1
    TOKEN_LOGICAL_VALUE  shift, and go to state 77
    TOKEN_PLUS           shift, and go to state 78
    TOKEN_MINUS          shift, and go to state 79
    TOKEN_OPEN_BRACKET   shift, and go to state 113
    TOKEN_REAL_NUM       shift, and go to state 81
    TOKEN_INTEGER        shift, and go to state 3
    TOKEN_NOT_OP         shift, and go to state 82

    arrayIdentifier             go to state 41
    simpleArithmeticExpression  go to state 114
    term                        go to state 91
    factor                      go to state 92
    primary                     go to state 93
    unsignedNumber              go to state 94
    realNumber                  go to state 95
    integer                     go to state 115
    simpleVariable              go to state 42
    variable                    go to state 97
    subscriptedVariable         go to state 44
    identifier                  go to state 116
    implication                 go to state 202
    booleanTerm                 go to state 102
    booleanFactor               go to state 103
    booleanSecondary            go to state 104
    booleanPrimary              go to state 105
    logicalValue                go to state 106
    relation                    go to state 107
    varIdentifier               go to state 46
    procedureIdentifier         go to state 109
    functionDesignator          go to state 110


state 157

   78 implication: implication TOKEN_IMPLY . booleanTerm

    TOKEN_IDENTIFIER     shift, and go to state 1
    TOKEN_LOGICAL_VALUE  shift, and go to state 77
    TOKEN_PLUS           shift, and go to state 78
    TOKEN_MINUS          shift, and go to state 79
    TOKEN_OPEN_BRACKET   shift, and go to state 113
    TOKEN_REAL_NUM       shift, and go to state 81
    TOKEN_INTEGER        shift, and go to state 3
    TOKEN_NOT_OP         shift, and go to state 82

    arrayIdentifier             go to state 41
    simpleArithmeticExpression  go to state 114
    term                        go to state 91
    factor                      go to state 92
    primary                     go to state 93
    unsignedNumber              go to state 94
    realNumber                  go to state 95
    integer                     go to state 115
    simpleVariable              go to state 42
    variable                    go to state 97
    subscriptedVariable         go to state 44
    identifier                  go to state 116
    booleanTerm                 go to state 203
    booleanFactor               go to state 103
    booleanSecondary            go to state 104
    booleanPrimary              go to state 105
    logicalValue                go to state 106
    relation                    go to state 107
    varIdentifier               go to state 46
    procedureIdentifier         go to state 109
    functionDesignator          go to state 110


state 158

   80 booleanTerm: booleanTerm TOKEN_OR_OP . booleanFactor

    TOKEN_IDENTIFIER     shift, and go to state 1
    TOKEN_LOGICAL_VALUE  shift, and go to state 77
    TOKEN_PLUS           shift, and go to state 78
    TOKEN_MINUS          shift, and go to state 79
    TOKEN_OPEN_BRACKET   shift, and go to state 113
    TOKEN_REAL_NUM       shift, and go to state 81
    TOKEN_INTEGER        shift, and go to state 3
    TOKEN_NOT_OP         shift, and go to state 82

    arrayIdentifier             go to state 41
    simpleArithmeticExpression  go to state 114
    term                        go to state 91
    factor                      go to state 92
    primary                     go to state 93
    unsignedNumber              go to state 94
    realNumber                  go to state 95
    integer                     go to state 115
    simpleVariable              go to state 42
    variable                    go to state 97
    subscriptedVariable         go to state 44
    identifier                  go to state 116
    booleanFactor               go to state 204
    booleanSecondary            go to state 104
    booleanPrimary              go to state 105
    logicalValue                go to state 106
    relation                    go to state 107
    varIdentifier               go to state 46
    procedureIdentifier         go to state 109
    functionDesignator          go to state 110


state 159

   82 booleanFactor: booleanFactor TOKEN_AND_OP . booleanSecondary

    TOKEN_IDENTIFIER     shift, and go to state 1
    TOKEN_LOGICAL_VALUE  shift, and go to state 77
    TOKEN_PLUS           shift, and go to state 78
    TOKEN_MINUS          shift, and go to state 79
    TOKEN_OPEN_BRACKET   shift, and go to state 113
    TOKEN_REAL_NUM       shift, and go to state 81
    TOKEN_INTEGER        shift, and go to state 3
    TOKEN_NOT_OP         shift, and go to state 82

    arrayIdentifier             go to state 41
    simpleArithmeticExpression  go to state 114
    term                        go to state 91
    factor                      go to state 92
    primary                     go to state 93
    unsignedNumber              go to state 94
    realNumber                  go to state 95
    integer                     go to state 115
    simpleVariable              go to state 42
    variable                    go to state 97
    subscriptedVariable         go to state 44
    identifier                  go to state 116
    booleanSecondary            go to state 205
    booleanPrimary              go to state 105
    logicalValue                go to state 106
    relation                    go to state 107
    varIdentifier               go to state 46
    procedureIdentifier         go to state 109
    functionDesignator          go to state 110


state 160

   44 simpleDesignationalExpression: TOKEN_OPEN_BRACKET . designationalExpression TOKEN_CLOSE_BRACKET

    TOKEN_IDENTIFIER    shift, and go to state 1
    TOKEN_OPEN_BRACKET  shift, and go to state 160
    TOKEN_INTEGER       shift, and go to state 3
    TOKEN_IF            shift, and go to state 35

    tlabel                         go to state 83
    label                          go to state 8
    switchIdentifier               go to state 85
    switchDesignator               go to state 86
    simpleDesignationalExpression  go to state 87
    designationalExpression        go to state 144
    integer                        go to state 12
    identifier                     go to state 162
    ifClause                       go to state 108


state 161

   46 designationalExpression: ifClause simpleDesignationalExpression . TOKEN_ELSE designationalExpression

    TOKEN_ELSE  shift, and go to state 206


state 162

    8 label: identifier .
   40 switchIdentifier: identifier .

    TOKEN_OPEN_CURLY_BRACKET  reduce using rule 40 (switchIdentifier)
    $default                  reduce using rule 8 (label)


state 163

  128 functionDesignator: procedureIdentifier actualParameterPart .

    $default  reduce using rule 128 (functionDesignator)


state 164

  117 forStatement: TOKEN_FOR variable TOKEN_ASSIGN . arithmeticExpression TOKEN_STEP arithmeticExpression TOKEN_UNTIL arithmeticExpression TOKEN_DO statement

    TOKEN_IDENTIFIER    shift, and go to state 1
    TOKEN_PLUS          shift, and go to state 78
    TOKEN_MINUS         shift, and go to state 79
    TOKEN_OPEN_BRACKET  shift, and go to state 141
    TOKEN_REAL_NUM      shift, and go to state 81
    TOKEN_INTEGER       shift, and go to state 3

    arrayIdentifier             go to state 41
    arithmeticExpression        go to state 207
    simpleArithmeticExpression  go to state 167
    term                        go to state 91
    factor                      go to state 92
    primary                     go to state 93
    unsignedNumber              go to state 94
    realNumber                  go to state 95
    integer                     go to state 115
    simpleVariable              go to state 42
    variable                    go to state 97
    subscriptedVariable         go to state 44
    identifier                  go to state 116
    varIdentifier               go to state 46
    procedureIdentifier         go to state 109
    functionDesignator          go to state 110


state 165

  106 ifClause: TOKEN_IF booleanExpression TOKEN_THEN .

    $default  reduce using rule 106 (ifClause)


state 166

   72 subscriptExpression: arithmeticExpression .

    $default  reduce using rule 72 (subscriptExpression)


state 167

   47 arithmeticExpression: simpleArithmeticExpression .
   51 simpleArithmeticExpression: simpleArithmeticExpression . TOKEN_PLUS term
   52                           | simpleArithmeticExpression . TOKEN_MINUS term

    TOKEN_PLUS   shift, and go to state 149
    TOKEN_MINUS  shift, and go to state 150

    $default  reduce using rule 47 (arithmeticExpression)


state 168

   69 subscriptedVariable: arrayIdentifier TOKEN_OPEN_SQUARE_BRACKET subscriptList . TOKEN_CLOSE_SQUARE_BRACKET
   71 subscriptList: subscriptList . TOKEN_COMMA subscriptExpression

    TOKEN_COMMA                 shift, and go to state 208
    TOKEN_CLOSE_SQUARE_BRACKET  shift, and go to state 209


state 169

   70 subscriptList: subscriptExpression .

    $default  reduce using rule 70 (subscriptList)


state 170

  115 assignmentStatement: variable TOKEN_ASSIGN arithmeticExpression .

    $default  reduce using rule 115 (assignmentStatement)


state 171

  116 assignmentStatement: variable TOKEN_ASSIGN booleanExpression .

    $default  reduce using rule 116 (assignmentStatement)


state 172

  102 conditionalStatement: ifStatement TOKEN_ELSE statement .

    $default  reduce using rule 102 (conditionalStatement)


state 173

  121 actualParameterPart: TOKEN_OPEN_BRACKET TOKEN_CLOSE_BRACKET .

    $default  reduce using rule 121 (actualParameterPart)


state 174

  125 actualParameter: expression .

    $default  reduce using rule 125 (actualParameter)


state 175

  122 actualParameterPart: TOKEN_OPEN_BRACKET actualParameterList . TOKEN_CLOSE_BRACKET
  124 actualParameterList: actualParameterList . parameterDelimiter actualParameter

    TOKEN_COMMA          shift, and go to state 210
    TOKEN_CLOSE_BRACKET  shift, and go to state 211

    parameterDelimiter  go to state 212


state 176

  123 actualParameterList: actualParameter .

    $default  reduce using rule 123 (actualParameterList)


state 177

   17 compoundTail: statement TOKEN_SEMICOLON compoundTail .

    $default  reduce using rule 17 (compoundTail)


state 178

  139 formalParameterPart: TOKEN_OPEN_BRACKET . $@4 formalParameterList TOKEN_CLOSE_BRACKET

    $default  reduce using rule 138 ($@4)

    $@4  go to state 213


state 179

  137 formalParameterPart: empty .

    $default  reduce using rule 137 (formalParameterPart)


state 180

  155 procedureHeading: procedureIdentifier @5 formalParameterPart . TOKEN_SEMICOLON $@6 valuePart specificationPart

    TOKEN_SEMICOLON  shift, and go to state 214


state 181

  156 procedureBody: TOKEN_BEGIN TOKEN_SEMICOLON . statement TOKEN_END

    TOKEN_PRINT       shift, and go to state 33
    TOKEN_IDENTIFIER  shift, and go to state 1
    TOKEN_BEGIN       shift, and go to state 2
    TOKEN_INTEGER     shift, and go to state 3
    TOKEN_FOR         shift, and go to state 34
    TOKEN_IF          shift, and go to state 35
    TOKEN_RETURN      shift, and go to state 36

    $default  reduce using rule 118 (empty)

    blockHead                 go to state 4
    unlabelledBlock           go to state 5
    block                     go to state 37
    tlabel                    go to state 38
    label                     go to state 8
    unlabelledCompound        go to state 10
    compoundStatement         go to state 39
    arrayIdentifier           go to state 41
    integer                   go to state 12
    simpleVariable            go to state 42
    variable                  go to state 43
    subscriptedVariable       go to state 44
    identifier                go to state 45
    varIdentifier             go to state 46
    unconditionalStatement    go to state 47
    conditionalStatement      go to state 48
    ifStatement               go to state 49
    ifClause                  go to state 50
    basicStatement            go to state 51
    unlabelledBasicStatement  go to state 52
    dummyStatement            go to state 53
    returnStatement           go to state 54
    assignmentStatement       go to state 55
    forStatement              go to state 56
    empty                     go to state 57
    procedureStatement        go to state 58
    procedureIdentifier       go to state 59
    statement                 go to state 215


state 182

   24 switchList: switchList . TOKEN_COMMA designationalExpression
   25 switchDeclaration: TOKEN_SWITCH switchIdentifier TOKEN_ASSIGN switchList .

    TOKEN_COMMA  shift, and go to state 216

    $default  reduce using rule 25 (switchDeclaration)


state 183

   23 switchList: designationalExpression .

    $default  reduce using rule 23 (switchList)


state 184

   32 arraySegment: arrayIdentifier TOKEN_COMMA arraySegment .

    $default  reduce using rule 32 (arraySegment)


state 185

   27 boundPair: lowerBound . TOKEN_COLON upperBound

    TOKEN_COLON  shift, and go to state 217


state 186

   28 boundPairList: boundPair .

    $default  reduce using rule 28 (boundPairList)


state 187

   29 boundPairList: boundPairList . TOKEN_COMMA boundPair
   31 arraySegment: arrayIdentifier TOKEN_OPEN_SQUARE_BRACKET boundPairList . TOKEN_CLOSE_SQUARE_BRACKET

    TOKEN_COMMA                 shift, and go to state 218
    TOKEN_CLOSE_SQUARE_BRACKET  shift, and go to state 219


state 188

   22 lowerBound: arithmeticExpression .

    $default  reduce using rule 22 (lowerBound)


state 189

   34 arrayList: arrayList TOKEN_COMMA arraySegment .

    $default  reduce using rule 34 (arrayList)


state 190

  158 procedureDeclaration: type TOKEN_PROCEDURE procedureHeading procedureBody .

    $default  reduce using rule 158 (procedureDeclaration)


state 191

   92 listType: listType TOKEN_COMMA varIdentifier .

    $default  reduce using rule 92 (listType)


state 192

   44 simpleDesignationalExpression: TOKEN_OPEN_BRACKET designationalExpression TOKEN_CLOSE_BRACKET .

    $default  reduce using rule 44 (simpleDesignationalExpression)


state 193

   61 primary: TOKEN_OPEN_BRACKET arithmeticExpression TOKEN_CLOSE_BRACKET .

    $default  reduce using rule 61 (primary)


state 194

   87 booleanPrimary: TOKEN_OPEN_BRACKET booleanExpression TOKEN_CLOSE_BRACKET .

    $default  reduce using rule 87 (booleanPrimary)


state 195

   41 switchDesignator: switchIdentifier TOKEN_OPEN_CURLY_BRACKET subscriptExpression . TOKEN_CLOSE_CURLY_BRACKET

    TOKEN_CLOSE_CURLY_BRACKET  shift, and go to state 220


state 196

   51 simpleArithmeticExpression: simpleArithmeticExpression TOKEN_PLUS term .
   54 term: term . TOKEN_MULTIPLY factor
   55     | term . TOKEN_DIVIDE factor

    TOKEN_DIVIDE    shift, and go to state 153
    TOKEN_MULTIPLY  shift, and go to state 154

    $default  reduce using rule 51 (simpleArithmeticExpression)


state 197

   52 simpleArithmeticExpression: simpleArithmeticExpression TOKEN_MINUS term .
   54 term: term . TOKEN_MULTIPLY factor
   55     | term . TOKEN_DIVIDE factor

    TOKEN_DIVIDE    shift, and go to state 153
    TOKEN_MULTIPLY  shift, and go to state 154

    $default  reduce using rule 52 (simpleArithmeticExpression)


state 198

   51 simpleArithmeticExpression: simpleArithmeticExpression . TOKEN_PLUS term
   52                           | simpleArithmeticExpression . TOKEN_MINUS term
   89 relation: simpleArithmeticExpression relationalOperator simpleArithmeticExpression .

    TOKEN_PLUS   shift, and go to state 149
    TOKEN_MINUS  shift, and go to state 150

    $default  reduce using rule 89 (relation)


state 199

   55 term: term TOKEN_DIVIDE factor .
   57 factor: factor . TOKEN_POWER primary

    TOKEN_POWER  shift, and go to state 155

    $default  reduce using rule 55 (term)


state 200

   54 term: term TOKEN_MULTIPLY factor .
   57 factor: factor . TOKEN_POWER primary

    TOKEN_POWER  shift, and go to state 155

    $default  reduce using rule 54 (term)


state 201

   57 factor: factor TOKEN_POWER primary .

    $default  reduce using rule 57 (factor)


state 202

   76 simpleBoolean: simpleBoolean TOKEN_EQUIV implication .
   78 implication: implication . TOKEN_IMPLY booleanTerm

    TOKEN_IMPLY  shift, and go to state 157

    $default  reduce using rule 76 (simpleBoolean)


state 203

   78 implication: implication TOKEN_IMPLY booleanTerm .
   80 booleanTerm: booleanTerm . TOKEN_OR_OP booleanFactor

    TOKEN_OR_OP  shift, and go to state 158

    $default  reduce using rule 78 (implication)


state 204

   80 booleanTerm: booleanTerm TOKEN_OR_OP booleanFactor .
   82 booleanFactor: booleanFactor . TOKEN_AND_OP booleanSecondary

    TOKEN_AND_OP  shift, and go to state 159

    $default  reduce using rule 80 (booleanTerm)


state 205

   82 booleanFactor: booleanFactor TOKEN_AND_OP booleanSecondary .

    $default  reduce using rule 82 (booleanFactor)


state 206

   46 designationalExpression: ifClause simpleDesignationalExpression TOKEN_ELSE . designationalExpression

    TOKEN_IDENTIFIER    shift, and go to state 1
    TOKEN_OPEN_BRACKET  shift, and go to state 160
    TOKEN_INTEGER       shift, and go to state 3
    TOKEN_IF            shift, and go to state 35

    tlabel                         go to state 83
    label                          go to state 8
    switchIdentifier               go to state 85
    switchDesignator               go to state 86
    simpleDesignationalExpression  go to state 87
    designationalExpression        go to state 221
    integer                        go to state 12
    identifier                     go to state 162
    ifClause                       go to state 108


state 207

  117 forStatement: TOKEN_FOR variable TOKEN_ASSIGN arithmeticExpression . TOKEN_STEP arithmeticExpression TOKEN_UNTIL arithmeticExpression TOKEN_DO statement

    TOKEN_STEP  shift, and go to state 222


state 208

   71 subscriptList: subscriptList TOKEN_COMMA . subscriptExpression

    TOKEN_IDENTIFIER    shift, and go to state 1
    TOKEN_PLUS          shift, and go to state 78
    TOKEN_MINUS         shift, and go to state 79
    TOKEN_OPEN_BRACKET  shift, and go to state 141
    TOKEN_REAL_NUM      shift, and go to state 81
    TOKEN_INTEGER       shift, and go to state 3

    arrayIdentifier             go to state 41
    arithmeticExpression        go to state 166
    simpleArithmeticExpression  go to state 167
    term                        go to state 91
    factor                      go to state 92
    primary                     go to state 93
    unsignedNumber              go to state 94
    realNumber                  go to state 95
    integer                     go to state 115
    simpleVariable              go to state 42
    variable                    go to state 97
    subscriptedVariable         go to state 44
    subscriptExpression         go to state 223
    identifier                  go to state 116
    varIdentifier               go to state 46
    procedureIdentifier         go to state 109
    functionDesignator          go to state 110


state 209

   69 subscriptedVariable: arrayIdentifier TOKEN_OPEN_SQUARE_BRACKET subscriptList TOKEN_CLOSE_SQUARE_BRACKET .

    $default  reduce using rule 69 (subscriptedVariable)


state 210

  126 parameterDelimiter: TOKEN_COMMA .

    $default  reduce using rule 126 (parameterDelimiter)


state 211

  122 actualParameterPart: TOKEN_OPEN_BRACKET actualParameterList TOKEN_CLOSE_BRACKET .
  127 parameterDelimiter: TOKEN_CLOSE_BRACKET . identifier TOKEN_COLON TOKEN_OPEN_BRACKET

    TOKEN_IDENTIFIER  shift, and go to state 1

    $default  reduce using rule 122 (actualParameterPart)

    identifier  go to state 224


state 212

  124 actualParameterList: actualParameterList parameterDelimiter . actualParameter

    TOKEN_IDENTIFIER     shift, and go to state 1
    TOKEN_LOGICAL_VALUE  shift, and go to state 77
    TOKEN_PLUS           shift, and go to state 78
    TOKEN_MINUS          shift, and go to state 79
    TOKEN_OPEN_BRACKET   shift, and go to state 80
    TOKEN_REAL_NUM       shift, and go to state 81
    TOKEN_INTEGER        shift, and go to state 3
    TOKEN_NOT_OP         shift, and go to state 82
    TOKEN_IF             shift, and go to state 35

    tlabel                         go to state 83
    label                          go to state 8
    arrayIdentifier                go to state 41
    expression                     go to state 174
    switchIdentifier               go to state 85
    switchDesignator               go to state 86
    simpleDesignationalExpression  go to state 87
    designationalExpression        go to state 88
    arithmeticExpression           go to state 89
    simpleArithmeticExpression     go to state 90
    term                           go to state 91
    factor                         go to state 92
    primary                        go to state 93
    unsignedNumber                 go to state 94
    realNumber                     go to state 95
    integer                        go to state 96
    simpleVariable                 go to state 42
    variable                       go to state 97
    subscriptedVariable            go to state 44
    identifier                     go to state 98
    booleanExpression              go to state 99
    simpleBoolean                  go to state 100
    implication                    go to state 101
    booleanTerm                    go to state 102
    booleanFactor                  go to state 103
    booleanSecondary               go to state 104
    booleanPrimary                 go to state 105
    logicalValue                   go to state 106
    relation                       go to state 107
    varIdentifier                  go to state 46
    ifClause                       go to state 108
    procedureIdentifier            go to state 109
    actualParameter                go to state 225
    functionDesignator             go to state 110


state 213

  139 formalParameterPart: TOKEN_OPEN_BRACKET $@4 . formalParameterList TOKEN_CLOSE_BRACKET

    TOKEN_IDENTIFIER  shift, and go to state 1

    identifier           go to state 226
    formalParameter      go to state 227
    formalParameterList  go to state 228


state 214

  155 procedureHeading: procedureIdentifier @5 formalParameterPart TOKEN_SEMICOLON . $@6 valuePart specificationPart

    $default  reduce using rule 154 ($@6)

    $@6  go to state 229


state 215

  156 procedureBody: TOKEN_BEGIN TOKEN_SEMICOLON statement . TOKEN_END

    TOKEN_END  shift, and go to state 230


state 216

   24 switchList: switchList TOKEN_COMMA . designationalExpression

    TOKEN_IDENTIFIER    shift, and go to state 1
    TOKEN_OPEN_BRACKET  shift, and go to state 160
    TOKEN_INTEGER       shift, and go to state 3
    TOKEN_IF            shift, and go to state 35

    tlabel                         go to state 83
    label                          go to state 8
    switchIdentifier               go to state 85
    switchDesignator               go to state 86
    simpleDesignationalExpression  go to state 87
    designationalExpression        go to state 231
    integer                        go to state 12
    identifier                     go to state 162
    ifClause                       go to state 108


state 217

   27 boundPair: lowerBound TOKEN_COLON . upperBound

    TOKEN_IDENTIFIER    shift, and go to state 1
    TOKEN_PLUS          shift, and go to state 78
    TOKEN_MINUS         shift, and go to state 79
    TOKEN_OPEN_BRACKET  shift, and go to state 141
    TOKEN_REAL_NUM      shift, and go to state 81
    TOKEN_INTEGER       shift, and go to state 3

    upperBound                  go to state 232
    arrayIdentifier             go to state 41
    arithmeticExpression        go to state 233
    simpleArithmeticExpression  go to state 167
    term                        go to state 91
    factor                      go to state 92
    primary                     go to state 93
    unsignedNumber              go to state 94
    realNumber                  go to state 95
    integer                     go to state 115
    simpleVariable              go to state 42
    variable                    go to state 97
    subscriptedVariable         go to state 44
    identifier                  go to state 116
    varIdentifier               go to state 46
    procedureIdentifier         go to state 109
    functionDesignator          go to state 110


state 218

   29 boundPairList: boundPairList TOKEN_COMMA . boundPair

    TOKEN_IDENTIFIER    shift, and go to state 1
    TOKEN_PLUS          shift, and go to state 78
    TOKEN_MINUS         shift, and go to state 79
    TOKEN_OPEN_BRACKET  shift, and go to state 141
    TOKEN_REAL_NUM      shift, and go to state 81
    TOKEN_INTEGER       shift, and go to state 3

    lowerBound                  go to state 185
    boundPair                   go to state 234
    arrayIdentifier             go to state 41
    arithmeticExpression        go to state 188
    simpleArithmeticExpression  go to state 167
    term                        go to state 91
    factor                      go to state 92
    primary                     go to state 93
    unsignedNumber              go to state 94
    realNumber                  go to state 95
    integer                     go to state 115
    simpleVariable              go to state 42
    variable                    go to state 97
    subscriptedVariable         go to state 44
    identifier                  go to state 116
    varIdentifier               go to state 46
    procedureIdentifier         go to state 109
    functionDesignator          go to state 110


state 219

   31 arraySegment: arrayIdentifier TOKEN_OPEN_SQUARE_BRACKET boundPairList TOKEN_CLOSE_SQUARE_BRACKET .

    $default  reduce using rule 31 (arraySegment)


state 220

   41 switchDesignator: switchIdentifier TOKEN_OPEN_CURLY_BRACKET subscriptExpression TOKEN_CLOSE_CURLY_BRACKET .

    $default  reduce using rule 41 (switchDesignator)


state 221

   46 designationalExpression: ifClause simpleDesignationalExpression TOKEN_ELSE designationalExpression .

    $default  reduce using rule 46 (designationalExpression)


state 222

  117 forStatement: TOKEN_FOR variable TOKEN_ASSIGN arithmeticExpression TOKEN_STEP . arithmeticExpression TOKEN_UNTIL arithmeticExpression TOKEN_DO statement

    TOKEN_IDENTIFIER    shift, and go to state 1
    TOKEN_PLUS          shift, and go to state 78
    TOKEN_MINUS         shift, and go to state 79
    TOKEN_OPEN_BRACKET  shift, and go to state 141
    TOKEN_REAL_NUM      shift, and go to state 81
    TOKEN_INTEGER       shift, and go to state 3

    arrayIdentifier             go to state 41
    arithmeticExpression        go to state 235
    simpleArithmeticExpression  go to state 167
    term                        go to state 91
    factor                      go to state 92
    primary                     go to state 93
    unsignedNumber              go to state 94
    realNumber                  go to state 95
    integer                     go to state 115
    simpleVariable              go to state 42
    variable                    go to state 97
    subscriptedVariable         go to state 44
    identifier                  go to state 116
    varIdentifier               go to state 46
    procedureIdentifier         go to state 109
    functionDesignator          go to state 110


state 223

   71 subscriptList: subscriptList TOKEN_COMMA subscriptExpression .

    $default  reduce using rule 71 (subscriptList)


state 224

  127 parameterDelimiter: TOKEN_CLOSE_BRACKET identifier . TOKEN_COLON TOKEN_OPEN_BRACKET

    TOKEN_COLON  shift, and go to state 236


state 225

  124 actualParameterList: actualParameterList parameterDelimiter actualParameter .

    $default  reduce using rule 124 (actualParameterList)


state 226

  133 formalParameter: identifier .

    $default  reduce using rule 133 (formalParameter)


state 227

  134 formalParameterList: formalParameter .

    $default  reduce using rule 134 (formalParameterList)


state 228

  136 formalParameterList: formalParameterList . parameterDelimiter $@3 formalParameter
  139 formalParameterPart: TOKEN_OPEN_BRACKET $@4 formalParameterList . TOKEN_CLOSE_BRACKET

    TOKEN_COMMA          shift, and go to state 210
    TOKEN_CLOSE_BRACKET  shift, and go to state 237

    parameterDelimiter  go to state 238


state 229

  155 procedureHeading: procedureIdentifier @5 formalParameterPart TOKEN_SEMICOLON $@6 . valuePart specificationPart

    TOKEN_VALUE  shift, and go to state 239

    $default  reduce using rule 118 (empty)

    empty      go to state 240
    valuePart  go to state 241


state 230

  156 procedureBody: TOKEN_BEGIN TOKEN_SEMICOLON statement TOKEN_END .

    $default  reduce using rule 156 (procedureBody)


state 231

   24 switchList: switchList TOKEN_COMMA designationalExpression .

    $default  reduce using rule 24 (switchList)


state 232

   27 boundPair: lowerBound TOKEN_COLON upperBound .

    $default  reduce using rule 27 (boundPair)


state 233

   26 upperBound: arithmeticExpression .

    $default  reduce using rule 26 (upperBound)


state 234

   29 boundPairList: boundPairList TOKEN_COMMA boundPair .

    $default  reduce using rule 29 (boundPairList)


state 235

  117 forStatement: TOKEN_FOR variable TOKEN_ASSIGN arithmeticExpression TOKEN_STEP arithmeticExpression . TOKEN_UNTIL arithmeticExpression TOKEN_DO statement

    TOKEN_UNTIL  shift, and go to state 242


state 236

  127 parameterDelimiter: TOKEN_CLOSE_BRACKET identifier TOKEN_COLON . TOKEN_OPEN_BRACKET

    TOKEN_OPEN_BRACKET  shift, and go to state 243


state 237

  127 parameterDelimiter: TOKEN_CLOSE_BRACKET . identifier TOKEN_COLON TOKEN_OPEN_BRACKET
  139 formalParameterPart: TOKEN_OPEN_BRACKET $@4 formalParameterList TOKEN_CLOSE_BRACKET .

    TOKEN_IDENTIFIER  shift, and go to state 1

    $default  reduce using rule 139 (formalParameterPart)

    identifier  go to state 224


state 238

  136 formalParameterList: formalParameterList parameterDelimiter . $@3 formalParameter

    $default  reduce using rule 135 ($@3)

    $@3  go to state 244


state 239

  142 valuePart: TOKEN_VALUE . identifierList TOKEN_SEMICOLON

    TOKEN_IDENTIFIER  shift, and go to state 1

    identifier      go to state 245
    identifierList  go to state 246


state 240

  143 valuePart: empty .

    $default  reduce using rule 143 (valuePart)


state 241

  155 procedureHeading: procedureIdentifier @5 formalParameterPart TOKEN_SEMICOLON $@6 valuePart . specificationPart

    TOKEN_SWITCH        shift, and go to state 247
    TOKEN_TYPE_INTEGER  shift, and go to state 23
    TOKEN_TYPE_REAL     shift, and go to state 24
    TOKEN_TYPE_BOOLEAN  shift, and go to state 25
    TOKEN_TYPE_LABEL    shift, and go to state 248

    $default  reduce using rule 118 (empty)

    type                         go to state 249
    empty                        go to state 250
    specifier                    go to state 251
    specificationPart            go to state 252
    specificationIdentifierList  go to state 253


state 242

  117 forStatement: TOKEN_FOR variable TOKEN_ASSIGN arithmeticExpression TOKEN_STEP arithmeticExpression TOKEN_UNTIL . arithmeticExpression TOKEN_DO statement

    TOKEN_IDENTIFIER    shift, and go to state 1
    TOKEN_PLUS          shift, and go to state 78
    TOKEN_MINUS         shift, and go to state 79
    TOKEN_OPEN_BRACKET  shift, and go to state 141
    TOKEN_REAL_NUM      shift, and go to state 81
    TOKEN_INTEGER       shift, and go to state 3

    arrayIdentifier             go to state 41
    arithmeticExpression        go to state 254
    simpleArithmeticExpression  go to state 167
    term                        go to state 91
    factor                      go to state 92
    primary                     go to state 93
    unsignedNumber              go to state 94
    realNumber                  go to state 95
    integer                     go to state 115
    simpleVariable              go to state 42
    variable                    go to state 97
    subscriptedVariable         go to state 44
    identifier                  go to state 116
    varIdentifier               go to state 46
    procedureIdentifier         go to state 109
    functionDesignator          go to state 110


state 243

  127 parameterDelimiter: TOKEN_CLOSE_BRACKET identifier TOKEN_COLON TOKEN_OPEN_BRACKET .

    $default  reduce using rule 127 (parameterDelimiter)


state 244

  136 formalParameterList: formalParameterList parameterDelimiter $@3 . formalParameter

    TOKEN_IDENTIFIER  shift, and go to state 1

    identifier       go to state 226
    formalParameter  go to state 255


state 245

  140 identifierList: identifier .

    $default  reduce using rule 140 (identifierList)


state 246

  141 identifierList: identifierList . TOKEN_COMMA identifier
  142 valuePart: TOKEN_VALUE identifierList . TOKEN_SEMICOLON

    TOKEN_COMMA      shift, and go to state 256
    TOKEN_SEMICOLON  shift, and go to state 257


state 247

  147 specifier: TOKEN_SWITCH .

    $default  reduce using rule 147 (specifier)


state 248

  146 specifier: TOKEN_TYPE_LABEL .

    $default  reduce using rule 146 (specifier)


state 249

  144 specifier: type .
  145          | type . TOKEN_ARRAY
  148          | type . TOKEN_PROCEDURE

    TOKEN_PROCEDURE  shift, and go to state 258
    TOKEN_ARRAY      shift, and go to state 259

    $default  reduce using rule 144 (specifier)


state 250

  149 specificationPart: empty .

    $default  reduce using rule 149 (specificationPart)


state 251

  151 specificationIdentifierList: specifier . identifierList TOKEN_SEMICOLON

    TOKEN_IDENTIFIER  shift, and go to state 1

    identifier      go to state 245
    identifierList  go to state 260


state 252

  155 procedureHeading: procedureIdentifier @5 formalParameterPart TOKEN_SEMICOLON $@6 valuePart specificationPart .

    $default  reduce using rule 155 (procedureHeading)


state 253

  150 specificationPart: specificationIdentifierList .
  152 specificationIdentifierList: specificationIdentifierList . specifier identifierList TOKEN_SEMICOLON

    TOKEN_SWITCH        shift, and go to state 247
    TOKEN_TYPE_INTEGER  shift, and go to state 23
    TOKEN_TYPE_REAL     shift, and go to state 24
    TOKEN_TYPE_BOOLEAN  shift, and go to state 25
    TOKEN_TYPE_LABEL    shift, and go to state 248

    $default  reduce using rule 150 (specificationPart)

    type       go to state 249
    specifier  go to state 261


state 254

  117 forStatement: TOKEN_FOR variable TOKEN_ASSIGN arithmeticExpression TOKEN_STEP arithmeticExpression TOKEN_UNTIL arithmeticExpression . TOKEN_DO statement

    TOKEN_DO  shift, and go to state 262


state 255

  136 formalParameterList: formalParameterList parameterDelimiter $@3 formalParameter .

    $default  reduce using rule 136 (formalParameterList)


state 256

  141 identifierList: identifierList TOKEN_COMMA . identifier

    TOKEN_IDENTIFIER  shift, and go to state 1

    identifier  go to state 263


state 257

  142 valuePart: TOKEN_VALUE identifierList TOKEN_SEMICOLON .

    $default  reduce using rule 142 (valuePart)


state 258

  148 specifier: type TOKEN_PROCEDURE .

    $default  reduce using rule 148 (specifier)


state 259

  145 specifier: type TOKEN_ARRAY .

    $default  reduce using rule 145 (specifier)


state 260

  141 identifierList: identifierList . TOKEN_COMMA identifier
  151 specificationIdentifierList: specifier identifierList . TOKEN_SEMICOLON

    TOKEN_COMMA      shift, and go to state 256
    TOKEN_SEMICOLON  shift, and go to state 264


state 261

  152 specificationIdentifierList: specificationIdentifierList specifier . identifierList TOKEN_SEMICOLON

    TOKEN_IDENTIFIER  shift, and go to state 1

    identifier      go to state 245
    identifierList  go to state 265


state 262

  117 forStatement: TOKEN_FOR variable TOKEN_ASSIGN arithmeticExpression TOKEN_STEP arithmeticExpression TOKEN_UNTIL arithmeticExpression TOKEN_DO . statement

    TOKEN_PRINT       shift, and go to state 33
    TOKEN_IDENTIFIER  shift, and go to state 1
    TOKEN_BEGIN       shift, and go to state 2
    TOKEN_INTEGER     shift, and go to state 3
    TOKEN_FOR         shift, and go to state 34
    TOKEN_IF          shift, and go to state 35
    TOKEN_RETURN      shift, and go to state 36

    $default  reduce using rule 118 (empty)

    blockHead                 go to state 4
    unlabelledBlock           go to state 5
    block                     go to state 37
    tlabel                    go to state 38
    label                     go to state 8
    unlabelledCompound        go to state 10
    compoundStatement         go to state 39
    arrayIdentifier           go to state 41
    integer                   go to state 12
    simpleVariable            go to state 42
    variable                  go to state 43
    subscriptedVariable       go to state 44
    identifier                go to state 45
    varIdentifier             go to state 46
    unconditionalStatement    go to state 47
    conditionalStatement      go to state 48
    ifStatement               go to state 49
    ifClause                  go to state 50
    basicStatement            go to state 51
    unlabelledBasicStatement  go to state 52
    dummyStatement            go to state 53
    returnStatement           go to state 54
    assignmentStatement       go to state 55
    forStatement              go to state 56
    empty                     go to state 57
    procedureStatement        go to state 58
    procedureIdentifier       go to state 59
    statement                 go to state 266


state 263

  141 identifierList: identifierList TOKEN_COMMA identifier .

    $default  reduce using rule 141 (identifierList)


state 264

  151 specificationIdentifierList: specifier identifierList TOKEN_SEMICOLON .

    $default  reduce using rule 151 (specificationIdentifierList)


state 265

  141 identifierList: identifierList . TOKEN_COMMA identifier
  152 specificationIdentifierList: specificationIdentifierList specifier identifierList . TOKEN_SEMICOLON

    TOKEN_COMMA      shift, and go to state 256
    TOKEN_SEMICOLON  shift, and go to state 267


state 266

  117 forStatement: TOKEN_FOR variable TOKEN_ASSIGN arithmeticExpression TOKEN_STEP arithmeticExpression TOKEN_UNTIL arithmeticExpression TOKEN_DO statement .

    $default  reduce using rule 117 (forStatement)


state 267

  152 specificationIdentifierList: specificationIdentifierList specifier identifierList TOKEN_SEMICOLON .

    $default  reduce using rule 152 (specificationIdentifierList)
