Terminals unused in grammar

   TOKEN_OPERATOR
   TOKEN_OR
   TOKEN_UNDERSCORE
   TOKEN_SPECIFIER
   TOKEN_LIBRARY
   TOKEN_BRACKET
   TOKEN_CONTINUE
   TOKEN_LESS_EQUAL
   TOKEN_GREATER
   TOKEN_GREATER_EQUAL
   TOKEN_EQUAL
   TOKEN_LESS
   TOKEN_NOTEQUAL
   TOKEN_WHILE
   TOKEN_BOOLEAN
   TOKEN_TYPE_OWN
   TOKEN_TYPE_ARRAY
   TOKEN_TYPE_SWITCH
   TOKEN_TYPE_PROCEDURE
   TOKEN_TYPE_STRING
   TOKEN_TYPE_VALUE
   TOKEN_LTRSTRING
   TOKEN_ASSIGN_IDENTIFIER
   TOKEN_LABEL_IDENTIFIER
   TOKEN_BOOL_IDENTIFIER
   TOKEN_NOT_EQUAL


Grammar

    0 $accept: program $end

    1 blockHead: TOKEN_BEGIN declaration
    2          | blockHead TOKEN_SEMICOLON declaration

    3 unlabelledBlock: blockHead TOKEN_SEMICOLON compoundTail

    4 block: unlabelledBlock
    5      | tlabel block

    6 tlabel: label TOKEN_COLON

    7 label: identifier
    8      | integer

    9 program: compoundStatement
   10        | block

   11 unlabelledCompound: TOKEN_BEGIN compoundTail

   12 compoundStatement: unlabelledCompound
   13                  | tlabel compoundStatement

   14 compoundTail: statement TOKEN_END
   15             | statement TOKEN_SEMICOLON compoundTail

   16 declaration: typeDeclaration
   17            | arrayDeclaration
   18            | switchDeclaration
   19            | procedureDeclaration

   20 lowerBound: arithmeticExpression

   21 upperBound: arithmeticExpression

   22 boundPair: lowerBound TOKEN_COLON upperBound

   23 boundPairList: boundPair
   24              | boundPairList TOKEN_COMMA boundPair

   25 arrayIdentifier: identifier

   26 arraySegment: arrayIdentifier TOKEN_OPEN_SQUARE_BRACKET boundPairList TOKEN_CLOSE_SQUARE_BRACKET
   27             | arrayIdentifier TOKEN_COMMA arraySegment

   28 arrayList: arraySegment
   29          | arrayList TOKEN_COMMA arraySegment

   30 arrayDeclaration: TOKEN_ARRAY arrayList
   31                 | type TOKEN_ARRAY arrayList

   32 expression: arithmeticExpression
   33           | booleanExpression
   34           | designationalExpression

   35 arithmeticExpression: simpleArithmeticExpression

   36 simpleArithmeticExpression: term
   37                           | TOKEN_PLUS term
   38                           | TOKEN_MINUS term
   39                           | simpleArithmeticExpression TOKEN_PLUS term
   40                           | simpleArithmeticExpression TOKEN_MINUS term

   41 term: factor
   42     | term TOKEN_MULTIPLY factor
   43     | term TOKEN_DIVIDE factor

   44 factor: primary
   45       | factor TOKEN_POWER primary

   46 primary: unsignedNumber
   47        | functionDesignator
   48        | variable
   49        | TOKEN_OPEN_BRACKET arithmeticExpression TOKEN_CLOSE_BRACKET

   50 unsignedNumber: realNumber
   51               | integer

   52 realNumber: TOKEN_REAL_NUM

   53 integer: TOKEN_INTEGER

   54 simpleVariable: varIdentifier

   55 variable: simpleVariable
   56         | subscriptedVariable

   57 subscriptedVariable: arrayIdentifier TOKEN_OPEN_SQUARE_BRACKET subscriptList TOKEN_CLOSE_SQUARE_BRACKET

   58 subscriptList: subscriptExpression
   59              | subscriptList TOKEN_COMMA subscriptExpression

   60 subscriptExpression: arithmeticExpression

   61 identifier: TOKEN_IDENTIFIER

   62 booleanExpression: simpleBoolean

   63 simpleBoolean: implication
   64              | simpleBoolean TOKEN_EQUIV implication

   65 implication: booleanTerm
   66            | implication TOKEN_IMPLY booleanTerm

   67 booleanTerm: booleanFactor
   68            | booleanTerm TOKEN_OR_OP booleanFactor

   69 booleanFactor: booleanSecondary
   70              | booleanFactor TOKEN_AND_OP booleanSecondary

   71 booleanSecondary: booleanPrimary
   72                 | TOKEN_NOT_OP booleanPrimary

   73 booleanPrimary: logicalValue
   74               | relation
   75               | TOKEN_OPEN_BRACKET booleanExpression TOKEN_CLOSE_BRACKET

   76 logicalValue: TOKEN_LOGICAL_VALUE

   77 relation: simpleArithmeticExpression relationalOperator simpleArithmeticExpression

   78 relationalOperator: TOKEN_REL_OP

   79 listType: varIdentifier
   80         | listType TOKEN_COMMA varIdentifier

   81 type: TOKEN_TYPE_REAL
   82     | TOKEN_TYPE_INTEGER
   83     | TOKEN_TYPE_BOOLEAN

   84 typeDeclaration: type listType

   85 varIdentifier: identifier

   86 unconditionalStatement: basicStatement
   87                       | compoundStatement
   88                       | block

   89 conditionalStatement: ifStatement
   90                     | ifStatement TOKEN_ELSE statement
   91                     | ifClause forStatement
   92                     | tlabel conditionalStatement

   93 ifStatement: ifClause unconditionalStatement

   94 ifClause: TOKEN_IF booleanExpression TOKEN_THEN

   95 basicStatement: unlabelledBasicStatement
   96               | tlabel basicStatement

   97 unlabelledBasicStatement: assignmentStatement
   98                         | dummyStatement
   99                         | procedureStatement
  100                         | returnStatement
  101                         | gotoStatement

  102 dummyStatement: empty

  103 returnStatement: TOKEN_RETURN expression

  104 assignmentStatement: variable TOKEN_ASSIGN arithmeticExpression
  105                    | variable TOKEN_ASSIGN booleanExpression

  106 forStatement: TOKEN_FOR variable TOKEN_ASSIGN arithmeticExpression TOKEN_STEP arithmeticExpression TOKEN_UNTIL arithmeticExpression TOKEN_DO statement

  107 empty: /* empty */

  108 procedureStatement: procedureIdentifier actualParameterPart

  109 procedureIdentifier: identifier

  110 actualParameterPart: TOKEN_OPEN_BRACKET TOKEN_CLOSE_BRACKET
  111                    | TOKEN_OPEN_BRACKET actualParameterList TOKEN_CLOSE_BRACKET

  112 actualParameterList: actualParameter
  113                    | actualParameterList parameterDelimiter actualParameter

  114 actualParameter: expression

  115 parameterDelimiter: TOKEN_COMMA
  116                   | TOKEN_CLOSE_BRACKET identifier TOKEN_COLON TOKEN_OPEN_BRACKET

  117 functionDesignator: procedureIdentifier actualParameterPart

  118 statement: unconditionalStatement
  119          | conditionalStatement
  120          | forStatement
  121          | TOKEN_PRINT expression

  122 formalParameter: identifier

  123 formalParameterList: formalParameter
  124                    | formalParameterList parameterDelimiter formalParameter

  125 formalParameterPart: empty

  126 $@1: /* empty */

  127 formalParameterPart: TOKEN_OPEN_BRACKET $@1 formalParameterList TOKEN_CLOSE_BRACKET

  128 identifierList: identifier
  129               | identifierList TOKEN_COMMA identifier

  130 valuePart: TOKEN_VALUE identifierList TOKEN_SEMICOLON
  131          | empty

  132 specifier: type
  133          | type TOKEN_ARRAY
  134          | TOKEN_TYPE_LABEL
  135          | TOKEN_SWITCH
  136          | type TOKEN_PROCEDURE

  137 specificationPart: empty
  138                  | specificationIdentifierList

  139 specificationIdentifierList: specifier identifierList TOKEN_SEMICOLON
  140                            | specificationIdentifierList specifier identifierList TOKEN_SEMICOLON

  141 @2: /* empty */

  142 $@3: /* empty */

  143 procedureHeading: procedureIdentifier @2 formalParameterPart TOKEN_SEMICOLON $@3 valuePart specificationPart

  144 procedureBody: statement

  145 procedureDeclaration: TOKEN_PROCEDURE procedureHeading procedureBody
  146                     | type TOKEN_PROCEDURE procedureHeading procedureBody

  147 gotoStatement: TOKEN_GOTO designationalExpression

  148 switchDeclaration: TOKEN_SWITCH switchIdentifier TOKEN_ASSIGN switchList

  149 switchList: designationalExpression
  150           | switchList TOKEN_COMMA designationalExpression

  151 switchIdentifier: identifier

  152 designationalExpression: simpleDesignationalExpression
  153                        | ifClause simpleDesignationalExpression TOKEN_ELSE designationalExpression

  154 simpleDesignationalExpression: TOKEN_COLON label
  155                              | switchDesignator
  156                              | TOKEN_OPEN_BRACKET designationalExpression TOKEN_CLOSE_BRACKET

  157 switchDesignator: switchIdentifier TOKEN_OPEN_CURLY_BRACKET subscriptExpression TOKEN_CLOSE_CURLY_BRACKET


Terminals, with rules where they appear

$end (0) 0
error (256)
TOKEN_PRINT (258) 121
TOKEN_IDENTIFIER (259) 61
TOKEN_BEGIN (260) 1 11
TOKEN_END (261) 14
TOKEN_LOGICAL_VALUE (262) 76
TOKEN_OPERATOR (263)
TOKEN_OR (264)
TOKEN_PROCEDURE (265) 136 145 146
TOKEN_PLUS (266) 37 39
TOKEN_MINUS (267) 38 40
TOKEN_DIVIDE (268) 43
TOKEN_POWER (269) 45
TOKEN_MULTIPLY (270) 42
TOKEN_COMMA (271) 24 27 29 59 80 115 129 150
TOKEN_UNDERSCORE (272)
TOKEN_SPECIFIER (273)
TOKEN_LIBRARY (274)
TOKEN_BRACKET (275)
TOKEN_OPEN_BRACKET (276) 49 75 110 111 116 127 156
TOKEN_CLOSE_BRACKET (277) 49 75 110 111 116 127 156
TOKEN_OPEN_SQUARE_BRACKET (278) 26 57
TOKEN_CLOSE_SQUARE_BRACKET (279) 26 57
TOKEN_OPEN_CURLY_BRACKET (280) 157
TOKEN_CLOSE_CURLY_BRACKET (281) 157
TOKEN_CONTINUE (282)
TOKEN_REAL_NUM (283) 52
TOKEN_INTEGER (284) 53
TOKEN_COLON (285) 6 22 116 154
TOKEN_REL_OP (286) 78
TOKEN_LESS_EQUAL (287)
TOKEN_GREATER (288)
TOKEN_GREATER_EQUAL (289)
TOKEN_EQUAL (290)
TOKEN_LESS (291)
TOKEN_NOTEQUAL (292)
TOKEN_EQUIV (293) 64
TOKEN_AND_OP (294) 70
TOKEN_OR_OP (295) 68
TOKEN_NOT_OP (296) 72
TOKEN_GOTO (297) 147
TOKEN_FOR (298) 106
TOKEN_DO (299) 106
TOKEN_WHILE (300)
TOKEN_STEP (301) 106
TOKEN_UNTIL (302) 106
TOKEN_IF (303) 94
TOKEN_THEN (304) 94
TOKEN_ELSE (305) 90 153
TOKEN_SWITCH (306) 135 148
TOKEN_VALUE (307) 130
TOKEN_BOOLEAN (308)
TOKEN_TYPE_OWN (309)
TOKEN_TYPE_INTEGER (310) 82
TOKEN_TYPE_REAL (311) 81
TOKEN_TYPE_BOOLEAN (312) 83
TOKEN_TYPE_ARRAY (313)
TOKEN_TYPE_SWITCH (314)
TOKEN_TYPE_PROCEDURE (315)
TOKEN_TYPE_STRING (316)
TOKEN_TYPE_LABEL (317) 134
TOKEN_TYPE_VALUE (318)
TOKEN_ARRAY (319) 30 31 133
TOKEN_IMPLY (320) 66
TOKEN_SEMICOLON (321) 2 3 15 130 139 140 143
TOKEN_LTRSTRING (322)
TOKEN_RETURN (323) 103
TOKEN_ASSIGN_IDENTIFIER (324)
TOKEN_LABEL_IDENTIFIER (325)
TOKEN_BOOL_IDENTIFIER (326)
TOKEN_ASSIGN (327) 104 105 106 148
TOKEN_NOT_EQUAL (328)


Nonterminals, with rules where they appear

$accept (74)
    on left: 0
blockHead (75)
    on left: 1 2, on right: 2 3
unlabelledBlock (76)
    on left: 3, on right: 4
block (77)
    on left: 4 5, on right: 5 10 88
tlabel (78)
    on left: 6, on right: 5 13 92 96
label (79)
    on left: 7 8, on right: 6 154
program (80)
    on left: 9 10, on right: 0
unlabelledCompound (81)
    on left: 11, on right: 12
compoundStatement (82)
    on left: 12 13, on right: 9 13 87
compoundTail (83)
    on left: 14 15, on right: 3 11 15
declaration (84)
    on left: 16 17 18 19, on right: 1 2
lowerBound (85)
    on left: 20, on right: 22
upperBound (86)
    on left: 21, on right: 22
boundPair (87)
    on left: 22, on right: 23 24
boundPairList (88)
    on left: 23 24, on right: 24 26
arrayIdentifier (89)
    on left: 25, on right: 26 27 57
arraySegment (90)
    on left: 26 27, on right: 27 28 29
arrayList (91)
    on left: 28 29, on right: 29 30 31
arrayDeclaration (92)
    on left: 30 31, on right: 17
expression (93)
    on left: 32 33 34, on right: 103 114 121
arithmeticExpression (94)
    on left: 35, on right: 20 21 32 49 60 104 106
simpleArithmeticExpression (95)
    on left: 36 37 38 39 40, on right: 35 39 40 77
term (96)
    on left: 41 42 43, on right: 36 37 38 39 40 42 43
factor (97)
    on left: 44 45, on right: 41 42 43 45
primary (98)
    on left: 46 47 48 49, on right: 44 45
unsignedNumber (99)
    on left: 50 51, on right: 46
realNumber (100)
    on left: 52, on right: 50
integer (101)
    on left: 53, on right: 8 51
simpleVariable (102)
    on left: 54, on right: 55
variable (103)
    on left: 55 56, on right: 48 104 105 106
subscriptedVariable (104)
    on left: 57, on right: 56
subscriptList (105)
    on left: 58 59, on right: 57 59
subscriptExpression (106)
    on left: 60, on right: 58 59 157
identifier (107)
    on left: 61, on right: 7 25 85 109 116 122 128 129 151
booleanExpression (108)
    on left: 62, on right: 33 75 94 105
simpleBoolean (109)
    on left: 63 64, on right: 62 64
implication (110)
    on left: 65 66, on right: 63 64 66
booleanTerm (111)
    on left: 67 68, on right: 65 66 68
booleanFactor (112)
    on left: 69 70, on right: 67 68 70
booleanSecondary (113)
    on left: 71 72, on right: 69 70
booleanPrimary (114)
    on left: 73 74 75, on right: 71 72
logicalValue (115)
    on left: 76, on right: 73
relation (116)
    on left: 77, on right: 74
relationalOperator (117)
    on left: 78, on right: 77
listType (118)
    on left: 79 80, on right: 80 84
type (119)
    on left: 81 82 83, on right: 31 84 132 133 136 146
typeDeclaration (120)
    on left: 84, on right: 16
varIdentifier (121)
    on left: 85, on right: 54 79 80
unconditionalStatement (122)
    on left: 86 87 88, on right: 93 118
conditionalStatement (123)
    on left: 89 90 91 92, on right: 92 119
ifStatement (124)
    on left: 93, on right: 89 90
ifClause (125)
    on left: 94, on right: 91 93 153
basicStatement (126)
    on left: 95 96, on right: 86 96
unlabelledBasicStatement (127)
    on left: 97 98 99 100 101, on right: 95
dummyStatement (128)
    on left: 102, on right: 98
returnStatement (129)
    on left: 103, on right: 100
assignmentStatement (130)
    on left: 104 105, on right: 97
forStatement (131)
    on left: 106, on right: 91 120
empty (132)
    on left: 107, on right: 102 125 131 137
procedureStatement (133)
    on left: 108, on right: 99
procedureIdentifier (134)
    on left: 109, on right: 108 117 143
actualParameterPart (135)
    on left: 110 111, on right: 108 117
actualParameterList (136)
    on left: 112 113, on right: 111 113
actualParameter (137)
    on left: 114, on right: 112 113
parameterDelimiter (138)
    on left: 115 116, on right: 113 124
functionDesignator (139)
    on left: 117, on right: 47
statement (140)
    on left: 118 119 120 121, on right: 14 15 90 106 144
formalParameter (141)
    on left: 122, on right: 123 124
formalParameterList (142)
    on left: 123 124, on right: 124 127
formalParameterPart (143)
    on left: 125 127, on right: 143
$@1 (144)
    on left: 126, on right: 127
identifierList (145)
    on left: 128 129, on right: 129 130 139 140
valuePart (146)
    on left: 130 131, on right: 143
specifier (147)
    on left: 132 133 134 135 136, on right: 139 140
specificationPart (148)
    on left: 137 138, on right: 143
specificationIdentifierList (149)
    on left: 139 140, on right: 138 140
procedureHeading (150)
    on left: 143, on right: 145 146
@2 (151)
    on left: 141, on right: 143
$@3 (152)
    on left: 142, on right: 143
procedureBody (153)
    on left: 144, on right: 145 146
procedureDeclaration (154)
    on left: 145 146, on right: 19
gotoStatement (155)
    on left: 147, on right: 101
switchDeclaration (156)
    on left: 148, on right: 18
switchList (157)
    on left: 149 150, on right: 148 150
switchIdentifier (158)
    on left: 151, on right: 148 157
designationalExpression (159)
    on left: 152 153, on right: 34 147 149 150 153 156
simpleDesignationalExpression (160)
    on left: 154 155 156, on right: 152 153
switchDesignator (161)
    on left: 157, on right: 155


state 0

    0 $accept: . program $end

    TOKEN_IDENTIFIER  shift, and go to state 1
    TOKEN_BEGIN       shift, and go to state 2
    TOKEN_INTEGER     shift, and go to state 3

    blockHead           go to state 4
    unlabelledBlock     go to state 5
    block               go to state 6
    tlabel              go to state 7
    label               go to state 8
    program             go to state 9
    unlabelledCompound  go to state 10
    compoundStatement   go to state 11
    integer             go to state 12
    identifier          go to state 13


state 1

   61 identifier: TOKEN_IDENTIFIER .

    $default  reduce using rule 61 (identifier)


state 2

    1 blockHead: TOKEN_BEGIN . declaration
   11 unlabelledCompound: TOKEN_BEGIN . compoundTail

    TOKEN_PRINT         shift, and go to state 14
    TOKEN_IDENTIFIER    shift, and go to state 1
    TOKEN_BEGIN         shift, and go to state 2
    TOKEN_PROCEDURE     shift, and go to state 15
    TOKEN_INTEGER       shift, and go to state 3
    TOKEN_GOTO          shift, and go to state 16
    TOKEN_FOR           shift, and go to state 17
    TOKEN_IF            shift, and go to state 18
    TOKEN_SWITCH        shift, and go to state 19
    TOKEN_TYPE_INTEGER  shift, and go to state 20
    TOKEN_TYPE_REAL     shift, and go to state 21
    TOKEN_TYPE_BOOLEAN  shift, and go to state 22
    TOKEN_ARRAY         shift, and go to state 23
    TOKEN_RETURN        shift, and go to state 24

    $default  reduce using rule 107 (empty)

    blockHead                 go to state 4
    unlabelledBlock           go to state 5
    block                     go to state 25
    tlabel                    go to state 26
    label                     go to state 8
    unlabelledCompound        go to state 10
    compoundStatement         go to state 27
    compoundTail              go to state 28
    declaration               go to state 29
    arrayIdentifier           go to state 30
    arrayDeclaration          go to state 31
    integer                   go to state 12
    simpleVariable            go to state 32
    variable                  go to state 33
    subscriptedVariable       go to state 34
    identifier                go to state 35
    type                      go to state 36
    typeDeclaration           go to state 37
    varIdentifier             go to state 38
    unconditionalStatement    go to state 39
    conditionalStatement      go to state 40
    ifStatement               go to state 41
    ifClause                  go to state 42
    basicStatement            go to state 43
    unlabelledBasicStatement  go to state 44
    dummyStatement            go to state 45
    returnStatement           go to state 46
    assignmentStatement       go to state 47
    forStatement              go to state 48
    empty                     go to state 49
    procedureStatement        go to state 50
    procedureIdentifier       go to state 51
    statement                 go to state 52
    procedureDeclaration      go to state 53
    gotoStatement             go to state 54
    switchDeclaration         go to state 55


state 3

   53 integer: TOKEN_INTEGER .

    $default  reduce using rule 53 (integer)


state 4

    2 blockHead: blockHead . TOKEN_SEMICOLON declaration
    3 unlabelledBlock: blockHead . TOKEN_SEMICOLON compoundTail

    TOKEN_SEMICOLON  shift, and go to state 56


state 5

    4 block: unlabelledBlock .

    $default  reduce using rule 4 (block)


state 6

   10 program: block .

    $default  reduce using rule 10 (program)


state 7

    5 block: tlabel . block
   13 compoundStatement: tlabel . compoundStatement

    TOKEN_IDENTIFIER  shift, and go to state 1
    TOKEN_BEGIN       shift, and go to state 2
    TOKEN_INTEGER     shift, and go to state 3

    blockHead           go to state 4
    unlabelledBlock     go to state 5
    block               go to state 57
    tlabel              go to state 7
    label               go to state 8
    unlabelledCompound  go to state 10
    compoundStatement   go to state 58
    integer             go to state 12
    identifier          go to state 13


state 8

    6 tlabel: label . TOKEN_COLON

    TOKEN_COLON  shift, and go to state 59


state 9

    0 $accept: program . $end

    $end  shift, and go to state 60


state 10

   12 compoundStatement: unlabelledCompound .

    $default  reduce using rule 12 (compoundStatement)


state 11

    9 program: compoundStatement .

    $default  reduce using rule 9 (program)


state 12

    8 label: integer .

    $default  reduce using rule 8 (label)


state 13

    7 label: identifier .

    $default  reduce using rule 7 (label)


state 14

  121 statement: TOKEN_PRINT . expression

    TOKEN_IDENTIFIER     shift, and go to state 1
    TOKEN_LOGICAL_VALUE  shift, and go to state 61
    TOKEN_PLUS           shift, and go to state 62
    TOKEN_MINUS          shift, and go to state 63
    TOKEN_OPEN_BRACKET   shift, and go to state 64
    TOKEN_REAL_NUM       shift, and go to state 65
    TOKEN_INTEGER        shift, and go to state 3
    TOKEN_COLON          shift, and go to state 66
    TOKEN_NOT_OP         shift, and go to state 67
    TOKEN_IF             shift, and go to state 18

    arrayIdentifier                go to state 30
    expression                     go to state 68
    arithmeticExpression           go to state 69
    simpleArithmeticExpression     go to state 70
    term                           go to state 71
    factor                         go to state 72
    primary                        go to state 73
    unsignedNumber                 go to state 74
    realNumber                     go to state 75
    integer                        go to state 76
    simpleVariable                 go to state 32
    variable                       go to state 77
    subscriptedVariable            go to state 34
    identifier                     go to state 78
    booleanExpression              go to state 79
    simpleBoolean                  go to state 80
    implication                    go to state 81
    booleanTerm                    go to state 82
    booleanFactor                  go to state 83
    booleanSecondary               go to state 84
    booleanPrimary                 go to state 85
    logicalValue                   go to state 86
    relation                       go to state 87
    varIdentifier                  go to state 38
    ifClause                       go to state 88
    procedureIdentifier            go to state 89
    functionDesignator             go to state 90
    switchIdentifier               go to state 91
    designationalExpression        go to state 92
    simpleDesignationalExpression  go to state 93
    switchDesignator               go to state 94


state 15

  145 procedureDeclaration: TOKEN_PROCEDURE . procedureHeading procedureBody

    TOKEN_IDENTIFIER  shift, and go to state 1

    identifier           go to state 95
    procedureIdentifier  go to state 96
    procedureHeading     go to state 97


state 16

  147 gotoStatement: TOKEN_GOTO . designationalExpression

    TOKEN_IDENTIFIER    shift, and go to state 1
    TOKEN_OPEN_BRACKET  shift, and go to state 98
    TOKEN_COLON         shift, and go to state 66
    TOKEN_IF            shift, and go to state 18

    identifier                     go to state 99
    ifClause                       go to state 88
    switchIdentifier               go to state 91
    designationalExpression        go to state 100
    simpleDesignationalExpression  go to state 93
    switchDesignator               go to state 94


state 17

  106 forStatement: TOKEN_FOR . variable TOKEN_ASSIGN arithmeticExpression TOKEN_STEP arithmeticExpression TOKEN_UNTIL arithmeticExpression TOKEN_DO statement

    TOKEN_IDENTIFIER  shift, and go to state 1

    arrayIdentifier      go to state 30
    simpleVariable       go to state 32
    variable             go to state 101
    subscriptedVariable  go to state 34
    identifier           go to state 102
    varIdentifier        go to state 38


state 18

   94 ifClause: TOKEN_IF . booleanExpression TOKEN_THEN

    TOKEN_IDENTIFIER     shift, and go to state 1
    TOKEN_LOGICAL_VALUE  shift, and go to state 61
    TOKEN_PLUS           shift, and go to state 62
    TOKEN_MINUS          shift, and go to state 63
    TOKEN_OPEN_BRACKET   shift, and go to state 103
    TOKEN_REAL_NUM       shift, and go to state 65
    TOKEN_INTEGER        shift, and go to state 3
    TOKEN_NOT_OP         shift, and go to state 67

    arrayIdentifier             go to state 30
    simpleArithmeticExpression  go to state 104
    term                        go to state 71
    factor                      go to state 72
    primary                     go to state 73
    unsignedNumber              go to state 74
    realNumber                  go to state 75
    integer                     go to state 76
    simpleVariable              go to state 32
    variable                    go to state 77
    subscriptedVariable         go to state 34
    identifier                  go to state 105
    booleanExpression           go to state 106
    simpleBoolean               go to state 80
    implication                 go to state 81
    booleanTerm                 go to state 82
    booleanFactor               go to state 83
    booleanSecondary            go to state 84
    booleanPrimary              go to state 85
    logicalValue                go to state 86
    relation                    go to state 87
    varIdentifier               go to state 38
    procedureIdentifier         go to state 89
    functionDesignator          go to state 90


state 19

  148 switchDeclaration: TOKEN_SWITCH . switchIdentifier TOKEN_ASSIGN switchList

    TOKEN_IDENTIFIER  shift, and go to state 1

    identifier        go to state 99
    switchIdentifier  go to state 107


state 20

   82 type: TOKEN_TYPE_INTEGER .

    $default  reduce using rule 82 (type)


state 21

   81 type: TOKEN_TYPE_REAL .

    $default  reduce using rule 81 (type)


state 22

   83 type: TOKEN_TYPE_BOOLEAN .

    $default  reduce using rule 83 (type)


state 23

   30 arrayDeclaration: TOKEN_ARRAY . arrayList

    TOKEN_IDENTIFIER  shift, and go to state 1

    arrayIdentifier  go to state 108
    arraySegment     go to state 109
    arrayList        go to state 110
    identifier       go to state 111


state 24

  103 returnStatement: TOKEN_RETURN . expression

    TOKEN_IDENTIFIER     shift, and go to state 1
    TOKEN_LOGICAL_VALUE  shift, and go to state 61
    TOKEN_PLUS           shift, and go to state 62
    TOKEN_MINUS          shift, and go to state 63
    TOKEN_OPEN_BRACKET   shift, and go to state 64
    TOKEN_REAL_NUM       shift, and go to state 65
    TOKEN_INTEGER        shift, and go to state 3
    TOKEN_COLON          shift, and go to state 66
    TOKEN_NOT_OP         shift, and go to state 67
    TOKEN_IF             shift, and go to state 18

    arrayIdentifier                go to state 30
    expression                     go to state 112
    arithmeticExpression           go to state 69
    simpleArithmeticExpression     go to state 70
    term                           go to state 71
    factor                         go to state 72
    primary                        go to state 73
    unsignedNumber                 go to state 74
    realNumber                     go to state 75
    integer                        go to state 76
    simpleVariable                 go to state 32
    variable                       go to state 77
    subscriptedVariable            go to state 34
    identifier                     go to state 78
    booleanExpression              go to state 79
    simpleBoolean                  go to state 80
    implication                    go to state 81
    booleanTerm                    go to state 82
    booleanFactor                  go to state 83
    booleanSecondary               go to state 84
    booleanPrimary                 go to state 85
    logicalValue                   go to state 86
    relation                       go to state 87
    varIdentifier                  go to state 38
    ifClause                       go to state 88
    procedureIdentifier            go to state 89
    functionDesignator             go to state 90
    switchIdentifier               go to state 91
    designationalExpression        go to state 92
    simpleDesignationalExpression  go to state 93
    switchDesignator               go to state 94


state 25

   88 unconditionalStatement: block .

    $default  reduce using rule 88 (unconditionalStatement)


state 26

    5 block: tlabel . block
   13 compoundStatement: tlabel . compoundStatement
   92 conditionalStatement: tlabel . conditionalStatement
   96 basicStatement: tlabel . basicStatement

    TOKEN_IDENTIFIER  shift, and go to state 1
    TOKEN_BEGIN       shift, and go to state 2
    TOKEN_INTEGER     shift, and go to state 3
    TOKEN_GOTO        shift, and go to state 16
    TOKEN_IF          shift, and go to state 18
    TOKEN_RETURN      shift, and go to state 24

    $default  reduce using rule 107 (empty)

    blockHead                 go to state 4
    unlabelledBlock           go to state 5
    block                     go to state 57
    tlabel                    go to state 26
    label                     go to state 8
    unlabelledCompound        go to state 10
    compoundStatement         go to state 58
    arrayIdentifier           go to state 30
    integer                   go to state 12
    simpleVariable            go to state 32
    variable                  go to state 33
    subscriptedVariable       go to state 34
    identifier                go to state 35
    varIdentifier             go to state 38
    conditionalStatement      go to state 113
    ifStatement               go to state 41
    ifClause                  go to state 42
    basicStatement            go to state 114
    unlabelledBasicStatement  go to state 44
    dummyStatement            go to state 45
    returnStatement           go to state 46
    assignmentStatement       go to state 47
    empty                     go to state 49
    procedureStatement        go to state 50
    procedureIdentifier       go to state 51
    gotoStatement             go to state 54


state 27

   87 unconditionalStatement: compoundStatement .

    $default  reduce using rule 87 (unconditionalStatement)


state 28

   11 unlabelledCompound: TOKEN_BEGIN compoundTail .

    $default  reduce using rule 11 (unlabelledCompound)


state 29

    1 blockHead: TOKEN_BEGIN declaration .

    $default  reduce using rule 1 (blockHead)


state 30

   57 subscriptedVariable: arrayIdentifier . TOKEN_OPEN_SQUARE_BRACKET subscriptList TOKEN_CLOSE_SQUARE_BRACKET

    TOKEN_OPEN_SQUARE_BRACKET  shift, and go to state 115


state 31

   17 declaration: arrayDeclaration .

    $default  reduce using rule 17 (declaration)


state 32

   55 variable: simpleVariable .

    $default  reduce using rule 55 (variable)


state 33

  104 assignmentStatement: variable . TOKEN_ASSIGN arithmeticExpression
  105                    | variable . TOKEN_ASSIGN booleanExpression

    TOKEN_ASSIGN  shift, and go to state 116


state 34

   56 variable: subscriptedVariable .

    $default  reduce using rule 56 (variable)


state 35

    7 label: identifier .
   25 arrayIdentifier: identifier .
   85 varIdentifier: identifier .
  109 procedureIdentifier: identifier .

    TOKEN_OPEN_BRACKET         reduce using rule 109 (procedureIdentifier)
    TOKEN_OPEN_SQUARE_BRACKET  reduce using rule 25 (arrayIdentifier)
    TOKEN_ASSIGN               reduce using rule 85 (varIdentifier)
    $default                   reduce using rule 7 (label)


state 36

   31 arrayDeclaration: type . TOKEN_ARRAY arrayList
   84 typeDeclaration: type . listType
  146 procedureDeclaration: type . TOKEN_PROCEDURE procedureHeading procedureBody

    TOKEN_IDENTIFIER  shift, and go to state 1
    TOKEN_PROCEDURE   shift, and go to state 117
    TOKEN_ARRAY       shift, and go to state 118

    identifier     go to state 119
    listType       go to state 120
    varIdentifier  go to state 121


state 37

   16 declaration: typeDeclaration .

    $default  reduce using rule 16 (declaration)


state 38

   54 simpleVariable: varIdentifier .

    $default  reduce using rule 54 (simpleVariable)


state 39

  118 statement: unconditionalStatement .

    $default  reduce using rule 118 (statement)


state 40

  119 statement: conditionalStatement .

    $default  reduce using rule 119 (statement)


state 41

   89 conditionalStatement: ifStatement .
   90                     | ifStatement . TOKEN_ELSE statement

    TOKEN_ELSE  shift, and go to state 122

    $default  reduce using rule 89 (conditionalStatement)


state 42

   91 conditionalStatement: ifClause . forStatement
   93 ifStatement: ifClause . unconditionalStatement

    TOKEN_IDENTIFIER  shift, and go to state 1
    TOKEN_BEGIN       shift, and go to state 2
    TOKEN_INTEGER     shift, and go to state 3
    TOKEN_GOTO        shift, and go to state 16
    TOKEN_FOR         shift, and go to state 17
    TOKEN_RETURN      shift, and go to state 24

    $default  reduce using rule 107 (empty)

    blockHead                 go to state 4
    unlabelledBlock           go to state 5
    block                     go to state 25
    tlabel                    go to state 123
    label                     go to state 8
    unlabelledCompound        go to state 10
    compoundStatement         go to state 27
    arrayIdentifier           go to state 30
    integer                   go to state 12
    simpleVariable            go to state 32
    variable                  go to state 33
    subscriptedVariable       go to state 34
    identifier                go to state 35
    varIdentifier             go to state 38
    unconditionalStatement    go to state 124
    basicStatement            go to state 43
    unlabelledBasicStatement  go to state 44
    dummyStatement            go to state 45
    returnStatement           go to state 46
    assignmentStatement       go to state 47
    forStatement              go to state 125
    empty                     go to state 49
    procedureStatement        go to state 50
    procedureIdentifier       go to state 51
    gotoStatement             go to state 54


state 43

   86 unconditionalStatement: basicStatement .

    $default  reduce using rule 86 (unconditionalStatement)


state 44

   95 basicStatement: unlabelledBasicStatement .

    $default  reduce using rule 95 (basicStatement)


state 45

   98 unlabelledBasicStatement: dummyStatement .

    $default  reduce using rule 98 (unlabelledBasicStatement)


state 46

  100 unlabelledBasicStatement: returnStatement .

    $default  reduce using rule 100 (unlabelledBasicStatement)


state 47

   97 unlabelledBasicStatement: assignmentStatement .

    $default  reduce using rule 97 (unlabelledBasicStatement)


state 48

  120 statement: forStatement .

    $default  reduce using rule 120 (statement)


state 49

  102 dummyStatement: empty .

    $default  reduce using rule 102 (dummyStatement)


state 50

   99 unlabelledBasicStatement: procedureStatement .

    $default  reduce using rule 99 (unlabelledBasicStatement)


state 51

  108 procedureStatement: procedureIdentifier . actualParameterPart

    TOKEN_OPEN_BRACKET  shift, and go to state 126

    actualParameterPart  go to state 127


state 52

   14 compoundTail: statement . TOKEN_END
   15             | statement . TOKEN_SEMICOLON compoundTail

    TOKEN_END        shift, and go to state 128
    TOKEN_SEMICOLON  shift, and go to state 129


state 53

   19 declaration: procedureDeclaration .

    $default  reduce using rule 19 (declaration)


state 54

  101 unlabelledBasicStatement: gotoStatement .

    $default  reduce using rule 101 (unlabelledBasicStatement)


state 55

   18 declaration: switchDeclaration .

    $default  reduce using rule 18 (declaration)


state 56

    2 blockHead: blockHead TOKEN_SEMICOLON . declaration
    3 unlabelledBlock: blockHead TOKEN_SEMICOLON . compoundTail

    TOKEN_PRINT         shift, and go to state 14
    TOKEN_IDENTIFIER    shift, and go to state 1
    TOKEN_BEGIN         shift, and go to state 2
    TOKEN_PROCEDURE     shift, and go to state 15
    TOKEN_INTEGER       shift, and go to state 3
    TOKEN_GOTO          shift, and go to state 16
    TOKEN_FOR           shift, and go to state 17
    TOKEN_IF            shift, and go to state 18
    TOKEN_SWITCH        shift, and go to state 19
    TOKEN_TYPE_INTEGER  shift, and go to state 20
    TOKEN_TYPE_REAL     shift, and go to state 21
    TOKEN_TYPE_BOOLEAN  shift, and go to state 22
    TOKEN_ARRAY         shift, and go to state 23
    TOKEN_RETURN        shift, and go to state 24

    $default  reduce using rule 107 (empty)

    blockHead                 go to state 4
    unlabelledBlock           go to state 5
    block                     go to state 25
    tlabel                    go to state 26
    label                     go to state 8
    unlabelledCompound        go to state 10
    compoundStatement         go to state 27
    compoundTail              go to state 130
    declaration               go to state 131
    arrayIdentifier           go to state 30
    arrayDeclaration          go to state 31
    integer                   go to state 12
    simpleVariable            go to state 32
    variable                  go to state 33
    subscriptedVariable       go to state 34
    identifier                go to state 35
    type                      go to state 36
    typeDeclaration           go to state 37
    varIdentifier             go to state 38
    unconditionalStatement    go to state 39
    conditionalStatement      go to state 40
    ifStatement               go to state 41
    ifClause                  go to state 42
    basicStatement            go to state 43
    unlabelledBasicStatement  go to state 44
    dummyStatement            go to state 45
    returnStatement           go to state 46
    assignmentStatement       go to state 47
    forStatement              go to state 48
    empty                     go to state 49
    procedureStatement        go to state 50
    procedureIdentifier       go to state 51
    statement                 go to state 52
    procedureDeclaration      go to state 53
    gotoStatement             go to state 54
    switchDeclaration         go to state 55


state 57

    5 block: tlabel block .

    $default  reduce using rule 5 (block)


state 58

   13 compoundStatement: tlabel compoundStatement .

    $default  reduce using rule 13 (compoundStatement)


state 59

    6 tlabel: label TOKEN_COLON .

    $default  reduce using rule 6 (tlabel)


state 60

    0 $accept: program $end .

    $default  accept


state 61

   76 logicalValue: TOKEN_LOGICAL_VALUE .

    $default  reduce using rule 76 (logicalValue)


state 62

   37 simpleArithmeticExpression: TOKEN_PLUS . term

    TOKEN_IDENTIFIER    shift, and go to state 1
    TOKEN_OPEN_BRACKET  shift, and go to state 132
    TOKEN_REAL_NUM      shift, and go to state 65
    TOKEN_INTEGER       shift, and go to state 3

    arrayIdentifier      go to state 30
    term                 go to state 133
    factor               go to state 72
    primary              go to state 73
    unsignedNumber       go to state 74
    realNumber           go to state 75
    integer              go to state 76
    simpleVariable       go to state 32
    variable             go to state 77
    subscriptedVariable  go to state 34
    identifier           go to state 105
    varIdentifier        go to state 38
    procedureIdentifier  go to state 89
    functionDesignator   go to state 90


state 63

   38 simpleArithmeticExpression: TOKEN_MINUS . term

    TOKEN_IDENTIFIER    shift, and go to state 1
    TOKEN_OPEN_BRACKET  shift, and go to state 132
    TOKEN_REAL_NUM      shift, and go to state 65
    TOKEN_INTEGER       shift, and go to state 3

    arrayIdentifier      go to state 30
    term                 go to state 134
    factor               go to state 72
    primary              go to state 73
    unsignedNumber       go to state 74
    realNumber           go to state 75
    integer              go to state 76
    simpleVariable       go to state 32
    variable             go to state 77
    subscriptedVariable  go to state 34
    identifier           go to state 105
    varIdentifier        go to state 38
    procedureIdentifier  go to state 89
    functionDesignator   go to state 90


state 64

   49 primary: TOKEN_OPEN_BRACKET . arithmeticExpression TOKEN_CLOSE_BRACKET
   75 booleanPrimary: TOKEN_OPEN_BRACKET . booleanExpression TOKEN_CLOSE_BRACKET
  156 simpleDesignationalExpression: TOKEN_OPEN_BRACKET . designationalExpression TOKEN_CLOSE_BRACKET

    TOKEN_IDENTIFIER     shift, and go to state 1
    TOKEN_LOGICAL_VALUE  shift, and go to state 61
    TOKEN_PLUS           shift, and go to state 62
    TOKEN_MINUS          shift, and go to state 63
    TOKEN_OPEN_BRACKET   shift, and go to state 64
    TOKEN_REAL_NUM       shift, and go to state 65
    TOKEN_INTEGER        shift, and go to state 3
    TOKEN_COLON          shift, and go to state 66
    TOKEN_NOT_OP         shift, and go to state 67
    TOKEN_IF             shift, and go to state 18

    arrayIdentifier                go to state 30
    arithmeticExpression           go to state 135
    simpleArithmeticExpression     go to state 70
    term                           go to state 71
    factor                         go to state 72
    primary                        go to state 73
    unsignedNumber                 go to state 74
    realNumber                     go to state 75
    integer                        go to state 76
    simpleVariable                 go to state 32
    variable                       go to state 77
    subscriptedVariable            go to state 34
    identifier                     go to state 78
    booleanExpression              go to state 136
    simpleBoolean                  go to state 80
    implication                    go to state 81
    booleanTerm                    go to state 82
    booleanFactor                  go to state 83
    booleanSecondary               go to state 84
    booleanPrimary                 go to state 85
    logicalValue                   go to state 86
    relation                       go to state 87
    varIdentifier                  go to state 38
    ifClause                       go to state 88
    procedureIdentifier            go to state 89
    functionDesignator             go to state 90
    switchIdentifier               go to state 91
    designationalExpression        go to state 137
    simpleDesignationalExpression  go to state 93
    switchDesignator               go to state 94


state 65

   52 realNumber: TOKEN_REAL_NUM .

    $default  reduce using rule 52 (realNumber)


state 66

  154 simpleDesignationalExpression: TOKEN_COLON . label

    TOKEN_IDENTIFIER  shift, and go to state 1
    TOKEN_INTEGER     shift, and go to state 3

    label       go to state 138
    integer     go to state 12
    identifier  go to state 13


state 67

   72 booleanSecondary: TOKEN_NOT_OP . booleanPrimary

    TOKEN_IDENTIFIER     shift, and go to state 1
    TOKEN_LOGICAL_VALUE  shift, and go to state 61
    TOKEN_PLUS           shift, and go to state 62
    TOKEN_MINUS          shift, and go to state 63
    TOKEN_OPEN_BRACKET   shift, and go to state 103
    TOKEN_REAL_NUM       shift, and go to state 65
    TOKEN_INTEGER        shift, and go to state 3

    arrayIdentifier             go to state 30
    simpleArithmeticExpression  go to state 104
    term                        go to state 71
    factor                      go to state 72
    primary                     go to state 73
    unsignedNumber              go to state 74
    realNumber                  go to state 75
    integer                     go to state 76
    simpleVariable              go to state 32
    variable                    go to state 77
    subscriptedVariable         go to state 34
    identifier                  go to state 105
    booleanPrimary              go to state 139
    logicalValue                go to state 86
    relation                    go to state 87
    varIdentifier               go to state 38
    procedureIdentifier         go to state 89
    functionDesignator          go to state 90


state 68

  121 statement: TOKEN_PRINT expression .

    $default  reduce using rule 121 (statement)


state 69

   32 expression: arithmeticExpression .

    $default  reduce using rule 32 (expression)


state 70

   35 arithmeticExpression: simpleArithmeticExpression .
   39 simpleArithmeticExpression: simpleArithmeticExpression . TOKEN_PLUS term
   40                           | simpleArithmeticExpression . TOKEN_MINUS term
   77 relation: simpleArithmeticExpression . relationalOperator simpleArithmeticExpression

    TOKEN_PLUS    shift, and go to state 140
    TOKEN_MINUS   shift, and go to state 141
    TOKEN_REL_OP  shift, and go to state 142

    $default  reduce using rule 35 (arithmeticExpression)

    relationalOperator  go to state 143


state 71

   36 simpleArithmeticExpression: term .
   42 term: term . TOKEN_MULTIPLY factor
   43     | term . TOKEN_DIVIDE factor

    TOKEN_DIVIDE    shift, and go to state 144
    TOKEN_MULTIPLY  shift, and go to state 145

    $default  reduce using rule 36 (simpleArithmeticExpression)


state 72

   41 term: factor .
   45 factor: factor . TOKEN_POWER primary

    TOKEN_POWER  shift, and go to state 146

    $default  reduce using rule 41 (term)


state 73

   44 factor: primary .

    $default  reduce using rule 44 (factor)


state 74

   46 primary: unsignedNumber .

    $default  reduce using rule 46 (primary)


state 75

   50 unsignedNumber: realNumber .

    $default  reduce using rule 50 (unsignedNumber)


state 76

   51 unsignedNumber: integer .

    $default  reduce using rule 51 (unsignedNumber)


state 77

   48 primary: variable .

    $default  reduce using rule 48 (primary)


state 78

   25 arrayIdentifier: identifier .
   85 varIdentifier: identifier .
  109 procedureIdentifier: identifier .
  151 switchIdentifier: identifier .

    TOKEN_OPEN_BRACKET         reduce using rule 109 (procedureIdentifier)
    TOKEN_OPEN_SQUARE_BRACKET  reduce using rule 25 (arrayIdentifier)
    TOKEN_OPEN_CURLY_BRACKET   reduce using rule 151 (switchIdentifier)
    $default                   reduce using rule 85 (varIdentifier)


state 79

   33 expression: booleanExpression .

    $default  reduce using rule 33 (expression)


state 80

   62 booleanExpression: simpleBoolean .
   64 simpleBoolean: simpleBoolean . TOKEN_EQUIV implication

    TOKEN_EQUIV  shift, and go to state 147

    $default  reduce using rule 62 (booleanExpression)


state 81

   63 simpleBoolean: implication .
   66 implication: implication . TOKEN_IMPLY booleanTerm

    TOKEN_IMPLY  shift, and go to state 148

    $default  reduce using rule 63 (simpleBoolean)


state 82

   65 implication: booleanTerm .
   68 booleanTerm: booleanTerm . TOKEN_OR_OP booleanFactor

    TOKEN_OR_OP  shift, and go to state 149

    $default  reduce using rule 65 (implication)


state 83

   67 booleanTerm: booleanFactor .
   70 booleanFactor: booleanFactor . TOKEN_AND_OP booleanSecondary

    TOKEN_AND_OP  shift, and go to state 150

    $default  reduce using rule 67 (booleanTerm)


state 84

   69 booleanFactor: booleanSecondary .

    $default  reduce using rule 69 (booleanFactor)


state 85

   71 booleanSecondary: booleanPrimary .

    $default  reduce using rule 71 (booleanSecondary)


state 86

   73 booleanPrimary: logicalValue .

    $default  reduce using rule 73 (booleanPrimary)


state 87

   74 booleanPrimary: relation .

    $default  reduce using rule 74 (booleanPrimary)


state 88

  153 designationalExpression: ifClause . simpleDesignationalExpression TOKEN_ELSE designationalExpression

    TOKEN_IDENTIFIER    shift, and go to state 1
    TOKEN_OPEN_BRACKET  shift, and go to state 98
    TOKEN_COLON         shift, and go to state 66

    identifier                     go to state 99
    switchIdentifier               go to state 91
    simpleDesignationalExpression  go to state 151
    switchDesignator               go to state 94


state 89

  117 functionDesignator: procedureIdentifier . actualParameterPart

    TOKEN_OPEN_BRACKET  shift, and go to state 126

    actualParameterPart  go to state 152


state 90

   47 primary: functionDesignator .

    $default  reduce using rule 47 (primary)


state 91

  157 switchDesignator: switchIdentifier . TOKEN_OPEN_CURLY_BRACKET subscriptExpression TOKEN_CLOSE_CURLY_BRACKET

    TOKEN_OPEN_CURLY_BRACKET  shift, and go to state 153


state 92

   34 expression: designationalExpression .

    $default  reduce using rule 34 (expression)


state 93

  152 designationalExpression: simpleDesignationalExpression .

    $default  reduce using rule 152 (designationalExpression)


state 94

  155 simpleDesignationalExpression: switchDesignator .

    $default  reduce using rule 155 (simpleDesignationalExpression)


state 95

  109 procedureIdentifier: identifier .

    $default  reduce using rule 109 (procedureIdentifier)


state 96

  143 procedureHeading: procedureIdentifier . @2 formalParameterPart TOKEN_SEMICOLON $@3 valuePart specificationPart

    $default  reduce using rule 141 (@2)

    @2  go to state 154


state 97

  145 procedureDeclaration: TOKEN_PROCEDURE procedureHeading . procedureBody

    TOKEN_PRINT       shift, and go to state 14
    TOKEN_IDENTIFIER  shift, and go to state 1
    TOKEN_BEGIN       shift, and go to state 2
    TOKEN_INTEGER     shift, and go to state 3
    TOKEN_GOTO        shift, and go to state 16
    TOKEN_FOR         shift, and go to state 17
    TOKEN_IF          shift, and go to state 18
    TOKEN_RETURN      shift, and go to state 24

    $default  reduce using rule 107 (empty)

    blockHead                 go to state 4
    unlabelledBlock           go to state 5
    block                     go to state 25
    tlabel                    go to state 26
    label                     go to state 8
    unlabelledCompound        go to state 10
    compoundStatement         go to state 27
    arrayIdentifier           go to state 30
    integer                   go to state 12
    simpleVariable            go to state 32
    variable                  go to state 33
    subscriptedVariable       go to state 34
    identifier                go to state 35
    varIdentifier             go to state 38
    unconditionalStatement    go to state 39
    conditionalStatement      go to state 40
    ifStatement               go to state 41
    ifClause                  go to state 42
    basicStatement            go to state 43
    unlabelledBasicStatement  go to state 44
    dummyStatement            go to state 45
    returnStatement           go to state 46
    assignmentStatement       go to state 47
    forStatement              go to state 48
    empty                     go to state 49
    procedureStatement        go to state 50
    procedureIdentifier       go to state 51
    statement                 go to state 155
    procedureBody             go to state 156
    gotoStatement             go to state 54


state 98

  156 simpleDesignationalExpression: TOKEN_OPEN_BRACKET . designationalExpression TOKEN_CLOSE_BRACKET

    TOKEN_IDENTIFIER    shift, and go to state 1
    TOKEN_OPEN_BRACKET  shift, and go to state 98
    TOKEN_COLON         shift, and go to state 66
    TOKEN_IF            shift, and go to state 18

    identifier                     go to state 99
    ifClause                       go to state 88
    switchIdentifier               go to state 91
    designationalExpression        go to state 137
    simpleDesignationalExpression  go to state 93
    switchDesignator               go to state 94


state 99

  151 switchIdentifier: identifier .

    $default  reduce using rule 151 (switchIdentifier)


state 100

  147 gotoStatement: TOKEN_GOTO designationalExpression .

    $default  reduce using rule 147 (gotoStatement)


state 101

  106 forStatement: TOKEN_FOR variable . TOKEN_ASSIGN arithmeticExpression TOKEN_STEP arithmeticExpression TOKEN_UNTIL arithmeticExpression TOKEN_DO statement

    TOKEN_ASSIGN  shift, and go to state 157


state 102

   25 arrayIdentifier: identifier .
   85 varIdentifier: identifier .

    TOKEN_ASSIGN  reduce using rule 85 (varIdentifier)
    $default      reduce using rule 25 (arrayIdentifier)


state 103

   49 primary: TOKEN_OPEN_BRACKET . arithmeticExpression TOKEN_CLOSE_BRACKET
   75 booleanPrimary: TOKEN_OPEN_BRACKET . booleanExpression TOKEN_CLOSE_BRACKET

    TOKEN_IDENTIFIER     shift, and go to state 1
    TOKEN_LOGICAL_VALUE  shift, and go to state 61
    TOKEN_PLUS           shift, and go to state 62
    TOKEN_MINUS          shift, and go to state 63
    TOKEN_OPEN_BRACKET   shift, and go to state 103
    TOKEN_REAL_NUM       shift, and go to state 65
    TOKEN_INTEGER        shift, and go to state 3
    TOKEN_NOT_OP         shift, and go to state 67

    arrayIdentifier             go to state 30
    arithmeticExpression        go to state 135
    simpleArithmeticExpression  go to state 70
    term                        go to state 71
    factor                      go to state 72
    primary                     go to state 73
    unsignedNumber              go to state 74
    realNumber                  go to state 75
    integer                     go to state 76
    simpleVariable              go to state 32
    variable                    go to state 77
    subscriptedVariable         go to state 34
    identifier                  go to state 105
    booleanExpression           go to state 136
    simpleBoolean               go to state 80
    implication                 go to state 81
    booleanTerm                 go to state 82
    booleanFactor               go to state 83
    booleanSecondary            go to state 84
    booleanPrimary              go to state 85
    logicalValue                go to state 86
    relation                    go to state 87
    varIdentifier               go to state 38
    procedureIdentifier         go to state 89
    functionDesignator          go to state 90


state 104

   39 simpleArithmeticExpression: simpleArithmeticExpression . TOKEN_PLUS term
   40                           | simpleArithmeticExpression . TOKEN_MINUS term
   77 relation: simpleArithmeticExpression . relationalOperator simpleArithmeticExpression

    TOKEN_PLUS    shift, and go to state 140
    TOKEN_MINUS   shift, and go to state 141
    TOKEN_REL_OP  shift, and go to state 142

    relationalOperator  go to state 143


state 105

   25 arrayIdentifier: identifier .
   85 varIdentifier: identifier .
  109 procedureIdentifier: identifier .

    TOKEN_OPEN_BRACKET         reduce using rule 109 (procedureIdentifier)
    TOKEN_OPEN_SQUARE_BRACKET  reduce using rule 25 (arrayIdentifier)
    $default                   reduce using rule 85 (varIdentifier)


state 106

   94 ifClause: TOKEN_IF booleanExpression . TOKEN_THEN

    TOKEN_THEN  shift, and go to state 158


state 107

  148 switchDeclaration: TOKEN_SWITCH switchIdentifier . TOKEN_ASSIGN switchList

    TOKEN_ASSIGN  shift, and go to state 159


state 108

   26 arraySegment: arrayIdentifier . TOKEN_OPEN_SQUARE_BRACKET boundPairList TOKEN_CLOSE_SQUARE_BRACKET
   27             | arrayIdentifier . TOKEN_COMMA arraySegment

    TOKEN_COMMA                shift, and go to state 160
    TOKEN_OPEN_SQUARE_BRACKET  shift, and go to state 161


state 109

   28 arrayList: arraySegment .

    $default  reduce using rule 28 (arrayList)


state 110

   29 arrayList: arrayList . TOKEN_COMMA arraySegment
   30 arrayDeclaration: TOKEN_ARRAY arrayList .

    TOKEN_COMMA  shift, and go to state 162

    $default  reduce using rule 30 (arrayDeclaration)


state 111

   25 arrayIdentifier: identifier .

    $default  reduce using rule 25 (arrayIdentifier)


state 112

  103 returnStatement: TOKEN_RETURN expression .

    $default  reduce using rule 103 (returnStatement)


state 113

   92 conditionalStatement: tlabel conditionalStatement .

    $default  reduce using rule 92 (conditionalStatement)


state 114

   96 basicStatement: tlabel basicStatement .

    $default  reduce using rule 96 (basicStatement)


state 115

   57 subscriptedVariable: arrayIdentifier TOKEN_OPEN_SQUARE_BRACKET . subscriptList TOKEN_CLOSE_SQUARE_BRACKET

    TOKEN_IDENTIFIER    shift, and go to state 1
    TOKEN_PLUS          shift, and go to state 62
    TOKEN_MINUS         shift, and go to state 63
    TOKEN_OPEN_BRACKET  shift, and go to state 132
    TOKEN_REAL_NUM      shift, and go to state 65
    TOKEN_INTEGER       shift, and go to state 3

    arrayIdentifier             go to state 30
    arithmeticExpression        go to state 163
    simpleArithmeticExpression  go to state 164
    term                        go to state 71
    factor                      go to state 72
    primary                     go to state 73
    unsignedNumber              go to state 74
    realNumber                  go to state 75
    integer                     go to state 76
    simpleVariable              go to state 32
    variable                    go to state 77
    subscriptedVariable         go to state 34
    subscriptList               go to state 165
    subscriptExpression         go to state 166
    identifier                  go to state 105
    varIdentifier               go to state 38
    procedureIdentifier         go to state 89
    functionDesignator          go to state 90


state 116

  104 assignmentStatement: variable TOKEN_ASSIGN . arithmeticExpression
  105                    | variable TOKEN_ASSIGN . booleanExpression

    TOKEN_IDENTIFIER     shift, and go to state 1
    TOKEN_LOGICAL_VALUE  shift, and go to state 61
    TOKEN_PLUS           shift, and go to state 62
    TOKEN_MINUS          shift, and go to state 63
    TOKEN_OPEN_BRACKET   shift, and go to state 103
    TOKEN_REAL_NUM       shift, and go to state 65
    TOKEN_INTEGER        shift, and go to state 3
    TOKEN_NOT_OP         shift, and go to state 67

    arrayIdentifier             go to state 30
    arithmeticExpression        go to state 167
    simpleArithmeticExpression  go to state 70
    term                        go to state 71
    factor                      go to state 72
    primary                     go to state 73
    unsignedNumber              go to state 74
    realNumber                  go to state 75
    integer                     go to state 76
    simpleVariable              go to state 32
    variable                    go to state 77
    subscriptedVariable         go to state 34
    identifier                  go to state 105
    booleanExpression           go to state 168
    simpleBoolean               go to state 80
    implication                 go to state 81
    booleanTerm                 go to state 82
    booleanFactor               go to state 83
    booleanSecondary            go to state 84
    booleanPrimary              go to state 85
    logicalValue                go to state 86
    relation                    go to state 87
    varIdentifier               go to state 38
    procedureIdentifier         go to state 89
    functionDesignator          go to state 90


state 117

  146 procedureDeclaration: type TOKEN_PROCEDURE . procedureHeading procedureBody

    TOKEN_IDENTIFIER  shift, and go to state 1

    identifier           go to state 95
    procedureIdentifier  go to state 96
    procedureHeading     go to state 169


state 118

   31 arrayDeclaration: type TOKEN_ARRAY . arrayList

    TOKEN_IDENTIFIER  shift, and go to state 1

    arrayIdentifier  go to state 108
    arraySegment     go to state 109
    arrayList        go to state 170
    identifier       go to state 111


state 119

   85 varIdentifier: identifier .

    $default  reduce using rule 85 (varIdentifier)


state 120

   80 listType: listType . TOKEN_COMMA varIdentifier
   84 typeDeclaration: type listType .

    TOKEN_COMMA  shift, and go to state 171

    $default  reduce using rule 84 (typeDeclaration)


state 121

   79 listType: varIdentifier .

    $default  reduce using rule 79 (listType)


state 122

   90 conditionalStatement: ifStatement TOKEN_ELSE . statement

    TOKEN_PRINT       shift, and go to state 14
    TOKEN_IDENTIFIER  shift, and go to state 1
    TOKEN_BEGIN       shift, and go to state 2
    TOKEN_INTEGER     shift, and go to state 3
    TOKEN_GOTO        shift, and go to state 16
    TOKEN_FOR         shift, and go to state 17
    TOKEN_IF          shift, and go to state 18
    TOKEN_RETURN      shift, and go to state 24

    $default  reduce using rule 107 (empty)

    blockHead                 go to state 4
    unlabelledBlock           go to state 5
    block                     go to state 25
    tlabel                    go to state 26
    label                     go to state 8
    unlabelledCompound        go to state 10
    compoundStatement         go to state 27
    arrayIdentifier           go to state 30
    integer                   go to state 12
    simpleVariable            go to state 32
    variable                  go to state 33
    subscriptedVariable       go to state 34
    identifier                go to state 35
    varIdentifier             go to state 38
    unconditionalStatement    go to state 39
    conditionalStatement      go to state 40
    ifStatement               go to state 41
    ifClause                  go to state 42
    basicStatement            go to state 43
    unlabelledBasicStatement  go to state 44
    dummyStatement            go to state 45
    returnStatement           go to state 46
    assignmentStatement       go to state 47
    forStatement              go to state 48
    empty                     go to state 49
    procedureStatement        go to state 50
    procedureIdentifier       go to state 51
    statement                 go to state 172
    gotoStatement             go to state 54


state 123

    5 block: tlabel . block
   13 compoundStatement: tlabel . compoundStatement
   96 basicStatement: tlabel . basicStatement

    TOKEN_IDENTIFIER  shift, and go to state 1
    TOKEN_BEGIN       shift, and go to state 2
    TOKEN_INTEGER     shift, and go to state 3
    TOKEN_GOTO        shift, and go to state 16
    TOKEN_RETURN      shift, and go to state 24

    $default  reduce using rule 107 (empty)

    blockHead                 go to state 4
    unlabelledBlock           go to state 5
    block                     go to state 57
    tlabel                    go to state 123
    label                     go to state 8
    unlabelledCompound        go to state 10
    compoundStatement         go to state 58
    arrayIdentifier           go to state 30
    integer                   go to state 12
    simpleVariable            go to state 32
    variable                  go to state 33
    subscriptedVariable       go to state 34
    identifier                go to state 35
    varIdentifier             go to state 38
    basicStatement            go to state 114
    unlabelledBasicStatement  go to state 44
    dummyStatement            go to state 45
    returnStatement           go to state 46
    assignmentStatement       go to state 47
    empty                     go to state 49
    procedureStatement        go to state 50
    procedureIdentifier       go to state 51
    gotoStatement             go to state 54


state 124

   93 ifStatement: ifClause unconditionalStatement .

    $default  reduce using rule 93 (ifStatement)


state 125

   91 conditionalStatement: ifClause forStatement .

    $default  reduce using rule 91 (conditionalStatement)


state 126

  110 actualParameterPart: TOKEN_OPEN_BRACKET . TOKEN_CLOSE_BRACKET
  111                    | TOKEN_OPEN_BRACKET . actualParameterList TOKEN_CLOSE_BRACKET

    TOKEN_IDENTIFIER     shift, and go to state 1
    TOKEN_LOGICAL_VALUE  shift, and go to state 61
    TOKEN_PLUS           shift, and go to state 62
    TOKEN_MINUS          shift, and go to state 63
    TOKEN_OPEN_BRACKET   shift, and go to state 64
    TOKEN_CLOSE_BRACKET  shift, and go to state 173
    TOKEN_REAL_NUM       shift, and go to state 65
    TOKEN_INTEGER        shift, and go to state 3
    TOKEN_COLON          shift, and go to state 66
    TOKEN_NOT_OP         shift, and go to state 67
    TOKEN_IF             shift, and go to state 18

    arrayIdentifier                go to state 30
    expression                     go to state 174
    arithmeticExpression           go to state 69
    simpleArithmeticExpression     go to state 70
    term                           go to state 71
    factor                         go to state 72
    primary                        go to state 73
    unsignedNumber                 go to state 74
    realNumber                     go to state 75
    integer                        go to state 76
    simpleVariable                 go to state 32
    variable                       go to state 77
    subscriptedVariable            go to state 34
    identifier                     go to state 78
    booleanExpression              go to state 79
    simpleBoolean                  go to state 80
    implication                    go to state 81
    booleanTerm                    go to state 82
    booleanFactor                  go to state 83
    booleanSecondary               go to state 84
    booleanPrimary                 go to state 85
    logicalValue                   go to state 86
    relation                       go to state 87
    varIdentifier                  go to state 38
    ifClause                       go to state 88
    procedureIdentifier            go to state 89
    actualParameterList            go to state 175
    actualParameter                go to state 176
    functionDesignator             go to state 90
    switchIdentifier               go to state 91
    designationalExpression        go to state 92
    simpleDesignationalExpression  go to state 93
    switchDesignator               go to state 94


state 127

  108 procedureStatement: procedureIdentifier actualParameterPart .

    $default  reduce using rule 108 (procedureStatement)


state 128

   14 compoundTail: statement TOKEN_END .

    $default  reduce using rule 14 (compoundTail)


state 129

   15 compoundTail: statement TOKEN_SEMICOLON . compoundTail

    TOKEN_PRINT       shift, and go to state 14
    TOKEN_IDENTIFIER  shift, and go to state 1
    TOKEN_BEGIN       shift, and go to state 2
    TOKEN_INTEGER     shift, and go to state 3
    TOKEN_GOTO        shift, and go to state 16
    TOKEN_FOR         shift, and go to state 17
    TOKEN_IF          shift, and go to state 18
    TOKEN_RETURN      shift, and go to state 24

    $default  reduce using rule 107 (empty)

    blockHead                 go to state 4
    unlabelledBlock           go to state 5
    block                     go to state 25
    tlabel                    go to state 26
    label                     go to state 8
    unlabelledCompound        go to state 10
    compoundStatement         go to state 27
    compoundTail              go to state 177
    arrayIdentifier           go to state 30
    integer                   go to state 12
    simpleVariable            go to state 32
    variable                  go to state 33
    subscriptedVariable       go to state 34
    identifier                go to state 35
    varIdentifier             go to state 38
    unconditionalStatement    go to state 39
    conditionalStatement      go to state 40
    ifStatement               go to state 41
    ifClause                  go to state 42
    basicStatement            go to state 43
    unlabelledBasicStatement  go to state 44
    dummyStatement            go to state 45
    returnStatement           go to state 46
    assignmentStatement       go to state 47
    forStatement              go to state 48
    empty                     go to state 49
    procedureStatement        go to state 50
    procedureIdentifier       go to state 51
    statement                 go to state 52
    gotoStatement             go to state 54


state 130

    3 unlabelledBlock: blockHead TOKEN_SEMICOLON compoundTail .

    $default  reduce using rule 3 (unlabelledBlock)


state 131

    2 blockHead: blockHead TOKEN_SEMICOLON declaration .

    $default  reduce using rule 2 (blockHead)


state 132

   49 primary: TOKEN_OPEN_BRACKET . arithmeticExpression TOKEN_CLOSE_BRACKET

    TOKEN_IDENTIFIER    shift, and go to state 1
    TOKEN_PLUS          shift, and go to state 62
    TOKEN_MINUS         shift, and go to state 63
    TOKEN_OPEN_BRACKET  shift, and go to state 132
    TOKEN_REAL_NUM      shift, and go to state 65
    TOKEN_INTEGER       shift, and go to state 3

    arrayIdentifier             go to state 30
    arithmeticExpression        go to state 135
    simpleArithmeticExpression  go to state 164
    term                        go to state 71
    factor                      go to state 72
    primary                     go to state 73
    unsignedNumber              go to state 74
    realNumber                  go to state 75
    integer                     go to state 76
    simpleVariable              go to state 32
    variable                    go to state 77
    subscriptedVariable         go to state 34
    identifier                  go to state 105
    varIdentifier               go to state 38
    procedureIdentifier         go to state 89
    functionDesignator          go to state 90


state 133

   37 simpleArithmeticExpression: TOKEN_PLUS term .
   42 term: term . TOKEN_MULTIPLY factor
   43     | term . TOKEN_DIVIDE factor

    TOKEN_DIVIDE    shift, and go to state 144
    TOKEN_MULTIPLY  shift, and go to state 145

    $default  reduce using rule 37 (simpleArithmeticExpression)


state 134

   38 simpleArithmeticExpression: TOKEN_MINUS term .
   42 term: term . TOKEN_MULTIPLY factor
   43     | term . TOKEN_DIVIDE factor

    TOKEN_DIVIDE    shift, and go to state 144
    TOKEN_MULTIPLY  shift, and go to state 145

    $default  reduce using rule 38 (simpleArithmeticExpression)


state 135

   49 primary: TOKEN_OPEN_BRACKET arithmeticExpression . TOKEN_CLOSE_BRACKET

    TOKEN_CLOSE_BRACKET  shift, and go to state 178


state 136

   75 booleanPrimary: TOKEN_OPEN_BRACKET booleanExpression . TOKEN_CLOSE_BRACKET

    TOKEN_CLOSE_BRACKET  shift, and go to state 179


state 137

  156 simpleDesignationalExpression: TOKEN_OPEN_BRACKET designationalExpression . TOKEN_CLOSE_BRACKET

    TOKEN_CLOSE_BRACKET  shift, and go to state 180


state 138

  154 simpleDesignationalExpression: TOKEN_COLON label .

    $default  reduce using rule 154 (simpleDesignationalExpression)


state 139

   72 booleanSecondary: TOKEN_NOT_OP booleanPrimary .

    $default  reduce using rule 72 (booleanSecondary)


state 140

   39 simpleArithmeticExpression: simpleArithmeticExpression TOKEN_PLUS . term

    TOKEN_IDENTIFIER    shift, and go to state 1
    TOKEN_OPEN_BRACKET  shift, and go to state 132
    TOKEN_REAL_NUM      shift, and go to state 65
    TOKEN_INTEGER       shift, and go to state 3

    arrayIdentifier      go to state 30
    term                 go to state 181
    factor               go to state 72
    primary              go to state 73
    unsignedNumber       go to state 74
    realNumber           go to state 75
    integer              go to state 76
    simpleVariable       go to state 32
    variable             go to state 77
    subscriptedVariable  go to state 34
    identifier           go to state 105
    varIdentifier        go to state 38
    procedureIdentifier  go to state 89
    functionDesignator   go to state 90


state 141

   40 simpleArithmeticExpression: simpleArithmeticExpression TOKEN_MINUS . term

    TOKEN_IDENTIFIER    shift, and go to state 1
    TOKEN_OPEN_BRACKET  shift, and go to state 132
    TOKEN_REAL_NUM      shift, and go to state 65
    TOKEN_INTEGER       shift, and go to state 3

    arrayIdentifier      go to state 30
    term                 go to state 182
    factor               go to state 72
    primary              go to state 73
    unsignedNumber       go to state 74
    realNumber           go to state 75
    integer              go to state 76
    simpleVariable       go to state 32
    variable             go to state 77
    subscriptedVariable  go to state 34
    identifier           go to state 105
    varIdentifier        go to state 38
    procedureIdentifier  go to state 89
    functionDesignator   go to state 90


state 142

   78 relationalOperator: TOKEN_REL_OP .

    $default  reduce using rule 78 (relationalOperator)


state 143

   77 relation: simpleArithmeticExpression relationalOperator . simpleArithmeticExpression

    TOKEN_IDENTIFIER    shift, and go to state 1
    TOKEN_PLUS          shift, and go to state 62
    TOKEN_MINUS         shift, and go to state 63
    TOKEN_OPEN_BRACKET  shift, and go to state 132
    TOKEN_REAL_NUM      shift, and go to state 65
    TOKEN_INTEGER       shift, and go to state 3

    arrayIdentifier             go to state 30
    simpleArithmeticExpression  go to state 183
    term                        go to state 71
    factor                      go to state 72
    primary                     go to state 73
    unsignedNumber              go to state 74
    realNumber                  go to state 75
    integer                     go to state 76
    simpleVariable              go to state 32
    variable                    go to state 77
    subscriptedVariable         go to state 34
    identifier                  go to state 105
    varIdentifier               go to state 38
    procedureIdentifier         go to state 89
    functionDesignator          go to state 90


state 144

   43 term: term TOKEN_DIVIDE . factor

    TOKEN_IDENTIFIER    shift, and go to state 1
    TOKEN_OPEN_BRACKET  shift, and go to state 132
    TOKEN_REAL_NUM      shift, and go to state 65
    TOKEN_INTEGER       shift, and go to state 3

    arrayIdentifier      go to state 30
    factor               go to state 184
    primary              go to state 73
    unsignedNumber       go to state 74
    realNumber           go to state 75
    integer              go to state 76
    simpleVariable       go to state 32
    variable             go to state 77
    subscriptedVariable  go to state 34
    identifier           go to state 105
    varIdentifier        go to state 38
    procedureIdentifier  go to state 89
    functionDesignator   go to state 90


state 145

   42 term: term TOKEN_MULTIPLY . factor

    TOKEN_IDENTIFIER    shift, and go to state 1
    TOKEN_OPEN_BRACKET  shift, and go to state 132
    TOKEN_REAL_NUM      shift, and go to state 65
    TOKEN_INTEGER       shift, and go to state 3

    arrayIdentifier      go to state 30
    factor               go to state 185
    primary              go to state 73
    unsignedNumber       go to state 74
    realNumber           go to state 75
    integer              go to state 76
    simpleVariable       go to state 32
    variable             go to state 77
    subscriptedVariable  go to state 34
    identifier           go to state 105
    varIdentifier        go to state 38
    procedureIdentifier  go to state 89
    functionDesignator   go to state 90


state 146

   45 factor: factor TOKEN_POWER . primary

    TOKEN_IDENTIFIER    shift, and go to state 1
    TOKEN_OPEN_BRACKET  shift, and go to state 132
    TOKEN_REAL_NUM      shift, and go to state 65
    TOKEN_INTEGER       shift, and go to state 3

    arrayIdentifier      go to state 30
    primary              go to state 186
    unsignedNumber       go to state 74
    realNumber           go to state 75
    integer              go to state 76
    simpleVariable       go to state 32
    variable             go to state 77
    subscriptedVariable  go to state 34
    identifier           go to state 105
    varIdentifier        go to state 38
    procedureIdentifier  go to state 89
    functionDesignator   go to state 90


state 147

   64 simpleBoolean: simpleBoolean TOKEN_EQUIV . implication

    TOKEN_IDENTIFIER     shift, and go to state 1
    TOKEN_LOGICAL_VALUE  shift, and go to state 61
    TOKEN_PLUS           shift, and go to state 62
    TOKEN_MINUS          shift, and go to state 63
    TOKEN_OPEN_BRACKET   shift, and go to state 103
    TOKEN_REAL_NUM       shift, and go to state 65
    TOKEN_INTEGER        shift, and go to state 3
    TOKEN_NOT_OP         shift, and go to state 67

    arrayIdentifier             go to state 30
    simpleArithmeticExpression  go to state 104
    term                        go to state 71
    factor                      go to state 72
    primary                     go to state 73
    unsignedNumber              go to state 74
    realNumber                  go to state 75
    integer                     go to state 76
    simpleVariable              go to state 32
    variable                    go to state 77
    subscriptedVariable         go to state 34
    identifier                  go to state 105
    implication                 go to state 187
    booleanTerm                 go to state 82
    booleanFactor               go to state 83
    booleanSecondary            go to state 84
    booleanPrimary              go to state 85
    logicalValue                go to state 86
    relation                    go to state 87
    varIdentifier               go to state 38
    procedureIdentifier         go to state 89
    functionDesignator          go to state 90


state 148

   66 implication: implication TOKEN_IMPLY . booleanTerm

    TOKEN_IDENTIFIER     shift, and go to state 1
    TOKEN_LOGICAL_VALUE  shift, and go to state 61
    TOKEN_PLUS           shift, and go to state 62
    TOKEN_MINUS          shift, and go to state 63
    TOKEN_OPEN_BRACKET   shift, and go to state 103
    TOKEN_REAL_NUM       shift, and go to state 65
    TOKEN_INTEGER        shift, and go to state 3
    TOKEN_NOT_OP         shift, and go to state 67

    arrayIdentifier             go to state 30
    simpleArithmeticExpression  go to state 104
    term                        go to state 71
    factor                      go to state 72
    primary                     go to state 73
    unsignedNumber              go to state 74
    realNumber                  go to state 75
    integer                     go to state 76
    simpleVariable              go to state 32
    variable                    go to state 77
    subscriptedVariable         go to state 34
    identifier                  go to state 105
    booleanTerm                 go to state 188
    booleanFactor               go to state 83
    booleanSecondary            go to state 84
    booleanPrimary              go to state 85
    logicalValue                go to state 86
    relation                    go to state 87
    varIdentifier               go to state 38
    procedureIdentifier         go to state 89
    functionDesignator          go to state 90


state 149

   68 booleanTerm: booleanTerm TOKEN_OR_OP . booleanFactor

    TOKEN_IDENTIFIER     shift, and go to state 1
    TOKEN_LOGICAL_VALUE  shift, and go to state 61
    TOKEN_PLUS           shift, and go to state 62
    TOKEN_MINUS          shift, and go to state 63
    TOKEN_OPEN_BRACKET   shift, and go to state 103
    TOKEN_REAL_NUM       shift, and go to state 65
    TOKEN_INTEGER        shift, and go to state 3
    TOKEN_NOT_OP         shift, and go to state 67

    arrayIdentifier             go to state 30
    simpleArithmeticExpression  go to state 104
    term                        go to state 71
    factor                      go to state 72
    primary                     go to state 73
    unsignedNumber              go to state 74
    realNumber                  go to state 75
    integer                     go to state 76
    simpleVariable              go to state 32
    variable                    go to state 77
    subscriptedVariable         go to state 34
    identifier                  go to state 105
    booleanFactor               go to state 189
    booleanSecondary            go to state 84
    booleanPrimary              go to state 85
    logicalValue                go to state 86
    relation                    go to state 87
    varIdentifier               go to state 38
    procedureIdentifier         go to state 89
    functionDesignator          go to state 90


state 150

   70 booleanFactor: booleanFactor TOKEN_AND_OP . booleanSecondary

    TOKEN_IDENTIFIER     shift, and go to state 1
    TOKEN_LOGICAL_VALUE  shift, and go to state 61
    TOKEN_PLUS           shift, and go to state 62
    TOKEN_MINUS          shift, and go to state 63
    TOKEN_OPEN_BRACKET   shift, and go to state 103
    TOKEN_REAL_NUM       shift, and go to state 65
    TOKEN_INTEGER        shift, and go to state 3
    TOKEN_NOT_OP         shift, and go to state 67

    arrayIdentifier             go to state 30
    simpleArithmeticExpression  go to state 104
    term                        go to state 71
    factor                      go to state 72
    primary                     go to state 73
    unsignedNumber              go to state 74
    realNumber                  go to state 75
    integer                     go to state 76
    simpleVariable              go to state 32
    variable                    go to state 77
    subscriptedVariable         go to state 34
    identifier                  go to state 105
    booleanSecondary            go to state 190
    booleanPrimary              go to state 85
    logicalValue                go to state 86
    relation                    go to state 87
    varIdentifier               go to state 38
    procedureIdentifier         go to state 89
    functionDesignator          go to state 90


state 151

  153 designationalExpression: ifClause simpleDesignationalExpression . TOKEN_ELSE designationalExpression

    TOKEN_ELSE  shift, and go to state 191


state 152

  117 functionDesignator: procedureIdentifier actualParameterPart .

    $default  reduce using rule 117 (functionDesignator)


state 153

  157 switchDesignator: switchIdentifier TOKEN_OPEN_CURLY_BRACKET . subscriptExpression TOKEN_CLOSE_CURLY_BRACKET

    TOKEN_IDENTIFIER    shift, and go to state 1
    TOKEN_PLUS          shift, and go to state 62
    TOKEN_MINUS         shift, and go to state 63
    TOKEN_OPEN_BRACKET  shift, and go to state 132
    TOKEN_REAL_NUM      shift, and go to state 65
    TOKEN_INTEGER       shift, and go to state 3

    arrayIdentifier             go to state 30
    arithmeticExpression        go to state 163
    simpleArithmeticExpression  go to state 164
    term                        go to state 71
    factor                      go to state 72
    primary                     go to state 73
    unsignedNumber              go to state 74
    realNumber                  go to state 75
    integer                     go to state 76
    simpleVariable              go to state 32
    variable                    go to state 77
    subscriptedVariable         go to state 34
    subscriptExpression         go to state 192
    identifier                  go to state 105
    varIdentifier               go to state 38
    procedureIdentifier         go to state 89
    functionDesignator          go to state 90


state 154

  143 procedureHeading: procedureIdentifier @2 . formalParameterPart TOKEN_SEMICOLON $@3 valuePart specificationPart

    TOKEN_OPEN_BRACKET  shift, and go to state 193

    $default  reduce using rule 107 (empty)

    empty                go to state 194
    formalParameterPart  go to state 195


state 155

  144 procedureBody: statement .

    $default  reduce using rule 144 (procedureBody)


state 156

  145 procedureDeclaration: TOKEN_PROCEDURE procedureHeading procedureBody .

    $default  reduce using rule 145 (procedureDeclaration)


state 157

  106 forStatement: TOKEN_FOR variable TOKEN_ASSIGN . arithmeticExpression TOKEN_STEP arithmeticExpression TOKEN_UNTIL arithmeticExpression TOKEN_DO statement

    TOKEN_IDENTIFIER    shift, and go to state 1
    TOKEN_PLUS          shift, and go to state 62
    TOKEN_MINUS         shift, and go to state 63
    TOKEN_OPEN_BRACKET  shift, and go to state 132
    TOKEN_REAL_NUM      shift, and go to state 65
    TOKEN_INTEGER       shift, and go to state 3

    arrayIdentifier             go to state 30
    arithmeticExpression        go to state 196
    simpleArithmeticExpression  go to state 164
    term                        go to state 71
    factor                      go to state 72
    primary                     go to state 73
    unsignedNumber              go to state 74
    realNumber                  go to state 75
    integer                     go to state 76
    simpleVariable              go to state 32
    variable                    go to state 77
    subscriptedVariable         go to state 34
    identifier                  go to state 105
    varIdentifier               go to state 38
    procedureIdentifier         go to state 89
    functionDesignator          go to state 90


state 158

   94 ifClause: TOKEN_IF booleanExpression TOKEN_THEN .

    $default  reduce using rule 94 (ifClause)


state 159

  148 switchDeclaration: TOKEN_SWITCH switchIdentifier TOKEN_ASSIGN . switchList

    TOKEN_IDENTIFIER    shift, and go to state 1
    TOKEN_OPEN_BRACKET  shift, and go to state 98
    TOKEN_COLON         shift, and go to state 66
    TOKEN_IF            shift, and go to state 18

    identifier                     go to state 99
    ifClause                       go to state 88
    switchList                     go to state 197
    switchIdentifier               go to state 91
    designationalExpression        go to state 198
    simpleDesignationalExpression  go to state 93
    switchDesignator               go to state 94


state 160

   27 arraySegment: arrayIdentifier TOKEN_COMMA . arraySegment

    TOKEN_IDENTIFIER  shift, and go to state 1

    arrayIdentifier  go to state 108
    arraySegment     go to state 199
    identifier       go to state 111


state 161

   26 arraySegment: arrayIdentifier TOKEN_OPEN_SQUARE_BRACKET . boundPairList TOKEN_CLOSE_SQUARE_BRACKET

    TOKEN_IDENTIFIER    shift, and go to state 1
    TOKEN_PLUS          shift, and go to state 62
    TOKEN_MINUS         shift, and go to state 63
    TOKEN_OPEN_BRACKET  shift, and go to state 132
    TOKEN_REAL_NUM      shift, and go to state 65
    TOKEN_INTEGER       shift, and go to state 3

    lowerBound                  go to state 200
    boundPair                   go to state 201
    boundPairList               go to state 202
    arrayIdentifier             go to state 30
    arithmeticExpression        go to state 203
    simpleArithmeticExpression  go to state 164
    term                        go to state 71
    factor                      go to state 72
    primary                     go to state 73
    unsignedNumber              go to state 74
    realNumber                  go to state 75
    integer                     go to state 76
    simpleVariable              go to state 32
    variable                    go to state 77
    subscriptedVariable         go to state 34
    identifier                  go to state 105
    varIdentifier               go to state 38
    procedureIdentifier         go to state 89
    functionDesignator          go to state 90


state 162

   29 arrayList: arrayList TOKEN_COMMA . arraySegment

    TOKEN_IDENTIFIER  shift, and go to state 1

    arrayIdentifier  go to state 108
    arraySegment     go to state 204
    identifier       go to state 111


state 163

   60 subscriptExpression: arithmeticExpression .

    $default  reduce using rule 60 (subscriptExpression)


state 164

   35 arithmeticExpression: simpleArithmeticExpression .
   39 simpleArithmeticExpression: simpleArithmeticExpression . TOKEN_PLUS term
   40                           | simpleArithmeticExpression . TOKEN_MINUS term

    TOKEN_PLUS   shift, and go to state 140
    TOKEN_MINUS  shift, and go to state 141

    $default  reduce using rule 35 (arithmeticExpression)


state 165

   57 subscriptedVariable: arrayIdentifier TOKEN_OPEN_SQUARE_BRACKET subscriptList . TOKEN_CLOSE_SQUARE_BRACKET
   59 subscriptList: subscriptList . TOKEN_COMMA subscriptExpression

    TOKEN_COMMA                 shift, and go to state 205
    TOKEN_CLOSE_SQUARE_BRACKET  shift, and go to state 206


state 166

   58 subscriptList: subscriptExpression .

    $default  reduce using rule 58 (subscriptList)


state 167

  104 assignmentStatement: variable TOKEN_ASSIGN arithmeticExpression .

    $default  reduce using rule 104 (assignmentStatement)


state 168

  105 assignmentStatement: variable TOKEN_ASSIGN booleanExpression .

    $default  reduce using rule 105 (assignmentStatement)


state 169

  146 procedureDeclaration: type TOKEN_PROCEDURE procedureHeading . procedureBody

    TOKEN_PRINT       shift, and go to state 14
    TOKEN_IDENTIFIER  shift, and go to state 1
    TOKEN_BEGIN       shift, and go to state 2
    TOKEN_INTEGER     shift, and go to state 3
    TOKEN_GOTO        shift, and go to state 16
    TOKEN_FOR         shift, and go to state 17
    TOKEN_IF          shift, and go to state 18
    TOKEN_RETURN      shift, and go to state 24

    $default  reduce using rule 107 (empty)

    blockHead                 go to state 4
    unlabelledBlock           go to state 5
    block                     go to state 25
    tlabel                    go to state 26
    label                     go to state 8
    unlabelledCompound        go to state 10
    compoundStatement         go to state 27
    arrayIdentifier           go to state 30
    integer                   go to state 12
    simpleVariable            go to state 32
    variable                  go to state 33
    subscriptedVariable       go to state 34
    identifier                go to state 35
    varIdentifier             go to state 38
    unconditionalStatement    go to state 39
    conditionalStatement      go to state 40
    ifStatement               go to state 41
    ifClause                  go to state 42
    basicStatement            go to state 43
    unlabelledBasicStatement  go to state 44
    dummyStatement            go to state 45
    returnStatement           go to state 46
    assignmentStatement       go to state 47
    forStatement              go to state 48
    empty                     go to state 49
    procedureStatement        go to state 50
    procedureIdentifier       go to state 51
    statement                 go to state 155
    procedureBody             go to state 207
    gotoStatement             go to state 54


state 170

   29 arrayList: arrayList . TOKEN_COMMA arraySegment
   31 arrayDeclaration: type TOKEN_ARRAY arrayList .

    TOKEN_COMMA  shift, and go to state 162

    $default  reduce using rule 31 (arrayDeclaration)


state 171

   80 listType: listType TOKEN_COMMA . varIdentifier

    TOKEN_IDENTIFIER  shift, and go to state 1

    identifier     go to state 119
    varIdentifier  go to state 208


state 172

   90 conditionalStatement: ifStatement TOKEN_ELSE statement .

    $default  reduce using rule 90 (conditionalStatement)


state 173

  110 actualParameterPart: TOKEN_OPEN_BRACKET TOKEN_CLOSE_BRACKET .

    $default  reduce using rule 110 (actualParameterPart)


state 174

  114 actualParameter: expression .

    $default  reduce using rule 114 (actualParameter)


state 175

  111 actualParameterPart: TOKEN_OPEN_BRACKET actualParameterList . TOKEN_CLOSE_BRACKET
  113 actualParameterList: actualParameterList . parameterDelimiter actualParameter

    TOKEN_COMMA          shift, and go to state 209
    TOKEN_CLOSE_BRACKET  shift, and go to state 210

    parameterDelimiter  go to state 211


state 176

  112 actualParameterList: actualParameter .

    $default  reduce using rule 112 (actualParameterList)


state 177

   15 compoundTail: statement TOKEN_SEMICOLON compoundTail .

    $default  reduce using rule 15 (compoundTail)


state 178

   49 primary: TOKEN_OPEN_BRACKET arithmeticExpression TOKEN_CLOSE_BRACKET .

    $default  reduce using rule 49 (primary)


state 179

   75 booleanPrimary: TOKEN_OPEN_BRACKET booleanExpression TOKEN_CLOSE_BRACKET .

    $default  reduce using rule 75 (booleanPrimary)


state 180

  156 simpleDesignationalExpression: TOKEN_OPEN_BRACKET designationalExpression TOKEN_CLOSE_BRACKET .

    $default  reduce using rule 156 (simpleDesignationalExpression)


state 181

   39 simpleArithmeticExpression: simpleArithmeticExpression TOKEN_PLUS term .
   42 term: term . TOKEN_MULTIPLY factor
   43     | term . TOKEN_DIVIDE factor

    TOKEN_DIVIDE    shift, and go to state 144
    TOKEN_MULTIPLY  shift, and go to state 145

    $default  reduce using rule 39 (simpleArithmeticExpression)


state 182

   40 simpleArithmeticExpression: simpleArithmeticExpression TOKEN_MINUS term .
   42 term: term . TOKEN_MULTIPLY factor
   43     | term . TOKEN_DIVIDE factor

    TOKEN_DIVIDE    shift, and go to state 144
    TOKEN_MULTIPLY  shift, and go to state 145

    $default  reduce using rule 40 (simpleArithmeticExpression)


state 183

   39 simpleArithmeticExpression: simpleArithmeticExpression . TOKEN_PLUS term
   40                           | simpleArithmeticExpression . TOKEN_MINUS term
   77 relation: simpleArithmeticExpression relationalOperator simpleArithmeticExpression .

    TOKEN_PLUS   shift, and go to state 140
    TOKEN_MINUS  shift, and go to state 141

    $default  reduce using rule 77 (relation)


state 184

   43 term: term TOKEN_DIVIDE factor .
   45 factor: factor . TOKEN_POWER primary

    TOKEN_POWER  shift, and go to state 146

    $default  reduce using rule 43 (term)


state 185

   42 term: term TOKEN_MULTIPLY factor .
   45 factor: factor . TOKEN_POWER primary

    TOKEN_POWER  shift, and go to state 146

    $default  reduce using rule 42 (term)


state 186

   45 factor: factor TOKEN_POWER primary .

    $default  reduce using rule 45 (factor)


state 187

   64 simpleBoolean: simpleBoolean TOKEN_EQUIV implication .
   66 implication: implication . TOKEN_IMPLY booleanTerm

    TOKEN_IMPLY  shift, and go to state 148

    $default  reduce using rule 64 (simpleBoolean)


state 188

   66 implication: implication TOKEN_IMPLY booleanTerm .
   68 booleanTerm: booleanTerm . TOKEN_OR_OP booleanFactor

    TOKEN_OR_OP  shift, and go to state 149

    $default  reduce using rule 66 (implication)


state 189

   68 booleanTerm: booleanTerm TOKEN_OR_OP booleanFactor .
   70 booleanFactor: booleanFactor . TOKEN_AND_OP booleanSecondary

    TOKEN_AND_OP  shift, and go to state 150

    $default  reduce using rule 68 (booleanTerm)


state 190

   70 booleanFactor: booleanFactor TOKEN_AND_OP booleanSecondary .

    $default  reduce using rule 70 (booleanFactor)


state 191

  153 designationalExpression: ifClause simpleDesignationalExpression TOKEN_ELSE . designationalExpression

    TOKEN_IDENTIFIER    shift, and go to state 1
    TOKEN_OPEN_BRACKET  shift, and go to state 98
    TOKEN_COLON         shift, and go to state 66
    TOKEN_IF            shift, and go to state 18

    identifier                     go to state 99
    ifClause                       go to state 88
    switchIdentifier               go to state 91
    designationalExpression        go to state 212
    simpleDesignationalExpression  go to state 93
    switchDesignator               go to state 94


state 192

  157 switchDesignator: switchIdentifier TOKEN_OPEN_CURLY_BRACKET subscriptExpression . TOKEN_CLOSE_CURLY_BRACKET

    TOKEN_CLOSE_CURLY_BRACKET  shift, and go to state 213


state 193

  127 formalParameterPart: TOKEN_OPEN_BRACKET . $@1 formalParameterList TOKEN_CLOSE_BRACKET

    $default  reduce using rule 126 ($@1)

    $@1  go to state 214


state 194

  125 formalParameterPart: empty .

    $default  reduce using rule 125 (formalParameterPart)


state 195

  143 procedureHeading: procedureIdentifier @2 formalParameterPart . TOKEN_SEMICOLON $@3 valuePart specificationPart

    TOKEN_SEMICOLON  shift, and go to state 215


state 196

  106 forStatement: TOKEN_FOR variable TOKEN_ASSIGN arithmeticExpression . TOKEN_STEP arithmeticExpression TOKEN_UNTIL arithmeticExpression TOKEN_DO statement

    TOKEN_STEP  shift, and go to state 216


state 197

  148 switchDeclaration: TOKEN_SWITCH switchIdentifier TOKEN_ASSIGN switchList .
  150 switchList: switchList . TOKEN_COMMA designationalExpression

    TOKEN_COMMA  shift, and go to state 217

    $default  reduce using rule 148 (switchDeclaration)


state 198

  149 switchList: designationalExpression .

    $default  reduce using rule 149 (switchList)


state 199

   27 arraySegment: arrayIdentifier TOKEN_COMMA arraySegment .

    $default  reduce using rule 27 (arraySegment)


state 200

   22 boundPair: lowerBound . TOKEN_COLON upperBound

    TOKEN_COLON  shift, and go to state 218


state 201

   23 boundPairList: boundPair .

    $default  reduce using rule 23 (boundPairList)


state 202

   24 boundPairList: boundPairList . TOKEN_COMMA boundPair
   26 arraySegment: arrayIdentifier TOKEN_OPEN_SQUARE_BRACKET boundPairList . TOKEN_CLOSE_SQUARE_BRACKET

    TOKEN_COMMA                 shift, and go to state 219
    TOKEN_CLOSE_SQUARE_BRACKET  shift, and go to state 220


state 203

   20 lowerBound: arithmeticExpression .

    $default  reduce using rule 20 (lowerBound)


state 204

   29 arrayList: arrayList TOKEN_COMMA arraySegment .

    $default  reduce using rule 29 (arrayList)


state 205

   59 subscriptList: subscriptList TOKEN_COMMA . subscriptExpression

    TOKEN_IDENTIFIER    shift, and go to state 1
    TOKEN_PLUS          shift, and go to state 62
    TOKEN_MINUS         shift, and go to state 63
    TOKEN_OPEN_BRACKET  shift, and go to state 132
    TOKEN_REAL_NUM      shift, and go to state 65
    TOKEN_INTEGER       shift, and go to state 3

    arrayIdentifier             go to state 30
    arithmeticExpression        go to state 163
    simpleArithmeticExpression  go to state 164
    term                        go to state 71
    factor                      go to state 72
    primary                     go to state 73
    unsignedNumber              go to state 74
    realNumber                  go to state 75
    integer                     go to state 76
    simpleVariable              go to state 32
    variable                    go to state 77
    subscriptedVariable         go to state 34
    subscriptExpression         go to state 221
    identifier                  go to state 105
    varIdentifier               go to state 38
    procedureIdentifier         go to state 89
    functionDesignator          go to state 90


state 206

   57 subscriptedVariable: arrayIdentifier TOKEN_OPEN_SQUARE_BRACKET subscriptList TOKEN_CLOSE_SQUARE_BRACKET .

    $default  reduce using rule 57 (subscriptedVariable)


state 207

  146 procedureDeclaration: type TOKEN_PROCEDURE procedureHeading procedureBody .

    $default  reduce using rule 146 (procedureDeclaration)


state 208

   80 listType: listType TOKEN_COMMA varIdentifier .

    $default  reduce using rule 80 (listType)


state 209

  115 parameterDelimiter: TOKEN_COMMA .

    $default  reduce using rule 115 (parameterDelimiter)


state 210

  111 actualParameterPart: TOKEN_OPEN_BRACKET actualParameterList TOKEN_CLOSE_BRACKET .
  116 parameterDelimiter: TOKEN_CLOSE_BRACKET . identifier TOKEN_COLON TOKEN_OPEN_BRACKET

    TOKEN_IDENTIFIER  shift, and go to state 1

    $default  reduce using rule 111 (actualParameterPart)

    identifier  go to state 222


state 211

  113 actualParameterList: actualParameterList parameterDelimiter . actualParameter

    TOKEN_IDENTIFIER     shift, and go to state 1
    TOKEN_LOGICAL_VALUE  shift, and go to state 61
    TOKEN_PLUS           shift, and go to state 62
    TOKEN_MINUS          shift, and go to state 63
    TOKEN_OPEN_BRACKET   shift, and go to state 64
    TOKEN_REAL_NUM       shift, and go to state 65
    TOKEN_INTEGER        shift, and go to state 3
    TOKEN_COLON          shift, and go to state 66
    TOKEN_NOT_OP         shift, and go to state 67
    TOKEN_IF             shift, and go to state 18

    arrayIdentifier                go to state 30
    expression                     go to state 174
    arithmeticExpression           go to state 69
    simpleArithmeticExpression     go to state 70
    term                           go to state 71
    factor                         go to state 72
    primary                        go to state 73
    unsignedNumber                 go to state 74
    realNumber                     go to state 75
    integer                        go to state 76
    simpleVariable                 go to state 32
    variable                       go to state 77
    subscriptedVariable            go to state 34
    identifier                     go to state 78
    booleanExpression              go to state 79
    simpleBoolean                  go to state 80
    implication                    go to state 81
    booleanTerm                    go to state 82
    booleanFactor                  go to state 83
    booleanSecondary               go to state 84
    booleanPrimary                 go to state 85
    logicalValue                   go to state 86
    relation                       go to state 87
    varIdentifier                  go to state 38
    ifClause                       go to state 88
    procedureIdentifier            go to state 89
    actualParameter                go to state 223
    functionDesignator             go to state 90
    switchIdentifier               go to state 91
    designationalExpression        go to state 92
    simpleDesignationalExpression  go to state 93
    switchDesignator               go to state 94


state 212

  153 designationalExpression: ifClause simpleDesignationalExpression TOKEN_ELSE designationalExpression .

    $default  reduce using rule 153 (designationalExpression)


state 213

  157 switchDesignator: switchIdentifier TOKEN_OPEN_CURLY_BRACKET subscriptExpression TOKEN_CLOSE_CURLY_BRACKET .

    $default  reduce using rule 157 (switchDesignator)


state 214

  127 formalParameterPart: TOKEN_OPEN_BRACKET $@1 . formalParameterList TOKEN_CLOSE_BRACKET

    TOKEN_IDENTIFIER  shift, and go to state 1

    identifier           go to state 224
    formalParameter      go to state 225
    formalParameterList  go to state 226


state 215

  143 procedureHeading: procedureIdentifier @2 formalParameterPart TOKEN_SEMICOLON . $@3 valuePart specificationPart

    $default  reduce using rule 142 ($@3)

    $@3  go to state 227


state 216

  106 forStatement: TOKEN_FOR variable TOKEN_ASSIGN arithmeticExpression TOKEN_STEP . arithmeticExpression TOKEN_UNTIL arithmeticExpression TOKEN_DO statement

    TOKEN_IDENTIFIER    shift, and go to state 1
    TOKEN_PLUS          shift, and go to state 62
    TOKEN_MINUS         shift, and go to state 63
    TOKEN_OPEN_BRACKET  shift, and go to state 132
    TOKEN_REAL_NUM      shift, and go to state 65
    TOKEN_INTEGER       shift, and go to state 3

    arrayIdentifier             go to state 30
    arithmeticExpression        go to state 228
    simpleArithmeticExpression  go to state 164
    term                        go to state 71
    factor                      go to state 72
    primary                     go to state 73
    unsignedNumber              go to state 74
    realNumber                  go to state 75
    integer                     go to state 76
    simpleVariable              go to state 32
    variable                    go to state 77
    subscriptedVariable         go to state 34
    identifier                  go to state 105
    varIdentifier               go to state 38
    procedureIdentifier         go to state 89
    functionDesignator          go to state 90


state 217

  150 switchList: switchList TOKEN_COMMA . designationalExpression

    TOKEN_IDENTIFIER    shift, and go to state 1
    TOKEN_OPEN_BRACKET  shift, and go to state 98
    TOKEN_COLON         shift, and go to state 66
    TOKEN_IF            shift, and go to state 18

    identifier                     go to state 99
    ifClause                       go to state 88
    switchIdentifier               go to state 91
    designationalExpression        go to state 229
    simpleDesignationalExpression  go to state 93
    switchDesignator               go to state 94


state 218

   22 boundPair: lowerBound TOKEN_COLON . upperBound

    TOKEN_IDENTIFIER    shift, and go to state 1
    TOKEN_PLUS          shift, and go to state 62
    TOKEN_MINUS         shift, and go to state 63
    TOKEN_OPEN_BRACKET  shift, and go to state 132
    TOKEN_REAL_NUM      shift, and go to state 65
    TOKEN_INTEGER       shift, and go to state 3

    upperBound                  go to state 230
    arrayIdentifier             go to state 30
    arithmeticExpression        go to state 231
    simpleArithmeticExpression  go to state 164
    term                        go to state 71
    factor                      go to state 72
    primary                     go to state 73
    unsignedNumber              go to state 74
    realNumber                  go to state 75
    integer                     go to state 76
    simpleVariable              go to state 32
    variable                    go to state 77
    subscriptedVariable         go to state 34
    identifier                  go to state 105
    varIdentifier               go to state 38
    procedureIdentifier         go to state 89
    functionDesignator          go to state 90


state 219

   24 boundPairList: boundPairList TOKEN_COMMA . boundPair

    TOKEN_IDENTIFIER    shift, and go to state 1
    TOKEN_PLUS          shift, and go to state 62
    TOKEN_MINUS         shift, and go to state 63
    TOKEN_OPEN_BRACKET  shift, and go to state 132
    TOKEN_REAL_NUM      shift, and go to state 65
    TOKEN_INTEGER       shift, and go to state 3

    lowerBound                  go to state 200
    boundPair                   go to state 232
    arrayIdentifier             go to state 30
    arithmeticExpression        go to state 203
    simpleArithmeticExpression  go to state 164
    term                        go to state 71
    factor                      go to state 72
    primary                     go to state 73
    unsignedNumber              go to state 74
    realNumber                  go to state 75
    integer                     go to state 76
    simpleVariable              go to state 32
    variable                    go to state 77
    subscriptedVariable         go to state 34
    identifier                  go to state 105
    varIdentifier               go to state 38
    procedureIdentifier         go to state 89
    functionDesignator          go to state 90


state 220

   26 arraySegment: arrayIdentifier TOKEN_OPEN_SQUARE_BRACKET boundPairList TOKEN_CLOSE_SQUARE_BRACKET .

    $default  reduce using rule 26 (arraySegment)


state 221

   59 subscriptList: subscriptList TOKEN_COMMA subscriptExpression .

    $default  reduce using rule 59 (subscriptList)


state 222

  116 parameterDelimiter: TOKEN_CLOSE_BRACKET identifier . TOKEN_COLON TOKEN_OPEN_BRACKET

    TOKEN_COLON  shift, and go to state 233


state 223

  113 actualParameterList: actualParameterList parameterDelimiter actualParameter .

    $default  reduce using rule 113 (actualParameterList)


state 224

  122 formalParameter: identifier .

    $default  reduce using rule 122 (formalParameter)


state 225

  123 formalParameterList: formalParameter .

    $default  reduce using rule 123 (formalParameterList)


state 226

  124 formalParameterList: formalParameterList . parameterDelimiter formalParameter
  127 formalParameterPart: TOKEN_OPEN_BRACKET $@1 formalParameterList . TOKEN_CLOSE_BRACKET

    TOKEN_COMMA          shift, and go to state 209
    TOKEN_CLOSE_BRACKET  shift, and go to state 234

    parameterDelimiter  go to state 235


state 227

  143 procedureHeading: procedureIdentifier @2 formalParameterPart TOKEN_SEMICOLON $@3 . valuePart specificationPart

    TOKEN_VALUE  shift, and go to state 236

    $default  reduce using rule 107 (empty)

    empty      go to state 237
    valuePart  go to state 238


state 228

  106 forStatement: TOKEN_FOR variable TOKEN_ASSIGN arithmeticExpression TOKEN_STEP arithmeticExpression . TOKEN_UNTIL arithmeticExpression TOKEN_DO statement

    TOKEN_UNTIL  shift, and go to state 239


state 229

  150 switchList: switchList TOKEN_COMMA designationalExpression .

    $default  reduce using rule 150 (switchList)


state 230

   22 boundPair: lowerBound TOKEN_COLON upperBound .

    $default  reduce using rule 22 (boundPair)


state 231

   21 upperBound: arithmeticExpression .

    $default  reduce using rule 21 (upperBound)


state 232

   24 boundPairList: boundPairList TOKEN_COMMA boundPair .

    $default  reduce using rule 24 (boundPairList)


state 233

  116 parameterDelimiter: TOKEN_CLOSE_BRACKET identifier TOKEN_COLON . TOKEN_OPEN_BRACKET

    TOKEN_OPEN_BRACKET  shift, and go to state 240


state 234

  116 parameterDelimiter: TOKEN_CLOSE_BRACKET . identifier TOKEN_COLON TOKEN_OPEN_BRACKET
  127 formalParameterPart: TOKEN_OPEN_BRACKET $@1 formalParameterList TOKEN_CLOSE_BRACKET .

    TOKEN_IDENTIFIER  shift, and go to state 1

    $default  reduce using rule 127 (formalParameterPart)

    identifier  go to state 222


state 235

  124 formalParameterList: formalParameterList parameterDelimiter . formalParameter

    TOKEN_IDENTIFIER  shift, and go to state 1

    identifier       go to state 224
    formalParameter  go to state 241


state 236

  130 valuePart: TOKEN_VALUE . identifierList TOKEN_SEMICOLON

    TOKEN_IDENTIFIER  shift, and go to state 1

    identifier      go to state 242
    identifierList  go to state 243


state 237

  131 valuePart: empty .

    $default  reduce using rule 131 (valuePart)


state 238

  143 procedureHeading: procedureIdentifier @2 formalParameterPart TOKEN_SEMICOLON $@3 valuePart . specificationPart

    TOKEN_SWITCH        shift, and go to state 244
    TOKEN_TYPE_INTEGER  shift, and go to state 20
    TOKEN_TYPE_REAL     shift, and go to state 21
    TOKEN_TYPE_BOOLEAN  shift, and go to state 22
    TOKEN_TYPE_LABEL    shift, and go to state 245

    $default  reduce using rule 107 (empty)

    type                         go to state 246
    empty                        go to state 247
    specifier                    go to state 248
    specificationPart            go to state 249
    specificationIdentifierList  go to state 250


state 239

  106 forStatement: TOKEN_FOR variable TOKEN_ASSIGN arithmeticExpression TOKEN_STEP arithmeticExpression TOKEN_UNTIL . arithmeticExpression TOKEN_DO statement

    TOKEN_IDENTIFIER    shift, and go to state 1
    TOKEN_PLUS          shift, and go to state 62
    TOKEN_MINUS         shift, and go to state 63
    TOKEN_OPEN_BRACKET  shift, and go to state 132
    TOKEN_REAL_NUM      shift, and go to state 65
    TOKEN_INTEGER       shift, and go to state 3

    arrayIdentifier             go to state 30
    arithmeticExpression        go to state 251
    simpleArithmeticExpression  go to state 164
    term                        go to state 71
    factor                      go to state 72
    primary                     go to state 73
    unsignedNumber              go to state 74
    realNumber                  go to state 75
    integer                     go to state 76
    simpleVariable              go to state 32
    variable                    go to state 77
    subscriptedVariable         go to state 34
    identifier                  go to state 105
    varIdentifier               go to state 38
    procedureIdentifier         go to state 89
    functionDesignator          go to state 90


state 240

  116 parameterDelimiter: TOKEN_CLOSE_BRACKET identifier TOKEN_COLON TOKEN_OPEN_BRACKET .

    $default  reduce using rule 116 (parameterDelimiter)


state 241

  124 formalParameterList: formalParameterList parameterDelimiter formalParameter .

    $default  reduce using rule 124 (formalParameterList)


state 242

  128 identifierList: identifier .

    $default  reduce using rule 128 (identifierList)


state 243

  129 identifierList: identifierList . TOKEN_COMMA identifier
  130 valuePart: TOKEN_VALUE identifierList . TOKEN_SEMICOLON

    TOKEN_COMMA      shift, and go to state 252
    TOKEN_SEMICOLON  shift, and go to state 253


state 244

  135 specifier: TOKEN_SWITCH .

    $default  reduce using rule 135 (specifier)


state 245

  134 specifier: TOKEN_TYPE_LABEL .

    $default  reduce using rule 134 (specifier)


state 246

  132 specifier: type .
  133          | type . TOKEN_ARRAY
  136          | type . TOKEN_PROCEDURE

    TOKEN_PROCEDURE  shift, and go to state 254
    TOKEN_ARRAY      shift, and go to state 255

    $default  reduce using rule 132 (specifier)


state 247

  137 specificationPart: empty .

    $default  reduce using rule 137 (specificationPart)


state 248

  139 specificationIdentifierList: specifier . identifierList TOKEN_SEMICOLON

    TOKEN_IDENTIFIER  shift, and go to state 1

    identifier      go to state 242
    identifierList  go to state 256


state 249

  143 procedureHeading: procedureIdentifier @2 formalParameterPart TOKEN_SEMICOLON $@3 valuePart specificationPart .

    $default  reduce using rule 143 (procedureHeading)


state 250

  138 specificationPart: specificationIdentifierList .
  140 specificationIdentifierList: specificationIdentifierList . specifier identifierList TOKEN_SEMICOLON

    TOKEN_SWITCH        shift, and go to state 244
    TOKEN_TYPE_INTEGER  shift, and go to state 20
    TOKEN_TYPE_REAL     shift, and go to state 21
    TOKEN_TYPE_BOOLEAN  shift, and go to state 22
    TOKEN_TYPE_LABEL    shift, and go to state 245

    $default  reduce using rule 138 (specificationPart)

    type       go to state 246
    specifier  go to state 257


state 251

  106 forStatement: TOKEN_FOR variable TOKEN_ASSIGN arithmeticExpression TOKEN_STEP arithmeticExpression TOKEN_UNTIL arithmeticExpression . TOKEN_DO statement

    TOKEN_DO  shift, and go to state 258


state 252

  129 identifierList: identifierList TOKEN_COMMA . identifier

    TOKEN_IDENTIFIER  shift, and go to state 1

    identifier  go to state 259


state 253

  130 valuePart: TOKEN_VALUE identifierList TOKEN_SEMICOLON .

    $default  reduce using rule 130 (valuePart)


state 254

  136 specifier: type TOKEN_PROCEDURE .

    $default  reduce using rule 136 (specifier)


state 255

  133 specifier: type TOKEN_ARRAY .

    $default  reduce using rule 133 (specifier)


state 256

  129 identifierList: identifierList . TOKEN_COMMA identifier
  139 specificationIdentifierList: specifier identifierList . TOKEN_SEMICOLON

    TOKEN_COMMA      shift, and go to state 252
    TOKEN_SEMICOLON  shift, and go to state 260


state 257

  140 specificationIdentifierList: specificationIdentifierList specifier . identifierList TOKEN_SEMICOLON

    TOKEN_IDENTIFIER  shift, and go to state 1

    identifier      go to state 242
    identifierList  go to state 261


state 258

  106 forStatement: TOKEN_FOR variable TOKEN_ASSIGN arithmeticExpression TOKEN_STEP arithmeticExpression TOKEN_UNTIL arithmeticExpression TOKEN_DO . statement

    TOKEN_PRINT       shift, and go to state 14
    TOKEN_IDENTIFIER  shift, and go to state 1
    TOKEN_BEGIN       shift, and go to state 2
    TOKEN_INTEGER     shift, and go to state 3
    TOKEN_GOTO        shift, and go to state 16
    TOKEN_FOR         shift, and go to state 17
    TOKEN_IF          shift, and go to state 18
    TOKEN_RETURN      shift, and go to state 24

    $default  reduce using rule 107 (empty)

    blockHead                 go to state 4
    unlabelledBlock           go to state 5
    block                     go to state 25
    tlabel                    go to state 26
    label                     go to state 8
    unlabelledCompound        go to state 10
    compoundStatement         go to state 27
    arrayIdentifier           go to state 30
    integer                   go to state 12
    simpleVariable            go to state 32
    variable                  go to state 33
    subscriptedVariable       go to state 34
    identifier                go to state 35
    varIdentifier             go to state 38
    unconditionalStatement    go to state 39
    conditionalStatement      go to state 40
    ifStatement               go to state 41
    ifClause                  go to state 42
    basicStatement            go to state 43
    unlabelledBasicStatement  go to state 44
    dummyStatement            go to state 45
    returnStatement           go to state 46
    assignmentStatement       go to state 47
    forStatement              go to state 48
    empty                     go to state 49
    procedureStatement        go to state 50
    procedureIdentifier       go to state 51
    statement                 go to state 262
    gotoStatement             go to state 54


state 259

  129 identifierList: identifierList TOKEN_COMMA identifier .

    $default  reduce using rule 129 (identifierList)


state 260

  139 specificationIdentifierList: specifier identifierList TOKEN_SEMICOLON .

    $default  reduce using rule 139 (specificationIdentifierList)


state 261

  129 identifierList: identifierList . TOKEN_COMMA identifier
  140 specificationIdentifierList: specificationIdentifierList specifier identifierList . TOKEN_SEMICOLON

    TOKEN_COMMA      shift, and go to state 252
    TOKEN_SEMICOLON  shift, and go to state 263


state 262

  106 forStatement: TOKEN_FOR variable TOKEN_ASSIGN arithmeticExpression TOKEN_STEP arithmeticExpression TOKEN_UNTIL arithmeticExpression TOKEN_DO statement .

    $default  reduce using rule 106 (forStatement)


state 263

  140 specificationIdentifierList: specificationIdentifierList specifier identifierList TOKEN_SEMICOLON .

    $default  reduce using rule 140 (specificationIdentifierList)
