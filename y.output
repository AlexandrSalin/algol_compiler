Terminals unused in grammar

   TOKEN_OPERATOR
   TOKEN_OR
   TOKEN_UNDERSCORE
   TOKEN_SPECIFIER
   TOKEN_LIBRARY
   TOKEN_BRACKET
   TOKEN_CONTINUE
   TOKEN_LESS_EQUAL
   TOKEN_GREATER
   TOKEN_GREATER_EQUAL
   TOKEN_EQUAL
   TOKEN_LESS
   TOKEN_NOTEQUAL
   TOKEN_GOTO
   TOKEN_WHILE
   TOKEN_BOOLEAN
   TOKEN_TYPE_OWN
   TOKEN_TYPE_ARRAY
   TOKEN_TYPE_SWITCH
   TOKEN_TYPE_PROCEDURE
   TOKEN_TYPE_STRING
   TOKEN_TYPE_VALUE
   TOKEN_LTRSTRING
   TOKEN_ASSIGN_IDENTIFIER
   TOKEN_LABEL_IDENTIFIER
   TOKEN_BOOL_IDENTIFIER
   TOKEN_NOT_EQUAL
   TOKEN_RELOP


State 87 conflicts: 6 reduce/reduce


Grammar

    0 $accept: program $end

    1 $@1: /* empty */

    2 blockHead: TOKEN_BEGIN $@1 declaration
    3          | blockHead TOKEN_SEMICOLON declaration

    4 unlabelledBlock: blockHead TOKEN_SEMICOLON compoundTail

    5 block: unlabelledBlock
    6      | tlabel block

    7 tlabel: label TOKEN_COLON

    8 label: identifier
    9      | integer

   10 program: compoundStatement
   11        | block

   12 $@2: /* empty */

   13 unlabelledCompound: TOKEN_BEGIN $@2 compoundTail

   14 compoundStatement: unlabelledCompound
   15                  | tlabel compoundStatement

   16 compoundTail: statement TOKEN_END
   17             | statement TOKEN_SEMICOLON compoundTail

   18 declaration: typeDeclaration
   19            | arrayDeclaration
   20            | procedureDeclaration

   21 lowerBound: arithmeticExpression

   22 upperBound: arithmeticExpression

   23 boundPair: lowerBound TOKEN_COLON upperBound

   24 boundPairList: boundPair
   25              | boundPairList TOKEN_COMMA boundPair

   26 arrayIdentifier: identifier

   27 arraySegment: arrayIdentifier TOKEN_OPEN_SQUARE_BRACKET boundPairList TOKEN_CLOSE_SQUARE_BRACKET
   28             | arrayIdentifier TOKEN_COMMA arraySegment

   29 arrayList: arraySegment
   30          | arrayList TOKEN_COMMA arraySegment

   31 arrayDeclaration: TOKEN_ARRAY arrayList
   32                 | type TOKEN_ARRAY arrayList

   33 expression: arithmeticExpression
   34           | booleanExpression

   35 arithmeticExpression: simpleArithmeticExpression
   36                     | ifClause simpleArithmeticExpression TOKEN_ELSE arithmeticExpression

   37 simpleArithmeticExpression: term
   38                           | TOKEN_PLUS term
   39                           | TOKEN_MINUS term
   40                           | simpleArithmeticExpression TOKEN_PLUS term
   41                           | simpleArithmeticExpression TOKEN_MINUS term

   42 term: factor
   43     | term TOKEN_MULTIPLY factor
   44     | term TOKEN_DIVIDE factor

   45 factor: primary
   46       | factor TOKEN_POWER primary

   47 primary: unsignedNumber
   48        | variable
   49        | TOKEN_OPEN_BRACKET arithmeticExpression TOKEN_CLOSE_BRACKET

   50 unsignedNumber: realNumber
   51               | integer

   52 realNumber: TOKEN_REAL_NUM

   53 integer: TOKEN_INTEGER

   54 simpleVariable: varIdentifier

   55 variable: simpleVariable
   56         | subscriptedVariable

   57 subscriptedVariable: arrayIdentifier TOKEN_OPEN_SQUARE_BRACKET subscriptList TOKEN_CLOSE_SQUARE_BRACKET

   58 subscriptList: subscriptExpression
   59              | subscriptList TOKEN_COMMA subscriptExpression

   60 subscriptExpression: arithmeticExpression

   61 identifier: TOKEN_IDENTIFIER

   62 booleanExpression: simpleBoolean

   63 simpleBoolean: implication
   64              | simpleBoolean TOKEN_EQUIV implication

   65 implication: booleanTerm
   66            | implication TOKEN_IMPLY booleanTerm

   67 booleanTerm: booleanFactor
   68            | booleanTerm TOKEN_OR_OP booleanFactor

   69 booleanFactor: booleanSecondary
   70              | booleanFactor TOKEN_AND_OP booleanSecondary

   71 booleanSecondary: booleanPrimary
   72                 | TOKEN_NOT_OP booleanPrimary

   73 booleanPrimary: logicalValue
   74               | boolVariable
   75               | relation
   76               | TOKEN_OPEN_BRACKET booleanExpression TOKEN_CLOSE_BRACKET

   77 logicalValue: TOKEN_LOGICAL_VALUE

   78 relation: simpleArithmeticExpression relationalOperator simpleArithmeticExpression

   79 boolVariable: variable

   80 relationalOperator: TOKEN_REL_OP

   81 listType: varIdentifier

   82 @3: /* empty */

   83 listType: listType TOKEN_COMMA @3 varIdentifier

   84 type: TOKEN_TYPE_REAL
   85     | TOKEN_TYPE_INTEGER
   86     | TOKEN_TYPE_BOOLEAN

   87 typeDeclaration: type listType

   88 varIdentifier: identifier

   89 unconditionalStatement: basicStatement
   90                       | compoundStatement
   91                       | block

   92 conditionalStatement: ifStatement
   93                     | ifClause unconditionalStatement TOKEN_ELSE statement
   94                     | ifClause forStatement
   95                     | tlabel conditionalStatement

   96 ifStatement: ifClause unconditionalStatement

   97 ifClause: TOKEN_IF booleanExpression TOKEN_THEN

   98 basicStatement: unlabelledBasicStatement
   99               | label basicStatement

  100 unlabelledBasicStatement: assignmentStatement
  101                         | dummyStatement

  102 @4: /* empty */

  103 unlabelledBasicStatement: procedureStatement @4 returnStatement

  104 dummyStatement: empty

  105 returnStatement: TOKEN_RETURN expression

  106 assignmentStatement: variable TOKEN_ASSIGN arithmeticExpression
  107                    | variable TOKEN_ASSIGN booleanExpression

  108 forStatement: TOKEN_FOR variable TOKEN_ASSIGN arithmeticExpression TOKEN_STEP arithmeticExpression TOKEN_UNTIL arithmeticExpression TOKEN_DO statement

  109 empty: /* empty */

  110 procedureStatement: procedureIdentifier actualParameterPart

  111 procedureIdentifier: identifier

  112 actualParameterPart: empty
  113                    | TOKEN_OPEN_BRACKET actualParameterList TOKEN_CLOSE_BRACKET

  114 actualParameterList: actualParameter
  115                    | actualParameterList parameterDelimiter actualParameter

  116 actualParameter: expression

  117 parameterDelimiter: TOKEN_COMMA
  118                   | TOKEN_CLOSE_SQUARE_BRACKET identifier TOKEN_COLON TOKEN_OPEN_SQUARE_BRACKET

  119 statement: unconditionalStatement
  120          | conditionalStatement
  121          | forStatement
  122          | TOKEN_PRINT expression

  123 formalParameter: identifier

  124 formalParameterList: formalParameter

  125 $@5: /* empty */

  126 formalParameterList: formalParameterList parameterDelimiter $@5 formalParameter

  127 formalParameterPart: empty

  128 $@6: /* empty */

  129 formalParameterPart: TOKEN_OPEN_BRACKET $@6 formalParameterList TOKEN_CLOSE_BRACKET

  130 identifierList: identifier
  131               | identifierList TOKEN_COMMA identifier

  132 valuePart: TOKEN_VALUE identifierList TOKEN_SEMICOLON
  133          | empty

  134 specifier: type
  135          | type TOKEN_ARRAY
  136          | TOKEN_TYPE_LABEL
  137          | TOKEN_SWITCH
  138          | type TOKEN_PROCEDURE

  139 specificationPart: empty
  140                  | specificationIdentifierList

  141 specificationIdentifierList: specifier identifierList TOKEN_SEMICOLON
  142                            | specificationIdentifierList specifier identifierList TOKEN_SEMICOLON

  143 @7: /* empty */

  144 $@8: /* empty */

  145 procedureHeading: procedureIdentifier @7 formalParameterPart TOKEN_SEMICOLON $@8 valuePart specificationPart

  146 procedureBody: statement

  147 procedureDeclaration: TOKEN_PROCEDURE procedureHeading procedureBody
  148                     | type TOKEN_PROCEDURE procedureHeading procedureBody


Terminals, with rules where they appear

$end (0) 0
error (256)
TOKEN_PRINT (258) 122
TOKEN_IDENTIFIER (259) 61
TOKEN_BEGIN (260) 2 13
TOKEN_END (261) 16
TOKEN_LOGICAL_VALUE (262) 77
TOKEN_OPERATOR (263)
TOKEN_OR (264)
TOKEN_PROCEDURE (265) 138 147 148
TOKEN_PLUS (266) 38 40
TOKEN_MINUS (267) 39 41
TOKEN_DIVIDE (268) 44
TOKEN_POWER (269) 46
TOKEN_MULTIPLY (270) 43
TOKEN_COMMA (271) 25 28 30 59 83 117 131
TOKEN_UNDERSCORE (272)
TOKEN_SPECIFIER (273)
TOKEN_LIBRARY (274)
TOKEN_BRACKET (275)
TOKEN_OPEN_BRACKET (276) 49 76 113 129
TOKEN_CLOSE_BRACKET (277) 49 76 113 129
TOKEN_OPEN_SQUARE_BRACKET (278) 27 57 118
TOKEN_CLOSE_SQUARE_BRACKET (279) 27 57 118
TOKEN_CONTINUE (280)
TOKEN_REAL_NUM (281) 52
TOKEN_INTEGER (282) 53
TOKEN_COLON (283) 7 23 118
TOKEN_REL_OP (284) 80
TOKEN_LESS_EQUAL (285)
TOKEN_GREATER (286)
TOKEN_GREATER_EQUAL (287)
TOKEN_EQUAL (288)
TOKEN_LESS (289)
TOKEN_NOTEQUAL (290)
TOKEN_EQUIV (291) 64
TOKEN_AND_OP (292) 70
TOKEN_OR_OP (293) 68
TOKEN_NOT_OP (294) 72
TOKEN_GOTO (295)
TOKEN_FOR (296) 108
TOKEN_DO (297) 108
TOKEN_WHILE (298)
TOKEN_STEP (299) 108
TOKEN_UNTIL (300) 108
TOKEN_IF (301) 97
TOKEN_THEN (302) 97
TOKEN_ELSE (303) 36 93
TOKEN_SWITCH (304) 137
TOKEN_VALUE (305) 132
TOKEN_BOOLEAN (306)
TOKEN_TYPE_OWN (307)
TOKEN_TYPE_INTEGER (308) 85
TOKEN_TYPE_REAL (309) 84
TOKEN_TYPE_BOOLEAN (310) 86
TOKEN_TYPE_ARRAY (311)
TOKEN_TYPE_SWITCH (312)
TOKEN_TYPE_PROCEDURE (313)
TOKEN_TYPE_STRING (314)
TOKEN_TYPE_LABEL (315) 136
TOKEN_TYPE_VALUE (316)
TOKEN_ARRAY (317) 31 32 135
TOKEN_IMPLY (318) 66
TOKEN_SEMICOLON (319) 3 4 17 132 141 142 145
TOKEN_LTRSTRING (320)
TOKEN_RETURN (321) 105
TOKEN_ASSIGN_IDENTIFIER (322)
TOKEN_LABEL_IDENTIFIER (323)
TOKEN_BOOL_IDENTIFIER (324)
TOKEN_ASSIGN (325) 106 107 108
TOKEN_NOT_EQUAL (326)
TOKEN_RELOP (327)


Nonterminals, with rules where they appear

$accept (73)
    on left: 0
blockHead (74)
    on left: 2 3, on right: 3 4
$@1 (75)
    on left: 1, on right: 2
unlabelledBlock (76)
    on left: 4, on right: 5
block (77)
    on left: 5 6, on right: 6 11 91
tlabel (78)
    on left: 7, on right: 6 15 95
label (79)
    on left: 8 9, on right: 7 99
program (80)
    on left: 10 11, on right: 0
unlabelledCompound (81)
    on left: 13, on right: 14
$@2 (82)
    on left: 12, on right: 13
compoundStatement (83)
    on left: 14 15, on right: 10 15 90
compoundTail (84)
    on left: 16 17, on right: 4 13 17
declaration (85)
    on left: 18 19 20, on right: 2 3
lowerBound (86)
    on left: 21, on right: 23
upperBound (87)
    on left: 22, on right: 23
boundPair (88)
    on left: 23, on right: 24 25
boundPairList (89)
    on left: 24 25, on right: 25 27
arrayIdentifier (90)
    on left: 26, on right: 27 28 57
arraySegment (91)
    on left: 27 28, on right: 28 29 30
arrayList (92)
    on left: 29 30, on right: 30 31 32
arrayDeclaration (93)
    on left: 31 32, on right: 19
expression (94)
    on left: 33 34, on right: 105 116 122
arithmeticExpression (95)
    on left: 35 36, on right: 21 22 33 36 49 60 106 108
simpleArithmeticExpression (96)
    on left: 37 38 39 40 41, on right: 35 36 40 41 78
term (97)
    on left: 42 43 44, on right: 37 38 39 40 41 43 44
factor (98)
    on left: 45 46, on right: 42 43 44 46
primary (99)
    on left: 47 48 49, on right: 45 46
unsignedNumber (100)
    on left: 50 51, on right: 47
realNumber (101)
    on left: 52, on right: 50
integer (102)
    on left: 53, on right: 9 51
simpleVariable (103)
    on left: 54, on right: 55
variable (104)
    on left: 55 56, on right: 48 79 106 107 108
subscriptedVariable (105)
    on left: 57, on right: 56
subscriptList (106)
    on left: 58 59, on right: 57 59
subscriptExpression (107)
    on left: 60, on right: 58 59
identifier (108)
    on left: 61, on right: 8 26 88 111 118 123 130 131
booleanExpression (109)
    on left: 62, on right: 34 76 97 107
simpleBoolean (110)
    on left: 63 64, on right: 62 64
implication (111)
    on left: 65 66, on right: 63 64 66
booleanTerm (112)
    on left: 67 68, on right: 65 66 68
booleanFactor (113)
    on left: 69 70, on right: 67 68 70
booleanSecondary (114)
    on left: 71 72, on right: 69 70
booleanPrimary (115)
    on left: 73 74 75 76, on right: 71 72
logicalValue (116)
    on left: 77, on right: 73
relation (117)
    on left: 78, on right: 75
boolVariable (118)
    on left: 79, on right: 74
relationalOperator (119)
    on left: 80, on right: 78
listType (120)
    on left: 81 83, on right: 83 87
@3 (121)
    on left: 82, on right: 83
type (122)
    on left: 84 85 86, on right: 32 87 134 135 138 148
typeDeclaration (123)
    on left: 87, on right: 18
varIdentifier (124)
    on left: 88, on right: 54 81 83
unconditionalStatement (125)
    on left: 89 90 91, on right: 93 96 119
conditionalStatement (126)
    on left: 92 93 94 95, on right: 95 120
ifStatement (127)
    on left: 96, on right: 92
ifClause (128)
    on left: 97, on right: 36 93 94 96
basicStatement (129)
    on left: 98 99, on right: 89 99
unlabelledBasicStatement (130)
    on left: 100 101 103, on right: 98
@4 (131)
    on left: 102, on right: 103
dummyStatement (132)
    on left: 104, on right: 101
returnStatement (133)
    on left: 105, on right: 103
assignmentStatement (134)
    on left: 106 107, on right: 100
forStatement (135)
    on left: 108, on right: 94 121
empty (136)
    on left: 109, on right: 104 112 127 133 139
procedureStatement (137)
    on left: 110, on right: 103
procedureIdentifier (138)
    on left: 111, on right: 110 145
actualParameterPart (139)
    on left: 112 113, on right: 110
actualParameterList (140)
    on left: 114 115, on right: 113 115
actualParameter (141)
    on left: 116, on right: 114 115
parameterDelimiter (142)
    on left: 117 118, on right: 115 126
statement (143)
    on left: 119 120 121 122, on right: 16 17 93 108 146
formalParameter (144)
    on left: 123, on right: 124 126
formalParameterList (145)
    on left: 124 126, on right: 126 129
$@5 (146)
    on left: 125, on right: 126
formalParameterPart (147)
    on left: 127 129, on right: 145
$@6 (148)
    on left: 128, on right: 129
identifierList (149)
    on left: 130 131, on right: 131 132 141 142
valuePart (150)
    on left: 132 133, on right: 145
specifier (151)
    on left: 134 135 136 137 138, on right: 141 142
specificationPart (152)
    on left: 139 140, on right: 145
specificationIdentifierList (153)
    on left: 141 142, on right: 140 142
procedureHeading (154)
    on left: 145, on right: 147 148
@7 (155)
    on left: 143, on right: 145
$@8 (156)
    on left: 144, on right: 145
procedureBody (157)
    on left: 146, on right: 147 148
procedureDeclaration (158)
    on left: 147 148, on right: 20


state 0

    0 $accept: . program $end

    TOKEN_IDENTIFIER  shift, and go to state 1
    TOKEN_BEGIN       shift, and go to state 2
    TOKEN_INTEGER     shift, and go to state 3

    blockHead           go to state 4
    unlabelledBlock     go to state 5
    block               go to state 6
    tlabel              go to state 7
    label               go to state 8
    program             go to state 9
    unlabelledCompound  go to state 10
    compoundStatement   go to state 11
    integer             go to state 12
    identifier          go to state 13


state 1

   61 identifier: TOKEN_IDENTIFIER .

    $default  reduce using rule 61 (identifier)


state 2

    2 blockHead: TOKEN_BEGIN . $@1 declaration
   13 unlabelledCompound: TOKEN_BEGIN . $@2 compoundTail

    TOKEN_PROCEDURE     reduce using rule 1 ($@1)
    TOKEN_TYPE_INTEGER  reduce using rule 1 ($@1)
    TOKEN_TYPE_REAL     reduce using rule 1 ($@1)
    TOKEN_TYPE_BOOLEAN  reduce using rule 1 ($@1)
    TOKEN_ARRAY         reduce using rule 1 ($@1)
    $default            reduce using rule 12 ($@2)

    $@1  go to state 14
    $@2  go to state 15


state 3

   53 integer: TOKEN_INTEGER .

    $default  reduce using rule 53 (integer)


state 4

    3 blockHead: blockHead . TOKEN_SEMICOLON declaration
    4 unlabelledBlock: blockHead . TOKEN_SEMICOLON compoundTail

    TOKEN_SEMICOLON  shift, and go to state 16


state 5

    5 block: unlabelledBlock .

    $default  reduce using rule 5 (block)


state 6

   11 program: block .

    $default  reduce using rule 11 (program)


state 7

    6 block: tlabel . block
   15 compoundStatement: tlabel . compoundStatement

    TOKEN_IDENTIFIER  shift, and go to state 1
    TOKEN_BEGIN       shift, and go to state 2
    TOKEN_INTEGER     shift, and go to state 3

    blockHead           go to state 4
    unlabelledBlock     go to state 5
    block               go to state 17
    tlabel              go to state 7
    label               go to state 8
    unlabelledCompound  go to state 10
    compoundStatement   go to state 18
    integer             go to state 12
    identifier          go to state 13


state 8

    7 tlabel: label . TOKEN_COLON

    TOKEN_COLON  shift, and go to state 19


state 9

    0 $accept: program . $end

    $end  shift, and go to state 20


state 10

   14 compoundStatement: unlabelledCompound .

    $default  reduce using rule 14 (compoundStatement)


state 11

   10 program: compoundStatement .

    $default  reduce using rule 10 (program)


state 12

    9 label: integer .

    $default  reduce using rule 9 (label)


state 13

    8 label: identifier .

    $default  reduce using rule 8 (label)


state 14

    2 blockHead: TOKEN_BEGIN $@1 . declaration

    TOKEN_PROCEDURE     shift, and go to state 21
    TOKEN_TYPE_INTEGER  shift, and go to state 22
    TOKEN_TYPE_REAL     shift, and go to state 23
    TOKEN_TYPE_BOOLEAN  shift, and go to state 24
    TOKEN_ARRAY         shift, and go to state 25

    declaration           go to state 26
    arrayDeclaration      go to state 27
    type                  go to state 28
    typeDeclaration       go to state 29
    procedureDeclaration  go to state 30


state 15

   13 unlabelledCompound: TOKEN_BEGIN $@2 . compoundTail

    TOKEN_PRINT       shift, and go to state 31
    TOKEN_IDENTIFIER  shift, and go to state 1
    TOKEN_BEGIN       shift, and go to state 2
    TOKEN_INTEGER     shift, and go to state 3
    TOKEN_FOR         shift, and go to state 32
    TOKEN_IF          shift, and go to state 33

    $default  reduce using rule 109 (empty)

    blockHead                 go to state 4
    unlabelledBlock           go to state 5
    block                     go to state 34
    tlabel                    go to state 35
    label                     go to state 36
    unlabelledCompound        go to state 10
    compoundStatement         go to state 37
    compoundTail              go to state 38
    arrayIdentifier           go to state 39
    integer                   go to state 12
    simpleVariable            go to state 40
    variable                  go to state 41
    subscriptedVariable       go to state 42
    identifier                go to state 43
    varIdentifier             go to state 44
    unconditionalStatement    go to state 45
    conditionalStatement      go to state 46
    ifStatement               go to state 47
    ifClause                  go to state 48
    basicStatement            go to state 49
    unlabelledBasicStatement  go to state 50
    dummyStatement            go to state 51
    assignmentStatement       go to state 52
    forStatement              go to state 53
    empty                     go to state 54
    procedureStatement        go to state 55
    procedureIdentifier       go to state 56
    statement                 go to state 57


state 16

    3 blockHead: blockHead TOKEN_SEMICOLON . declaration
    4 unlabelledBlock: blockHead TOKEN_SEMICOLON . compoundTail

    TOKEN_PRINT         shift, and go to state 31
    TOKEN_IDENTIFIER    shift, and go to state 1
    TOKEN_BEGIN         shift, and go to state 2
    TOKEN_PROCEDURE     shift, and go to state 21
    TOKEN_INTEGER       shift, and go to state 3
    TOKEN_FOR           shift, and go to state 32
    TOKEN_IF            shift, and go to state 33
    TOKEN_TYPE_INTEGER  shift, and go to state 22
    TOKEN_TYPE_REAL     shift, and go to state 23
    TOKEN_TYPE_BOOLEAN  shift, and go to state 24
    TOKEN_ARRAY         shift, and go to state 25

    $default  reduce using rule 109 (empty)

    blockHead                 go to state 4
    unlabelledBlock           go to state 5
    block                     go to state 34
    tlabel                    go to state 35
    label                     go to state 36
    unlabelledCompound        go to state 10
    compoundStatement         go to state 37
    compoundTail              go to state 58
    declaration               go to state 59
    arrayIdentifier           go to state 39
    arrayDeclaration          go to state 27
    integer                   go to state 12
    simpleVariable            go to state 40
    variable                  go to state 41
    subscriptedVariable       go to state 42
    identifier                go to state 43
    type                      go to state 28
    typeDeclaration           go to state 29
    varIdentifier             go to state 44
    unconditionalStatement    go to state 45
    conditionalStatement      go to state 46
    ifStatement               go to state 47
    ifClause                  go to state 48
    basicStatement            go to state 49
    unlabelledBasicStatement  go to state 50
    dummyStatement            go to state 51
    assignmentStatement       go to state 52
    forStatement              go to state 53
    empty                     go to state 54
    procedureStatement        go to state 55
    procedureIdentifier       go to state 56
    statement                 go to state 57
    procedureDeclaration      go to state 30


state 17

    6 block: tlabel block .

    $default  reduce using rule 6 (block)


state 18

   15 compoundStatement: tlabel compoundStatement .

    $default  reduce using rule 15 (compoundStatement)


state 19

    7 tlabel: label TOKEN_COLON .

    $default  reduce using rule 7 (tlabel)


state 20

    0 $accept: program $end .

    $default  accept


state 21

  147 procedureDeclaration: TOKEN_PROCEDURE . procedureHeading procedureBody

    TOKEN_IDENTIFIER  shift, and go to state 1

    identifier           go to state 60
    procedureIdentifier  go to state 61
    procedureHeading     go to state 62


state 22

   85 type: TOKEN_TYPE_INTEGER .

    $default  reduce using rule 85 (type)


state 23

   84 type: TOKEN_TYPE_REAL .

    $default  reduce using rule 84 (type)


state 24

   86 type: TOKEN_TYPE_BOOLEAN .

    $default  reduce using rule 86 (type)


state 25

   31 arrayDeclaration: TOKEN_ARRAY . arrayList

    TOKEN_IDENTIFIER  shift, and go to state 1

    arrayIdentifier  go to state 63
    arraySegment     go to state 64
    arrayList        go to state 65
    identifier       go to state 66


state 26

    2 blockHead: TOKEN_BEGIN $@1 declaration .

    $default  reduce using rule 2 (blockHead)


state 27

   19 declaration: arrayDeclaration .

    $default  reduce using rule 19 (declaration)


state 28

   32 arrayDeclaration: type . TOKEN_ARRAY arrayList
   87 typeDeclaration: type . listType
  148 procedureDeclaration: type . TOKEN_PROCEDURE procedureHeading procedureBody

    TOKEN_IDENTIFIER  shift, and go to state 1
    TOKEN_PROCEDURE   shift, and go to state 67
    TOKEN_ARRAY       shift, and go to state 68

    identifier     go to state 69
    listType       go to state 70
    varIdentifier  go to state 71


state 29

   18 declaration: typeDeclaration .

    $default  reduce using rule 18 (declaration)


state 30

   20 declaration: procedureDeclaration .

    $default  reduce using rule 20 (declaration)


state 31

  122 statement: TOKEN_PRINT . expression

    TOKEN_IDENTIFIER     shift, and go to state 1
    TOKEN_LOGICAL_VALUE  shift, and go to state 72
    TOKEN_PLUS           shift, and go to state 73
    TOKEN_MINUS          shift, and go to state 74
    TOKEN_OPEN_BRACKET   shift, and go to state 75
    TOKEN_REAL_NUM       shift, and go to state 76
    TOKEN_INTEGER        shift, and go to state 3
    TOKEN_NOT_OP         shift, and go to state 77
    TOKEN_IF             shift, and go to state 33

    arrayIdentifier             go to state 39
    expression                  go to state 78
    arithmeticExpression        go to state 79
    simpleArithmeticExpression  go to state 80
    term                        go to state 81
    factor                      go to state 82
    primary                     go to state 83
    unsignedNumber              go to state 84
    realNumber                  go to state 85
    integer                     go to state 86
    simpleVariable              go to state 40
    variable                    go to state 87
    subscriptedVariable         go to state 42
    identifier                  go to state 88
    booleanExpression           go to state 89
    simpleBoolean               go to state 90
    implication                 go to state 91
    booleanTerm                 go to state 92
    booleanFactor               go to state 93
    booleanSecondary            go to state 94
    booleanPrimary              go to state 95
    logicalValue                go to state 96
    relation                    go to state 97
    boolVariable                go to state 98
    varIdentifier               go to state 44
    ifClause                    go to state 99


state 32

  108 forStatement: TOKEN_FOR . variable TOKEN_ASSIGN arithmeticExpression TOKEN_STEP arithmeticExpression TOKEN_UNTIL arithmeticExpression TOKEN_DO statement

    TOKEN_IDENTIFIER  shift, and go to state 1

    arrayIdentifier      go to state 39
    simpleVariable       go to state 40
    variable             go to state 100
    subscriptedVariable  go to state 42
    identifier           go to state 88
    varIdentifier        go to state 44


state 33

   97 ifClause: TOKEN_IF . booleanExpression TOKEN_THEN

    TOKEN_IDENTIFIER     shift, and go to state 1
    TOKEN_LOGICAL_VALUE  shift, and go to state 72
    TOKEN_PLUS           shift, and go to state 73
    TOKEN_MINUS          shift, and go to state 74
    TOKEN_OPEN_BRACKET   shift, and go to state 75
    TOKEN_REAL_NUM       shift, and go to state 76
    TOKEN_INTEGER        shift, and go to state 3
    TOKEN_NOT_OP         shift, and go to state 77

    arrayIdentifier             go to state 39
    simpleArithmeticExpression  go to state 101
    term                        go to state 81
    factor                      go to state 82
    primary                     go to state 83
    unsignedNumber              go to state 84
    realNumber                  go to state 85
    integer                     go to state 86
    simpleVariable              go to state 40
    variable                    go to state 87
    subscriptedVariable         go to state 42
    identifier                  go to state 88
    booleanExpression           go to state 102
    simpleBoolean               go to state 90
    implication                 go to state 91
    booleanTerm                 go to state 92
    booleanFactor               go to state 93
    booleanSecondary            go to state 94
    booleanPrimary              go to state 95
    logicalValue                go to state 96
    relation                    go to state 97
    boolVariable                go to state 98
    varIdentifier               go to state 44


state 34

   91 unconditionalStatement: block .

    $default  reduce using rule 91 (unconditionalStatement)


state 35

    6 block: tlabel . block
   15 compoundStatement: tlabel . compoundStatement
   95 conditionalStatement: tlabel . conditionalStatement

    TOKEN_IDENTIFIER  shift, and go to state 1
    TOKEN_BEGIN       shift, and go to state 2
    TOKEN_INTEGER     shift, and go to state 3
    TOKEN_IF          shift, and go to state 33

    blockHead             go to state 4
    unlabelledBlock       go to state 5
    block                 go to state 17
    tlabel                go to state 35
    label                 go to state 8
    unlabelledCompound    go to state 10
    compoundStatement     go to state 18
    integer               go to state 12
    identifier            go to state 13
    conditionalStatement  go to state 103
    ifStatement           go to state 47
    ifClause              go to state 48


state 36

    7 tlabel: label . TOKEN_COLON
   99 basicStatement: label . basicStatement

    TOKEN_IDENTIFIER  shift, and go to state 1
    TOKEN_INTEGER     shift, and go to state 3
    TOKEN_COLON       shift, and go to state 19

    $default  reduce using rule 109 (empty)

    label                     go to state 104
    arrayIdentifier           go to state 39
    integer                   go to state 12
    simpleVariable            go to state 40
    variable                  go to state 41
    subscriptedVariable       go to state 42
    identifier                go to state 43
    varIdentifier             go to state 44
    basicStatement            go to state 105
    unlabelledBasicStatement  go to state 50
    dummyStatement            go to state 51
    assignmentStatement       go to state 52
    empty                     go to state 54
    procedureStatement        go to state 55
    procedureIdentifier       go to state 56


state 37

   90 unconditionalStatement: compoundStatement .

    $default  reduce using rule 90 (unconditionalStatement)


state 38

   13 unlabelledCompound: TOKEN_BEGIN $@2 compoundTail .

    $default  reduce using rule 13 (unlabelledCompound)


state 39

   57 subscriptedVariable: arrayIdentifier . TOKEN_OPEN_SQUARE_BRACKET subscriptList TOKEN_CLOSE_SQUARE_BRACKET

    TOKEN_OPEN_SQUARE_BRACKET  shift, and go to state 106


state 40

   55 variable: simpleVariable .

    $default  reduce using rule 55 (variable)


state 41

  106 assignmentStatement: variable . TOKEN_ASSIGN arithmeticExpression
  107                    | variable . TOKEN_ASSIGN booleanExpression

    TOKEN_ASSIGN  shift, and go to state 107


state 42

   56 variable: subscriptedVariable .

    $default  reduce using rule 56 (variable)


state 43

    8 label: identifier .
   26 arrayIdentifier: identifier .
   88 varIdentifier: identifier .
  111 procedureIdentifier: identifier .

    TOKEN_OPEN_BRACKET         reduce using rule 111 (procedureIdentifier)
    TOKEN_OPEN_SQUARE_BRACKET  reduce using rule 26 (arrayIdentifier)
    TOKEN_RETURN               reduce using rule 111 (procedureIdentifier)
    TOKEN_ASSIGN               reduce using rule 88 (varIdentifier)
    $default                   reduce using rule 8 (label)


state 44

   54 simpleVariable: varIdentifier .

    $default  reduce using rule 54 (simpleVariable)


state 45

  119 statement: unconditionalStatement .

    $default  reduce using rule 119 (statement)


state 46

  120 statement: conditionalStatement .

    $default  reduce using rule 120 (statement)


state 47

   92 conditionalStatement: ifStatement .

    $default  reduce using rule 92 (conditionalStatement)


state 48

   93 conditionalStatement: ifClause . unconditionalStatement TOKEN_ELSE statement
   94                     | ifClause . forStatement
   96 ifStatement: ifClause . unconditionalStatement

    TOKEN_IDENTIFIER  shift, and go to state 1
    TOKEN_BEGIN       shift, and go to state 2
    TOKEN_INTEGER     shift, and go to state 3
    TOKEN_FOR         shift, and go to state 32

    $default  reduce using rule 109 (empty)

    blockHead                 go to state 4
    unlabelledBlock           go to state 5
    block                     go to state 34
    tlabel                    go to state 7
    label                     go to state 36
    unlabelledCompound        go to state 10
    compoundStatement         go to state 37
    arrayIdentifier           go to state 39
    integer                   go to state 12
    simpleVariable            go to state 40
    variable                  go to state 41
    subscriptedVariable       go to state 42
    identifier                go to state 43
    varIdentifier             go to state 44
    unconditionalStatement    go to state 108
    basicStatement            go to state 49
    unlabelledBasicStatement  go to state 50
    dummyStatement            go to state 51
    assignmentStatement       go to state 52
    forStatement              go to state 109
    empty                     go to state 54
    procedureStatement        go to state 55
    procedureIdentifier       go to state 56


state 49

   89 unconditionalStatement: basicStatement .

    $default  reduce using rule 89 (unconditionalStatement)


state 50

   98 basicStatement: unlabelledBasicStatement .

    $default  reduce using rule 98 (basicStatement)


state 51

  101 unlabelledBasicStatement: dummyStatement .

    $default  reduce using rule 101 (unlabelledBasicStatement)


state 52

  100 unlabelledBasicStatement: assignmentStatement .

    $default  reduce using rule 100 (unlabelledBasicStatement)


state 53

  121 statement: forStatement .

    $default  reduce using rule 121 (statement)


state 54

  104 dummyStatement: empty .

    $default  reduce using rule 104 (dummyStatement)


state 55

  103 unlabelledBasicStatement: procedureStatement . @4 returnStatement

    $default  reduce using rule 102 (@4)

    @4  go to state 110


state 56

  110 procedureStatement: procedureIdentifier . actualParameterPart

    TOKEN_OPEN_BRACKET  shift, and go to state 111

    $default  reduce using rule 109 (empty)

    empty                go to state 112
    actualParameterPart  go to state 113


state 57

   16 compoundTail: statement . TOKEN_END
   17             | statement . TOKEN_SEMICOLON compoundTail

    TOKEN_END        shift, and go to state 114
    TOKEN_SEMICOLON  shift, and go to state 115


state 58

    4 unlabelledBlock: blockHead TOKEN_SEMICOLON compoundTail .

    $default  reduce using rule 4 (unlabelledBlock)


state 59

    3 blockHead: blockHead TOKEN_SEMICOLON declaration .

    $default  reduce using rule 3 (blockHead)


state 60

  111 procedureIdentifier: identifier .

    $default  reduce using rule 111 (procedureIdentifier)


state 61

  145 procedureHeading: procedureIdentifier . @7 formalParameterPart TOKEN_SEMICOLON $@8 valuePart specificationPart

    $default  reduce using rule 143 (@7)

    @7  go to state 116


state 62

  147 procedureDeclaration: TOKEN_PROCEDURE procedureHeading . procedureBody

    TOKEN_PRINT       shift, and go to state 31
    TOKEN_IDENTIFIER  shift, and go to state 1
    TOKEN_BEGIN       shift, and go to state 2
    TOKEN_INTEGER     shift, and go to state 3
    TOKEN_FOR         shift, and go to state 32
    TOKEN_IF          shift, and go to state 33

    $default  reduce using rule 109 (empty)

    blockHead                 go to state 4
    unlabelledBlock           go to state 5
    block                     go to state 34
    tlabel                    go to state 35
    label                     go to state 36
    unlabelledCompound        go to state 10
    compoundStatement         go to state 37
    arrayIdentifier           go to state 39
    integer                   go to state 12
    simpleVariable            go to state 40
    variable                  go to state 41
    subscriptedVariable       go to state 42
    identifier                go to state 43
    varIdentifier             go to state 44
    unconditionalStatement    go to state 45
    conditionalStatement      go to state 46
    ifStatement               go to state 47
    ifClause                  go to state 48
    basicStatement            go to state 49
    unlabelledBasicStatement  go to state 50
    dummyStatement            go to state 51
    assignmentStatement       go to state 52
    forStatement              go to state 53
    empty                     go to state 54
    procedureStatement        go to state 55
    procedureIdentifier       go to state 56
    statement                 go to state 117
    procedureBody             go to state 118


state 63

   27 arraySegment: arrayIdentifier . TOKEN_OPEN_SQUARE_BRACKET boundPairList TOKEN_CLOSE_SQUARE_BRACKET
   28             | arrayIdentifier . TOKEN_COMMA arraySegment

    TOKEN_COMMA                shift, and go to state 119
    TOKEN_OPEN_SQUARE_BRACKET  shift, and go to state 120


state 64

   29 arrayList: arraySegment .

    $default  reduce using rule 29 (arrayList)


state 65

   30 arrayList: arrayList . TOKEN_COMMA arraySegment
   31 arrayDeclaration: TOKEN_ARRAY arrayList .

    TOKEN_COMMA  shift, and go to state 121

    $default  reduce using rule 31 (arrayDeclaration)


state 66

   26 arrayIdentifier: identifier .

    $default  reduce using rule 26 (arrayIdentifier)


state 67

  148 procedureDeclaration: type TOKEN_PROCEDURE . procedureHeading procedureBody

    TOKEN_IDENTIFIER  shift, and go to state 1

    identifier           go to state 60
    procedureIdentifier  go to state 61
    procedureHeading     go to state 122


state 68

   32 arrayDeclaration: type TOKEN_ARRAY . arrayList

    TOKEN_IDENTIFIER  shift, and go to state 1

    arrayIdentifier  go to state 63
    arraySegment     go to state 64
    arrayList        go to state 123
    identifier       go to state 66


state 69

   88 varIdentifier: identifier .

    $default  reduce using rule 88 (varIdentifier)


state 70

   83 listType: listType . TOKEN_COMMA @3 varIdentifier
   87 typeDeclaration: type listType .

    TOKEN_COMMA  shift, and go to state 124

    $default  reduce using rule 87 (typeDeclaration)


state 71

   81 listType: varIdentifier .

    $default  reduce using rule 81 (listType)


state 72

   77 logicalValue: TOKEN_LOGICAL_VALUE .

    $default  reduce using rule 77 (logicalValue)


state 73

   38 simpleArithmeticExpression: TOKEN_PLUS . term

    TOKEN_IDENTIFIER    shift, and go to state 1
    TOKEN_OPEN_BRACKET  shift, and go to state 125
    TOKEN_REAL_NUM      shift, and go to state 76
    TOKEN_INTEGER       shift, and go to state 3

    arrayIdentifier      go to state 39
    term                 go to state 126
    factor               go to state 82
    primary              go to state 83
    unsignedNumber       go to state 84
    realNumber           go to state 85
    integer              go to state 86
    simpleVariable       go to state 40
    variable             go to state 127
    subscriptedVariable  go to state 42
    identifier           go to state 88
    varIdentifier        go to state 44


state 74

   39 simpleArithmeticExpression: TOKEN_MINUS . term

    TOKEN_IDENTIFIER    shift, and go to state 1
    TOKEN_OPEN_BRACKET  shift, and go to state 125
    TOKEN_REAL_NUM      shift, and go to state 76
    TOKEN_INTEGER       shift, and go to state 3

    arrayIdentifier      go to state 39
    term                 go to state 128
    factor               go to state 82
    primary              go to state 83
    unsignedNumber       go to state 84
    realNumber           go to state 85
    integer              go to state 86
    simpleVariable       go to state 40
    variable             go to state 127
    subscriptedVariable  go to state 42
    identifier           go to state 88
    varIdentifier        go to state 44


state 75

   49 primary: TOKEN_OPEN_BRACKET . arithmeticExpression TOKEN_CLOSE_BRACKET
   76 booleanPrimary: TOKEN_OPEN_BRACKET . booleanExpression TOKEN_CLOSE_BRACKET

    TOKEN_IDENTIFIER     shift, and go to state 1
    TOKEN_LOGICAL_VALUE  shift, and go to state 72
    TOKEN_PLUS           shift, and go to state 73
    TOKEN_MINUS          shift, and go to state 74
    TOKEN_OPEN_BRACKET   shift, and go to state 75
    TOKEN_REAL_NUM       shift, and go to state 76
    TOKEN_INTEGER        shift, and go to state 3
    TOKEN_NOT_OP         shift, and go to state 77
    TOKEN_IF             shift, and go to state 33

    arrayIdentifier             go to state 39
    arithmeticExpression        go to state 129
    simpleArithmeticExpression  go to state 80
    term                        go to state 81
    factor                      go to state 82
    primary                     go to state 83
    unsignedNumber              go to state 84
    realNumber                  go to state 85
    integer                     go to state 86
    simpleVariable              go to state 40
    variable                    go to state 87
    subscriptedVariable         go to state 42
    identifier                  go to state 88
    booleanExpression           go to state 130
    simpleBoolean               go to state 90
    implication                 go to state 91
    booleanTerm                 go to state 92
    booleanFactor               go to state 93
    booleanSecondary            go to state 94
    booleanPrimary              go to state 95
    logicalValue                go to state 96
    relation                    go to state 97
    boolVariable                go to state 98
    varIdentifier               go to state 44
    ifClause                    go to state 99


state 76

   52 realNumber: TOKEN_REAL_NUM .

    $default  reduce using rule 52 (realNumber)


state 77

   72 booleanSecondary: TOKEN_NOT_OP . booleanPrimary

    TOKEN_IDENTIFIER     shift, and go to state 1
    TOKEN_LOGICAL_VALUE  shift, and go to state 72
    TOKEN_PLUS           shift, and go to state 73
    TOKEN_MINUS          shift, and go to state 74
    TOKEN_OPEN_BRACKET   shift, and go to state 75
    TOKEN_REAL_NUM       shift, and go to state 76
    TOKEN_INTEGER        shift, and go to state 3

    arrayIdentifier             go to state 39
    simpleArithmeticExpression  go to state 101
    term                        go to state 81
    factor                      go to state 82
    primary                     go to state 83
    unsignedNumber              go to state 84
    realNumber                  go to state 85
    integer                     go to state 86
    simpleVariable              go to state 40
    variable                    go to state 87
    subscriptedVariable         go to state 42
    identifier                  go to state 88
    booleanPrimary              go to state 131
    logicalValue                go to state 96
    relation                    go to state 97
    boolVariable                go to state 98
    varIdentifier               go to state 44


state 78

  122 statement: TOKEN_PRINT expression .

    $default  reduce using rule 122 (statement)


state 79

   33 expression: arithmeticExpression .

    $default  reduce using rule 33 (expression)


state 80

   35 arithmeticExpression: simpleArithmeticExpression .
   40 simpleArithmeticExpression: simpleArithmeticExpression . TOKEN_PLUS term
   41                           | simpleArithmeticExpression . TOKEN_MINUS term
   78 relation: simpleArithmeticExpression . relationalOperator simpleArithmeticExpression

    TOKEN_PLUS    shift, and go to state 132
    TOKEN_MINUS   shift, and go to state 133
    TOKEN_REL_OP  shift, and go to state 134

    $default  reduce using rule 35 (arithmeticExpression)

    relationalOperator  go to state 135


state 81

   37 simpleArithmeticExpression: term .
   43 term: term . TOKEN_MULTIPLY factor
   44     | term . TOKEN_DIVIDE factor

    TOKEN_DIVIDE    shift, and go to state 136
    TOKEN_MULTIPLY  shift, and go to state 137

    $default  reduce using rule 37 (simpleArithmeticExpression)


state 82

   42 term: factor .
   46 factor: factor . TOKEN_POWER primary

    TOKEN_POWER  shift, and go to state 138

    $default  reduce using rule 42 (term)


state 83

   45 factor: primary .

    $default  reduce using rule 45 (factor)


state 84

   47 primary: unsignedNumber .

    $default  reduce using rule 47 (primary)


state 85

   50 unsignedNumber: realNumber .

    $default  reduce using rule 50 (unsignedNumber)


state 86

   51 unsignedNumber: integer .

    $default  reduce using rule 51 (unsignedNumber)


state 87

   48 primary: variable .
   79 boolVariable: variable .

    TOKEN_END                   reduce using rule 48 (primary)
    TOKEN_END                   [reduce using rule 79 (boolVariable)]
    TOKEN_COMMA                 reduce using rule 48 (primary)
    TOKEN_COMMA                 [reduce using rule 79 (boolVariable)]
    TOKEN_CLOSE_BRACKET         reduce using rule 48 (primary)
    TOKEN_CLOSE_BRACKET         [reduce using rule 79 (boolVariable)]
    TOKEN_CLOSE_SQUARE_BRACKET  reduce using rule 48 (primary)
    TOKEN_CLOSE_SQUARE_BRACKET  [reduce using rule 79 (boolVariable)]
    TOKEN_EQUIV                 reduce using rule 79 (boolVariable)
    TOKEN_AND_OP                reduce using rule 79 (boolVariable)
    TOKEN_OR_OP                 reduce using rule 79 (boolVariable)
    TOKEN_THEN                  reduce using rule 79 (boolVariable)
    TOKEN_ELSE                  reduce using rule 48 (primary)
    TOKEN_ELSE                  [reduce using rule 79 (boolVariable)]
    TOKEN_IMPLY                 reduce using rule 79 (boolVariable)
    TOKEN_SEMICOLON             reduce using rule 48 (primary)
    TOKEN_SEMICOLON             [reduce using rule 79 (boolVariable)]
    $default                    reduce using rule 48 (primary)


state 88

   26 arrayIdentifier: identifier .
   88 varIdentifier: identifier .

    TOKEN_OPEN_SQUARE_BRACKET  reduce using rule 26 (arrayIdentifier)
    $default                   reduce using rule 88 (varIdentifier)


state 89

   34 expression: booleanExpression .

    $default  reduce using rule 34 (expression)


state 90

   62 booleanExpression: simpleBoolean .
   64 simpleBoolean: simpleBoolean . TOKEN_EQUIV implication

    TOKEN_EQUIV  shift, and go to state 139

    $default  reduce using rule 62 (booleanExpression)


state 91

   63 simpleBoolean: implication .
   66 implication: implication . TOKEN_IMPLY booleanTerm

    TOKEN_IMPLY  shift, and go to state 140

    $default  reduce using rule 63 (simpleBoolean)


state 92

   65 implication: booleanTerm .
   68 booleanTerm: booleanTerm . TOKEN_OR_OP booleanFactor

    TOKEN_OR_OP  shift, and go to state 141

    $default  reduce using rule 65 (implication)


state 93

   67 booleanTerm: booleanFactor .
   70 booleanFactor: booleanFactor . TOKEN_AND_OP booleanSecondary

    TOKEN_AND_OP  shift, and go to state 142

    $default  reduce using rule 67 (booleanTerm)


state 94

   69 booleanFactor: booleanSecondary .

    $default  reduce using rule 69 (booleanFactor)


state 95

   71 booleanSecondary: booleanPrimary .

    $default  reduce using rule 71 (booleanSecondary)


state 96

   73 booleanPrimary: logicalValue .

    $default  reduce using rule 73 (booleanPrimary)


state 97

   75 booleanPrimary: relation .

    $default  reduce using rule 75 (booleanPrimary)


state 98

   74 booleanPrimary: boolVariable .

    $default  reduce using rule 74 (booleanPrimary)


state 99

   36 arithmeticExpression: ifClause . simpleArithmeticExpression TOKEN_ELSE arithmeticExpression

    TOKEN_IDENTIFIER    shift, and go to state 1
    TOKEN_PLUS          shift, and go to state 73
    TOKEN_MINUS         shift, and go to state 74
    TOKEN_OPEN_BRACKET  shift, and go to state 125
    TOKEN_REAL_NUM      shift, and go to state 76
    TOKEN_INTEGER       shift, and go to state 3

    arrayIdentifier             go to state 39
    simpleArithmeticExpression  go to state 143
    term                        go to state 81
    factor                      go to state 82
    primary                     go to state 83
    unsignedNumber              go to state 84
    realNumber                  go to state 85
    integer                     go to state 86
    simpleVariable              go to state 40
    variable                    go to state 127
    subscriptedVariable         go to state 42
    identifier                  go to state 88
    varIdentifier               go to state 44


state 100

  108 forStatement: TOKEN_FOR variable . TOKEN_ASSIGN arithmeticExpression TOKEN_STEP arithmeticExpression TOKEN_UNTIL arithmeticExpression TOKEN_DO statement

    TOKEN_ASSIGN  shift, and go to state 144


state 101

   40 simpleArithmeticExpression: simpleArithmeticExpression . TOKEN_PLUS term
   41                           | simpleArithmeticExpression . TOKEN_MINUS term
   78 relation: simpleArithmeticExpression . relationalOperator simpleArithmeticExpression

    TOKEN_PLUS    shift, and go to state 132
    TOKEN_MINUS   shift, and go to state 133
    TOKEN_REL_OP  shift, and go to state 134

    relationalOperator  go to state 135


state 102

   97 ifClause: TOKEN_IF booleanExpression . TOKEN_THEN

    TOKEN_THEN  shift, and go to state 145


state 103

   95 conditionalStatement: tlabel conditionalStatement .

    $default  reduce using rule 95 (conditionalStatement)


state 104

   99 basicStatement: label . basicStatement

    TOKEN_IDENTIFIER  shift, and go to state 1
    TOKEN_INTEGER     shift, and go to state 3

    $default  reduce using rule 109 (empty)

    label                     go to state 104
    arrayIdentifier           go to state 39
    integer                   go to state 12
    simpleVariable            go to state 40
    variable                  go to state 41
    subscriptedVariable       go to state 42
    identifier                go to state 43
    varIdentifier             go to state 44
    basicStatement            go to state 105
    unlabelledBasicStatement  go to state 50
    dummyStatement            go to state 51
    assignmentStatement       go to state 52
    empty                     go to state 54
    procedureStatement        go to state 55
    procedureIdentifier       go to state 56


state 105

   99 basicStatement: label basicStatement .

    $default  reduce using rule 99 (basicStatement)


state 106

   57 subscriptedVariable: arrayIdentifier TOKEN_OPEN_SQUARE_BRACKET . subscriptList TOKEN_CLOSE_SQUARE_BRACKET

    TOKEN_IDENTIFIER    shift, and go to state 1
    TOKEN_PLUS          shift, and go to state 73
    TOKEN_MINUS         shift, and go to state 74
    TOKEN_OPEN_BRACKET  shift, and go to state 125
    TOKEN_REAL_NUM      shift, and go to state 76
    TOKEN_INTEGER       shift, and go to state 3
    TOKEN_IF            shift, and go to state 33

    arrayIdentifier             go to state 39
    arithmeticExpression        go to state 146
    simpleArithmeticExpression  go to state 147
    term                        go to state 81
    factor                      go to state 82
    primary                     go to state 83
    unsignedNumber              go to state 84
    realNumber                  go to state 85
    integer                     go to state 86
    simpleVariable              go to state 40
    variable                    go to state 127
    subscriptedVariable         go to state 42
    subscriptList               go to state 148
    subscriptExpression         go to state 149
    identifier                  go to state 88
    varIdentifier               go to state 44
    ifClause                    go to state 99


state 107

  106 assignmentStatement: variable TOKEN_ASSIGN . arithmeticExpression
  107                    | variable TOKEN_ASSIGN . booleanExpression

    TOKEN_IDENTIFIER     shift, and go to state 1
    TOKEN_LOGICAL_VALUE  shift, and go to state 72
    TOKEN_PLUS           shift, and go to state 73
    TOKEN_MINUS          shift, and go to state 74
    TOKEN_OPEN_BRACKET   shift, and go to state 75
    TOKEN_REAL_NUM       shift, and go to state 76
    TOKEN_INTEGER        shift, and go to state 3
    TOKEN_NOT_OP         shift, and go to state 77
    TOKEN_IF             shift, and go to state 33

    arrayIdentifier             go to state 39
    arithmeticExpression        go to state 150
    simpleArithmeticExpression  go to state 80
    term                        go to state 81
    factor                      go to state 82
    primary                     go to state 83
    unsignedNumber              go to state 84
    realNumber                  go to state 85
    integer                     go to state 86
    simpleVariable              go to state 40
    variable                    go to state 87
    subscriptedVariable         go to state 42
    identifier                  go to state 88
    booleanExpression           go to state 151
    simpleBoolean               go to state 90
    implication                 go to state 91
    booleanTerm                 go to state 92
    booleanFactor               go to state 93
    booleanSecondary            go to state 94
    booleanPrimary              go to state 95
    logicalValue                go to state 96
    relation                    go to state 97
    boolVariable                go to state 98
    varIdentifier               go to state 44
    ifClause                    go to state 99


state 108

   93 conditionalStatement: ifClause unconditionalStatement . TOKEN_ELSE statement
   96 ifStatement: ifClause unconditionalStatement .

    TOKEN_ELSE  shift, and go to state 152

    $default  reduce using rule 96 (ifStatement)


state 109

   94 conditionalStatement: ifClause forStatement .

    $default  reduce using rule 94 (conditionalStatement)


state 110

  103 unlabelledBasicStatement: procedureStatement @4 . returnStatement

    TOKEN_RETURN  shift, and go to state 153

    returnStatement  go to state 154


state 111

  113 actualParameterPart: TOKEN_OPEN_BRACKET . actualParameterList TOKEN_CLOSE_BRACKET

    TOKEN_IDENTIFIER     shift, and go to state 1
    TOKEN_LOGICAL_VALUE  shift, and go to state 72
    TOKEN_PLUS           shift, and go to state 73
    TOKEN_MINUS          shift, and go to state 74
    TOKEN_OPEN_BRACKET   shift, and go to state 75
    TOKEN_REAL_NUM       shift, and go to state 76
    TOKEN_INTEGER        shift, and go to state 3
    TOKEN_NOT_OP         shift, and go to state 77
    TOKEN_IF             shift, and go to state 33

    arrayIdentifier             go to state 39
    expression                  go to state 155
    arithmeticExpression        go to state 79
    simpleArithmeticExpression  go to state 80
    term                        go to state 81
    factor                      go to state 82
    primary                     go to state 83
    unsignedNumber              go to state 84
    realNumber                  go to state 85
    integer                     go to state 86
    simpleVariable              go to state 40
    variable                    go to state 87
    subscriptedVariable         go to state 42
    identifier                  go to state 88
    booleanExpression           go to state 89
    simpleBoolean               go to state 90
    implication                 go to state 91
    booleanTerm                 go to state 92
    booleanFactor               go to state 93
    booleanSecondary            go to state 94
    booleanPrimary              go to state 95
    logicalValue                go to state 96
    relation                    go to state 97
    boolVariable                go to state 98
    varIdentifier               go to state 44
    ifClause                    go to state 99
    actualParameterList         go to state 156
    actualParameter             go to state 157


state 112

  112 actualParameterPart: empty .

    $default  reduce using rule 112 (actualParameterPart)


state 113

  110 procedureStatement: procedureIdentifier actualParameterPart .

    $default  reduce using rule 110 (procedureStatement)


state 114

   16 compoundTail: statement TOKEN_END .

    $default  reduce using rule 16 (compoundTail)


state 115

   17 compoundTail: statement TOKEN_SEMICOLON . compoundTail

    TOKEN_PRINT       shift, and go to state 31
    TOKEN_IDENTIFIER  shift, and go to state 1
    TOKEN_BEGIN       shift, and go to state 2
    TOKEN_INTEGER     shift, and go to state 3
    TOKEN_FOR         shift, and go to state 32
    TOKEN_IF          shift, and go to state 33

    $default  reduce using rule 109 (empty)

    blockHead                 go to state 4
    unlabelledBlock           go to state 5
    block                     go to state 34
    tlabel                    go to state 35
    label                     go to state 36
    unlabelledCompound        go to state 10
    compoundStatement         go to state 37
    compoundTail              go to state 158
    arrayIdentifier           go to state 39
    integer                   go to state 12
    simpleVariable            go to state 40
    variable                  go to state 41
    subscriptedVariable       go to state 42
    identifier                go to state 43
    varIdentifier             go to state 44
    unconditionalStatement    go to state 45
    conditionalStatement      go to state 46
    ifStatement               go to state 47
    ifClause                  go to state 48
    basicStatement            go to state 49
    unlabelledBasicStatement  go to state 50
    dummyStatement            go to state 51
    assignmentStatement       go to state 52
    forStatement              go to state 53
    empty                     go to state 54
    procedureStatement        go to state 55
    procedureIdentifier       go to state 56
    statement                 go to state 57


state 116

  145 procedureHeading: procedureIdentifier @7 . formalParameterPart TOKEN_SEMICOLON $@8 valuePart specificationPart

    TOKEN_OPEN_BRACKET  shift, and go to state 159

    $default  reduce using rule 109 (empty)

    empty                go to state 160
    formalParameterPart  go to state 161


state 117

  146 procedureBody: statement .

    $default  reduce using rule 146 (procedureBody)


state 118

  147 procedureDeclaration: TOKEN_PROCEDURE procedureHeading procedureBody .

    $default  reduce using rule 147 (procedureDeclaration)


state 119

   28 arraySegment: arrayIdentifier TOKEN_COMMA . arraySegment

    TOKEN_IDENTIFIER  shift, and go to state 1

    arrayIdentifier  go to state 63
    arraySegment     go to state 162
    identifier       go to state 66


state 120

   27 arraySegment: arrayIdentifier TOKEN_OPEN_SQUARE_BRACKET . boundPairList TOKEN_CLOSE_SQUARE_BRACKET

    TOKEN_IDENTIFIER    shift, and go to state 1
    TOKEN_PLUS          shift, and go to state 73
    TOKEN_MINUS         shift, and go to state 74
    TOKEN_OPEN_BRACKET  shift, and go to state 125
    TOKEN_REAL_NUM      shift, and go to state 76
    TOKEN_INTEGER       shift, and go to state 3
    TOKEN_IF            shift, and go to state 33

    lowerBound                  go to state 163
    boundPair                   go to state 164
    boundPairList               go to state 165
    arrayIdentifier             go to state 39
    arithmeticExpression        go to state 166
    simpleArithmeticExpression  go to state 147
    term                        go to state 81
    factor                      go to state 82
    primary                     go to state 83
    unsignedNumber              go to state 84
    realNumber                  go to state 85
    integer                     go to state 86
    simpleVariable              go to state 40
    variable                    go to state 127
    subscriptedVariable         go to state 42
    identifier                  go to state 88
    varIdentifier               go to state 44
    ifClause                    go to state 99


state 121

   30 arrayList: arrayList TOKEN_COMMA . arraySegment

    TOKEN_IDENTIFIER  shift, and go to state 1

    arrayIdentifier  go to state 63
    arraySegment     go to state 167
    identifier       go to state 66


state 122

  148 procedureDeclaration: type TOKEN_PROCEDURE procedureHeading . procedureBody

    TOKEN_PRINT       shift, and go to state 31
    TOKEN_IDENTIFIER  shift, and go to state 1
    TOKEN_BEGIN       shift, and go to state 2
    TOKEN_INTEGER     shift, and go to state 3
    TOKEN_FOR         shift, and go to state 32
    TOKEN_IF          shift, and go to state 33

    $default  reduce using rule 109 (empty)

    blockHead                 go to state 4
    unlabelledBlock           go to state 5
    block                     go to state 34
    tlabel                    go to state 35
    label                     go to state 36
    unlabelledCompound        go to state 10
    compoundStatement         go to state 37
    arrayIdentifier           go to state 39
    integer                   go to state 12
    simpleVariable            go to state 40
    variable                  go to state 41
    subscriptedVariable       go to state 42
    identifier                go to state 43
    varIdentifier             go to state 44
    unconditionalStatement    go to state 45
    conditionalStatement      go to state 46
    ifStatement               go to state 47
    ifClause                  go to state 48
    basicStatement            go to state 49
    unlabelledBasicStatement  go to state 50
    dummyStatement            go to state 51
    assignmentStatement       go to state 52
    forStatement              go to state 53
    empty                     go to state 54
    procedureStatement        go to state 55
    procedureIdentifier       go to state 56
    statement                 go to state 117
    procedureBody             go to state 168


state 123

   30 arrayList: arrayList . TOKEN_COMMA arraySegment
   32 arrayDeclaration: type TOKEN_ARRAY arrayList .

    TOKEN_COMMA  shift, and go to state 121

    $default  reduce using rule 32 (arrayDeclaration)


state 124

   83 listType: listType TOKEN_COMMA . @3 varIdentifier

    $default  reduce using rule 82 (@3)

    @3  go to state 169


state 125

   49 primary: TOKEN_OPEN_BRACKET . arithmeticExpression TOKEN_CLOSE_BRACKET

    TOKEN_IDENTIFIER    shift, and go to state 1
    TOKEN_PLUS          shift, and go to state 73
    TOKEN_MINUS         shift, and go to state 74
    TOKEN_OPEN_BRACKET  shift, and go to state 125
    TOKEN_REAL_NUM      shift, and go to state 76
    TOKEN_INTEGER       shift, and go to state 3
    TOKEN_IF            shift, and go to state 33

    arrayIdentifier             go to state 39
    arithmeticExpression        go to state 129
    simpleArithmeticExpression  go to state 147
    term                        go to state 81
    factor                      go to state 82
    primary                     go to state 83
    unsignedNumber              go to state 84
    realNumber                  go to state 85
    integer                     go to state 86
    simpleVariable              go to state 40
    variable                    go to state 127
    subscriptedVariable         go to state 42
    identifier                  go to state 88
    varIdentifier               go to state 44
    ifClause                    go to state 99


state 126

   38 simpleArithmeticExpression: TOKEN_PLUS term .
   43 term: term . TOKEN_MULTIPLY factor
   44     | term . TOKEN_DIVIDE factor

    TOKEN_DIVIDE    shift, and go to state 136
    TOKEN_MULTIPLY  shift, and go to state 137

    $default  reduce using rule 38 (simpleArithmeticExpression)


state 127

   48 primary: variable .

    $default  reduce using rule 48 (primary)


state 128

   39 simpleArithmeticExpression: TOKEN_MINUS term .
   43 term: term . TOKEN_MULTIPLY factor
   44     | term . TOKEN_DIVIDE factor

    TOKEN_DIVIDE    shift, and go to state 136
    TOKEN_MULTIPLY  shift, and go to state 137

    $default  reduce using rule 39 (simpleArithmeticExpression)


state 129

   49 primary: TOKEN_OPEN_BRACKET arithmeticExpression . TOKEN_CLOSE_BRACKET

    TOKEN_CLOSE_BRACKET  shift, and go to state 170


state 130

   76 booleanPrimary: TOKEN_OPEN_BRACKET booleanExpression . TOKEN_CLOSE_BRACKET

    TOKEN_CLOSE_BRACKET  shift, and go to state 171


state 131

   72 booleanSecondary: TOKEN_NOT_OP booleanPrimary .

    $default  reduce using rule 72 (booleanSecondary)


state 132

   40 simpleArithmeticExpression: simpleArithmeticExpression TOKEN_PLUS . term

    TOKEN_IDENTIFIER    shift, and go to state 1
    TOKEN_OPEN_BRACKET  shift, and go to state 125
    TOKEN_REAL_NUM      shift, and go to state 76
    TOKEN_INTEGER       shift, and go to state 3

    arrayIdentifier      go to state 39
    term                 go to state 172
    factor               go to state 82
    primary              go to state 83
    unsignedNumber       go to state 84
    realNumber           go to state 85
    integer              go to state 86
    simpleVariable       go to state 40
    variable             go to state 127
    subscriptedVariable  go to state 42
    identifier           go to state 88
    varIdentifier        go to state 44


state 133

   41 simpleArithmeticExpression: simpleArithmeticExpression TOKEN_MINUS . term

    TOKEN_IDENTIFIER    shift, and go to state 1
    TOKEN_OPEN_BRACKET  shift, and go to state 125
    TOKEN_REAL_NUM      shift, and go to state 76
    TOKEN_INTEGER       shift, and go to state 3

    arrayIdentifier      go to state 39
    term                 go to state 173
    factor               go to state 82
    primary              go to state 83
    unsignedNumber       go to state 84
    realNumber           go to state 85
    integer              go to state 86
    simpleVariable       go to state 40
    variable             go to state 127
    subscriptedVariable  go to state 42
    identifier           go to state 88
    varIdentifier        go to state 44


state 134

   80 relationalOperator: TOKEN_REL_OP .

    $default  reduce using rule 80 (relationalOperator)


state 135

   78 relation: simpleArithmeticExpression relationalOperator . simpleArithmeticExpression

    TOKEN_IDENTIFIER    shift, and go to state 1
    TOKEN_PLUS          shift, and go to state 73
    TOKEN_MINUS         shift, and go to state 74
    TOKEN_OPEN_BRACKET  shift, and go to state 125
    TOKEN_REAL_NUM      shift, and go to state 76
    TOKEN_INTEGER       shift, and go to state 3

    arrayIdentifier             go to state 39
    simpleArithmeticExpression  go to state 174
    term                        go to state 81
    factor                      go to state 82
    primary                     go to state 83
    unsignedNumber              go to state 84
    realNumber                  go to state 85
    integer                     go to state 86
    simpleVariable              go to state 40
    variable                    go to state 127
    subscriptedVariable         go to state 42
    identifier                  go to state 88
    varIdentifier               go to state 44


state 136

   44 term: term TOKEN_DIVIDE . factor

    TOKEN_IDENTIFIER    shift, and go to state 1
    TOKEN_OPEN_BRACKET  shift, and go to state 125
    TOKEN_REAL_NUM      shift, and go to state 76
    TOKEN_INTEGER       shift, and go to state 3

    arrayIdentifier      go to state 39
    factor               go to state 175
    primary              go to state 83
    unsignedNumber       go to state 84
    realNumber           go to state 85
    integer              go to state 86
    simpleVariable       go to state 40
    variable             go to state 127
    subscriptedVariable  go to state 42
    identifier           go to state 88
    varIdentifier        go to state 44


state 137

   43 term: term TOKEN_MULTIPLY . factor

    TOKEN_IDENTIFIER    shift, and go to state 1
    TOKEN_OPEN_BRACKET  shift, and go to state 125
    TOKEN_REAL_NUM      shift, and go to state 76
    TOKEN_INTEGER       shift, and go to state 3

    arrayIdentifier      go to state 39
    factor               go to state 176
    primary              go to state 83
    unsignedNumber       go to state 84
    realNumber           go to state 85
    integer              go to state 86
    simpleVariable       go to state 40
    variable             go to state 127
    subscriptedVariable  go to state 42
    identifier           go to state 88
    varIdentifier        go to state 44


state 138

   46 factor: factor TOKEN_POWER . primary

    TOKEN_IDENTIFIER    shift, and go to state 1
    TOKEN_OPEN_BRACKET  shift, and go to state 125
    TOKEN_REAL_NUM      shift, and go to state 76
    TOKEN_INTEGER       shift, and go to state 3

    arrayIdentifier      go to state 39
    primary              go to state 177
    unsignedNumber       go to state 84
    realNumber           go to state 85
    integer              go to state 86
    simpleVariable       go to state 40
    variable             go to state 127
    subscriptedVariable  go to state 42
    identifier           go to state 88
    varIdentifier        go to state 44


state 139

   64 simpleBoolean: simpleBoolean TOKEN_EQUIV . implication

    TOKEN_IDENTIFIER     shift, and go to state 1
    TOKEN_LOGICAL_VALUE  shift, and go to state 72
    TOKEN_PLUS           shift, and go to state 73
    TOKEN_MINUS          shift, and go to state 74
    TOKEN_OPEN_BRACKET   shift, and go to state 75
    TOKEN_REAL_NUM       shift, and go to state 76
    TOKEN_INTEGER        shift, and go to state 3
    TOKEN_NOT_OP         shift, and go to state 77

    arrayIdentifier             go to state 39
    simpleArithmeticExpression  go to state 101
    term                        go to state 81
    factor                      go to state 82
    primary                     go to state 83
    unsignedNumber              go to state 84
    realNumber                  go to state 85
    integer                     go to state 86
    simpleVariable              go to state 40
    variable                    go to state 87
    subscriptedVariable         go to state 42
    identifier                  go to state 88
    implication                 go to state 178
    booleanTerm                 go to state 92
    booleanFactor               go to state 93
    booleanSecondary            go to state 94
    booleanPrimary              go to state 95
    logicalValue                go to state 96
    relation                    go to state 97
    boolVariable                go to state 98
    varIdentifier               go to state 44


state 140

   66 implication: implication TOKEN_IMPLY . booleanTerm

    TOKEN_IDENTIFIER     shift, and go to state 1
    TOKEN_LOGICAL_VALUE  shift, and go to state 72
    TOKEN_PLUS           shift, and go to state 73
    TOKEN_MINUS          shift, and go to state 74
    TOKEN_OPEN_BRACKET   shift, and go to state 75
    TOKEN_REAL_NUM       shift, and go to state 76
    TOKEN_INTEGER        shift, and go to state 3
    TOKEN_NOT_OP         shift, and go to state 77

    arrayIdentifier             go to state 39
    simpleArithmeticExpression  go to state 101
    term                        go to state 81
    factor                      go to state 82
    primary                     go to state 83
    unsignedNumber              go to state 84
    realNumber                  go to state 85
    integer                     go to state 86
    simpleVariable              go to state 40
    variable                    go to state 87
    subscriptedVariable         go to state 42
    identifier                  go to state 88
    booleanTerm                 go to state 179
    booleanFactor               go to state 93
    booleanSecondary            go to state 94
    booleanPrimary              go to state 95
    logicalValue                go to state 96
    relation                    go to state 97
    boolVariable                go to state 98
    varIdentifier               go to state 44


state 141

   68 booleanTerm: booleanTerm TOKEN_OR_OP . booleanFactor

    TOKEN_IDENTIFIER     shift, and go to state 1
    TOKEN_LOGICAL_VALUE  shift, and go to state 72
    TOKEN_PLUS           shift, and go to state 73
    TOKEN_MINUS          shift, and go to state 74
    TOKEN_OPEN_BRACKET   shift, and go to state 75
    TOKEN_REAL_NUM       shift, and go to state 76
    TOKEN_INTEGER        shift, and go to state 3
    TOKEN_NOT_OP         shift, and go to state 77

    arrayIdentifier             go to state 39
    simpleArithmeticExpression  go to state 101
    term                        go to state 81
    factor                      go to state 82
    primary                     go to state 83
    unsignedNumber              go to state 84
    realNumber                  go to state 85
    integer                     go to state 86
    simpleVariable              go to state 40
    variable                    go to state 87
    subscriptedVariable         go to state 42
    identifier                  go to state 88
    booleanFactor               go to state 180
    booleanSecondary            go to state 94
    booleanPrimary              go to state 95
    logicalValue                go to state 96
    relation                    go to state 97
    boolVariable                go to state 98
    varIdentifier               go to state 44


state 142

   70 booleanFactor: booleanFactor TOKEN_AND_OP . booleanSecondary

    TOKEN_IDENTIFIER     shift, and go to state 1
    TOKEN_LOGICAL_VALUE  shift, and go to state 72
    TOKEN_PLUS           shift, and go to state 73
    TOKEN_MINUS          shift, and go to state 74
    TOKEN_OPEN_BRACKET   shift, and go to state 75
    TOKEN_REAL_NUM       shift, and go to state 76
    TOKEN_INTEGER        shift, and go to state 3
    TOKEN_NOT_OP         shift, and go to state 77

    arrayIdentifier             go to state 39
    simpleArithmeticExpression  go to state 101
    term                        go to state 81
    factor                      go to state 82
    primary                     go to state 83
    unsignedNumber              go to state 84
    realNumber                  go to state 85
    integer                     go to state 86
    simpleVariable              go to state 40
    variable                    go to state 87
    subscriptedVariable         go to state 42
    identifier                  go to state 88
    booleanSecondary            go to state 181
    booleanPrimary              go to state 95
    logicalValue                go to state 96
    relation                    go to state 97
    boolVariable                go to state 98
    varIdentifier               go to state 44


state 143

   36 arithmeticExpression: ifClause simpleArithmeticExpression . TOKEN_ELSE arithmeticExpression
   40 simpleArithmeticExpression: simpleArithmeticExpression . TOKEN_PLUS term
   41                           | simpleArithmeticExpression . TOKEN_MINUS term

    TOKEN_PLUS   shift, and go to state 132
    TOKEN_MINUS  shift, and go to state 133
    TOKEN_ELSE   shift, and go to state 182


state 144

  108 forStatement: TOKEN_FOR variable TOKEN_ASSIGN . arithmeticExpression TOKEN_STEP arithmeticExpression TOKEN_UNTIL arithmeticExpression TOKEN_DO statement

    TOKEN_IDENTIFIER    shift, and go to state 1
    TOKEN_PLUS          shift, and go to state 73
    TOKEN_MINUS         shift, and go to state 74
    TOKEN_OPEN_BRACKET  shift, and go to state 125
    TOKEN_REAL_NUM      shift, and go to state 76
    TOKEN_INTEGER       shift, and go to state 3
    TOKEN_IF            shift, and go to state 33

    arrayIdentifier             go to state 39
    arithmeticExpression        go to state 183
    simpleArithmeticExpression  go to state 147
    term                        go to state 81
    factor                      go to state 82
    primary                     go to state 83
    unsignedNumber              go to state 84
    realNumber                  go to state 85
    integer                     go to state 86
    simpleVariable              go to state 40
    variable                    go to state 127
    subscriptedVariable         go to state 42
    identifier                  go to state 88
    varIdentifier               go to state 44
    ifClause                    go to state 99


state 145

   97 ifClause: TOKEN_IF booleanExpression TOKEN_THEN .

    $default  reduce using rule 97 (ifClause)


state 146

   60 subscriptExpression: arithmeticExpression .

    $default  reduce using rule 60 (subscriptExpression)


state 147

   35 arithmeticExpression: simpleArithmeticExpression .
   40 simpleArithmeticExpression: simpleArithmeticExpression . TOKEN_PLUS term
   41                           | simpleArithmeticExpression . TOKEN_MINUS term

    TOKEN_PLUS   shift, and go to state 132
    TOKEN_MINUS  shift, and go to state 133

    $default  reduce using rule 35 (arithmeticExpression)


state 148

   57 subscriptedVariable: arrayIdentifier TOKEN_OPEN_SQUARE_BRACKET subscriptList . TOKEN_CLOSE_SQUARE_BRACKET
   59 subscriptList: subscriptList . TOKEN_COMMA subscriptExpression

    TOKEN_COMMA                 shift, and go to state 184
    TOKEN_CLOSE_SQUARE_BRACKET  shift, and go to state 185


state 149

   58 subscriptList: subscriptExpression .

    $default  reduce using rule 58 (subscriptList)


state 150

  106 assignmentStatement: variable TOKEN_ASSIGN arithmeticExpression .

    $default  reduce using rule 106 (assignmentStatement)


state 151

  107 assignmentStatement: variable TOKEN_ASSIGN booleanExpression .

    $default  reduce using rule 107 (assignmentStatement)


state 152

   93 conditionalStatement: ifClause unconditionalStatement TOKEN_ELSE . statement

    TOKEN_PRINT       shift, and go to state 31
    TOKEN_IDENTIFIER  shift, and go to state 1
    TOKEN_BEGIN       shift, and go to state 2
    TOKEN_INTEGER     shift, and go to state 3
    TOKEN_FOR         shift, and go to state 32
    TOKEN_IF          shift, and go to state 33

    $default  reduce using rule 109 (empty)

    blockHead                 go to state 4
    unlabelledBlock           go to state 5
    block                     go to state 34
    tlabel                    go to state 35
    label                     go to state 36
    unlabelledCompound        go to state 10
    compoundStatement         go to state 37
    arrayIdentifier           go to state 39
    integer                   go to state 12
    simpleVariable            go to state 40
    variable                  go to state 41
    subscriptedVariable       go to state 42
    identifier                go to state 43
    varIdentifier             go to state 44
    unconditionalStatement    go to state 45
    conditionalStatement      go to state 46
    ifStatement               go to state 47
    ifClause                  go to state 48
    basicStatement            go to state 49
    unlabelledBasicStatement  go to state 50
    dummyStatement            go to state 51
    assignmentStatement       go to state 52
    forStatement              go to state 53
    empty                     go to state 54
    procedureStatement        go to state 55
    procedureIdentifier       go to state 56
    statement                 go to state 186


state 153

  105 returnStatement: TOKEN_RETURN . expression

    TOKEN_IDENTIFIER     shift, and go to state 1
    TOKEN_LOGICAL_VALUE  shift, and go to state 72
    TOKEN_PLUS           shift, and go to state 73
    TOKEN_MINUS          shift, and go to state 74
    TOKEN_OPEN_BRACKET   shift, and go to state 75
    TOKEN_REAL_NUM       shift, and go to state 76
    TOKEN_INTEGER        shift, and go to state 3
    TOKEN_NOT_OP         shift, and go to state 77
    TOKEN_IF             shift, and go to state 33

    arrayIdentifier             go to state 39
    expression                  go to state 187
    arithmeticExpression        go to state 79
    simpleArithmeticExpression  go to state 80
    term                        go to state 81
    factor                      go to state 82
    primary                     go to state 83
    unsignedNumber              go to state 84
    realNumber                  go to state 85
    integer                     go to state 86
    simpleVariable              go to state 40
    variable                    go to state 87
    subscriptedVariable         go to state 42
    identifier                  go to state 88
    booleanExpression           go to state 89
    simpleBoolean               go to state 90
    implication                 go to state 91
    booleanTerm                 go to state 92
    booleanFactor               go to state 93
    booleanSecondary            go to state 94
    booleanPrimary              go to state 95
    logicalValue                go to state 96
    relation                    go to state 97
    boolVariable                go to state 98
    varIdentifier               go to state 44
    ifClause                    go to state 99


state 154

  103 unlabelledBasicStatement: procedureStatement @4 returnStatement .

    $default  reduce using rule 103 (unlabelledBasicStatement)


state 155

  116 actualParameter: expression .

    $default  reduce using rule 116 (actualParameter)


state 156

  113 actualParameterPart: TOKEN_OPEN_BRACKET actualParameterList . TOKEN_CLOSE_BRACKET
  115 actualParameterList: actualParameterList . parameterDelimiter actualParameter

    TOKEN_COMMA                 shift, and go to state 188
    TOKEN_CLOSE_BRACKET         shift, and go to state 189
    TOKEN_CLOSE_SQUARE_BRACKET  shift, and go to state 190

    parameterDelimiter  go to state 191


state 157

  114 actualParameterList: actualParameter .

    $default  reduce using rule 114 (actualParameterList)


state 158

   17 compoundTail: statement TOKEN_SEMICOLON compoundTail .

    $default  reduce using rule 17 (compoundTail)


state 159

  129 formalParameterPart: TOKEN_OPEN_BRACKET . $@6 formalParameterList TOKEN_CLOSE_BRACKET

    $default  reduce using rule 128 ($@6)

    $@6  go to state 192


state 160

  127 formalParameterPart: empty .

    $default  reduce using rule 127 (formalParameterPart)


state 161

  145 procedureHeading: procedureIdentifier @7 formalParameterPart . TOKEN_SEMICOLON $@8 valuePart specificationPart

    TOKEN_SEMICOLON  shift, and go to state 193


state 162

   28 arraySegment: arrayIdentifier TOKEN_COMMA arraySegment .

    $default  reduce using rule 28 (arraySegment)


state 163

   23 boundPair: lowerBound . TOKEN_COLON upperBound

    TOKEN_COLON  shift, and go to state 194


state 164

   24 boundPairList: boundPair .

    $default  reduce using rule 24 (boundPairList)


state 165

   25 boundPairList: boundPairList . TOKEN_COMMA boundPair
   27 arraySegment: arrayIdentifier TOKEN_OPEN_SQUARE_BRACKET boundPairList . TOKEN_CLOSE_SQUARE_BRACKET

    TOKEN_COMMA                 shift, and go to state 195
    TOKEN_CLOSE_SQUARE_BRACKET  shift, and go to state 196


state 166

   21 lowerBound: arithmeticExpression .

    $default  reduce using rule 21 (lowerBound)


state 167

   30 arrayList: arrayList TOKEN_COMMA arraySegment .

    $default  reduce using rule 30 (arrayList)


state 168

  148 procedureDeclaration: type TOKEN_PROCEDURE procedureHeading procedureBody .

    $default  reduce using rule 148 (procedureDeclaration)


state 169

   83 listType: listType TOKEN_COMMA @3 . varIdentifier

    TOKEN_IDENTIFIER  shift, and go to state 1

    identifier     go to state 69
    varIdentifier  go to state 197


state 170

   49 primary: TOKEN_OPEN_BRACKET arithmeticExpression TOKEN_CLOSE_BRACKET .

    $default  reduce using rule 49 (primary)


state 171

   76 booleanPrimary: TOKEN_OPEN_BRACKET booleanExpression TOKEN_CLOSE_BRACKET .

    $default  reduce using rule 76 (booleanPrimary)


state 172

   40 simpleArithmeticExpression: simpleArithmeticExpression TOKEN_PLUS term .
   43 term: term . TOKEN_MULTIPLY factor
   44     | term . TOKEN_DIVIDE factor

    TOKEN_DIVIDE    shift, and go to state 136
    TOKEN_MULTIPLY  shift, and go to state 137

    $default  reduce using rule 40 (simpleArithmeticExpression)


state 173

   41 simpleArithmeticExpression: simpleArithmeticExpression TOKEN_MINUS term .
   43 term: term . TOKEN_MULTIPLY factor
   44     | term . TOKEN_DIVIDE factor

    TOKEN_DIVIDE    shift, and go to state 136
    TOKEN_MULTIPLY  shift, and go to state 137

    $default  reduce using rule 41 (simpleArithmeticExpression)


state 174

   40 simpleArithmeticExpression: simpleArithmeticExpression . TOKEN_PLUS term
   41                           | simpleArithmeticExpression . TOKEN_MINUS term
   78 relation: simpleArithmeticExpression relationalOperator simpleArithmeticExpression .

    TOKEN_PLUS   shift, and go to state 132
    TOKEN_MINUS  shift, and go to state 133

    $default  reduce using rule 78 (relation)


state 175

   44 term: term TOKEN_DIVIDE factor .
   46 factor: factor . TOKEN_POWER primary

    TOKEN_POWER  shift, and go to state 138

    $default  reduce using rule 44 (term)


state 176

   43 term: term TOKEN_MULTIPLY factor .
   46 factor: factor . TOKEN_POWER primary

    TOKEN_POWER  shift, and go to state 138

    $default  reduce using rule 43 (term)


state 177

   46 factor: factor TOKEN_POWER primary .

    $default  reduce using rule 46 (factor)


state 178

   64 simpleBoolean: simpleBoolean TOKEN_EQUIV implication .
   66 implication: implication . TOKEN_IMPLY booleanTerm

    TOKEN_IMPLY  shift, and go to state 140

    $default  reduce using rule 64 (simpleBoolean)


state 179

   66 implication: implication TOKEN_IMPLY booleanTerm .
   68 booleanTerm: booleanTerm . TOKEN_OR_OP booleanFactor

    TOKEN_OR_OP  shift, and go to state 141

    $default  reduce using rule 66 (implication)


state 180

   68 booleanTerm: booleanTerm TOKEN_OR_OP booleanFactor .
   70 booleanFactor: booleanFactor . TOKEN_AND_OP booleanSecondary

    TOKEN_AND_OP  shift, and go to state 142

    $default  reduce using rule 68 (booleanTerm)


state 181

   70 booleanFactor: booleanFactor TOKEN_AND_OP booleanSecondary .

    $default  reduce using rule 70 (booleanFactor)


state 182

   36 arithmeticExpression: ifClause simpleArithmeticExpression TOKEN_ELSE . arithmeticExpression

    TOKEN_IDENTIFIER    shift, and go to state 1
    TOKEN_PLUS          shift, and go to state 73
    TOKEN_MINUS         shift, and go to state 74
    TOKEN_OPEN_BRACKET  shift, and go to state 125
    TOKEN_REAL_NUM      shift, and go to state 76
    TOKEN_INTEGER       shift, and go to state 3
    TOKEN_IF            shift, and go to state 33

    arrayIdentifier             go to state 39
    arithmeticExpression        go to state 198
    simpleArithmeticExpression  go to state 147
    term                        go to state 81
    factor                      go to state 82
    primary                     go to state 83
    unsignedNumber              go to state 84
    realNumber                  go to state 85
    integer                     go to state 86
    simpleVariable              go to state 40
    variable                    go to state 127
    subscriptedVariable         go to state 42
    identifier                  go to state 88
    varIdentifier               go to state 44
    ifClause                    go to state 99


state 183

  108 forStatement: TOKEN_FOR variable TOKEN_ASSIGN arithmeticExpression . TOKEN_STEP arithmeticExpression TOKEN_UNTIL arithmeticExpression TOKEN_DO statement

    TOKEN_STEP  shift, and go to state 199


state 184

   59 subscriptList: subscriptList TOKEN_COMMA . subscriptExpression

    TOKEN_IDENTIFIER    shift, and go to state 1
    TOKEN_PLUS          shift, and go to state 73
    TOKEN_MINUS         shift, and go to state 74
    TOKEN_OPEN_BRACKET  shift, and go to state 125
    TOKEN_REAL_NUM      shift, and go to state 76
    TOKEN_INTEGER       shift, and go to state 3
    TOKEN_IF            shift, and go to state 33

    arrayIdentifier             go to state 39
    arithmeticExpression        go to state 146
    simpleArithmeticExpression  go to state 147
    term                        go to state 81
    factor                      go to state 82
    primary                     go to state 83
    unsignedNumber              go to state 84
    realNumber                  go to state 85
    integer                     go to state 86
    simpleVariable              go to state 40
    variable                    go to state 127
    subscriptedVariable         go to state 42
    subscriptExpression         go to state 200
    identifier                  go to state 88
    varIdentifier               go to state 44
    ifClause                    go to state 99


state 185

   57 subscriptedVariable: arrayIdentifier TOKEN_OPEN_SQUARE_BRACKET subscriptList TOKEN_CLOSE_SQUARE_BRACKET .

    $default  reduce using rule 57 (subscriptedVariable)


state 186

   93 conditionalStatement: ifClause unconditionalStatement TOKEN_ELSE statement .

    $default  reduce using rule 93 (conditionalStatement)


state 187

  105 returnStatement: TOKEN_RETURN expression .

    $default  reduce using rule 105 (returnStatement)


state 188

  117 parameterDelimiter: TOKEN_COMMA .

    $default  reduce using rule 117 (parameterDelimiter)


state 189

  113 actualParameterPart: TOKEN_OPEN_BRACKET actualParameterList TOKEN_CLOSE_BRACKET .

    $default  reduce using rule 113 (actualParameterPart)


state 190

  118 parameterDelimiter: TOKEN_CLOSE_SQUARE_BRACKET . identifier TOKEN_COLON TOKEN_OPEN_SQUARE_BRACKET

    TOKEN_IDENTIFIER  shift, and go to state 1

    identifier  go to state 201


state 191

  115 actualParameterList: actualParameterList parameterDelimiter . actualParameter

    TOKEN_IDENTIFIER     shift, and go to state 1
    TOKEN_LOGICAL_VALUE  shift, and go to state 72
    TOKEN_PLUS           shift, and go to state 73
    TOKEN_MINUS          shift, and go to state 74
    TOKEN_OPEN_BRACKET   shift, and go to state 75
    TOKEN_REAL_NUM       shift, and go to state 76
    TOKEN_INTEGER        shift, and go to state 3
    TOKEN_NOT_OP         shift, and go to state 77
    TOKEN_IF             shift, and go to state 33

    arrayIdentifier             go to state 39
    expression                  go to state 155
    arithmeticExpression        go to state 79
    simpleArithmeticExpression  go to state 80
    term                        go to state 81
    factor                      go to state 82
    primary                     go to state 83
    unsignedNumber              go to state 84
    realNumber                  go to state 85
    integer                     go to state 86
    simpleVariable              go to state 40
    variable                    go to state 87
    subscriptedVariable         go to state 42
    identifier                  go to state 88
    booleanExpression           go to state 89
    simpleBoolean               go to state 90
    implication                 go to state 91
    booleanTerm                 go to state 92
    booleanFactor               go to state 93
    booleanSecondary            go to state 94
    booleanPrimary              go to state 95
    logicalValue                go to state 96
    relation                    go to state 97
    boolVariable                go to state 98
    varIdentifier               go to state 44
    ifClause                    go to state 99
    actualParameter             go to state 202


state 192

  129 formalParameterPart: TOKEN_OPEN_BRACKET $@6 . formalParameterList TOKEN_CLOSE_BRACKET

    TOKEN_IDENTIFIER  shift, and go to state 1

    identifier           go to state 203
    formalParameter      go to state 204
    formalParameterList  go to state 205


state 193

  145 procedureHeading: procedureIdentifier @7 formalParameterPart TOKEN_SEMICOLON . $@8 valuePart specificationPart

    $default  reduce using rule 144 ($@8)

    $@8  go to state 206


state 194

   23 boundPair: lowerBound TOKEN_COLON . upperBound

    TOKEN_IDENTIFIER    shift, and go to state 1
    TOKEN_PLUS          shift, and go to state 73
    TOKEN_MINUS         shift, and go to state 74
    TOKEN_OPEN_BRACKET  shift, and go to state 125
    TOKEN_REAL_NUM      shift, and go to state 76
    TOKEN_INTEGER       shift, and go to state 3
    TOKEN_IF            shift, and go to state 33

    upperBound                  go to state 207
    arrayIdentifier             go to state 39
    arithmeticExpression        go to state 208
    simpleArithmeticExpression  go to state 147
    term                        go to state 81
    factor                      go to state 82
    primary                     go to state 83
    unsignedNumber              go to state 84
    realNumber                  go to state 85
    integer                     go to state 86
    simpleVariable              go to state 40
    variable                    go to state 127
    subscriptedVariable         go to state 42
    identifier                  go to state 88
    varIdentifier               go to state 44
    ifClause                    go to state 99


state 195

   25 boundPairList: boundPairList TOKEN_COMMA . boundPair

    TOKEN_IDENTIFIER    shift, and go to state 1
    TOKEN_PLUS          shift, and go to state 73
    TOKEN_MINUS         shift, and go to state 74
    TOKEN_OPEN_BRACKET  shift, and go to state 125
    TOKEN_REAL_NUM      shift, and go to state 76
    TOKEN_INTEGER       shift, and go to state 3
    TOKEN_IF            shift, and go to state 33

    lowerBound                  go to state 163
    boundPair                   go to state 209
    arrayIdentifier             go to state 39
    arithmeticExpression        go to state 166
    simpleArithmeticExpression  go to state 147
    term                        go to state 81
    factor                      go to state 82
    primary                     go to state 83
    unsignedNumber              go to state 84
    realNumber                  go to state 85
    integer                     go to state 86
    simpleVariable              go to state 40
    variable                    go to state 127
    subscriptedVariable         go to state 42
    identifier                  go to state 88
    varIdentifier               go to state 44
    ifClause                    go to state 99


state 196

   27 arraySegment: arrayIdentifier TOKEN_OPEN_SQUARE_BRACKET boundPairList TOKEN_CLOSE_SQUARE_BRACKET .

    $default  reduce using rule 27 (arraySegment)


state 197

   83 listType: listType TOKEN_COMMA @3 varIdentifier .

    $default  reduce using rule 83 (listType)


state 198

   36 arithmeticExpression: ifClause simpleArithmeticExpression TOKEN_ELSE arithmeticExpression .

    $default  reduce using rule 36 (arithmeticExpression)


state 199

  108 forStatement: TOKEN_FOR variable TOKEN_ASSIGN arithmeticExpression TOKEN_STEP . arithmeticExpression TOKEN_UNTIL arithmeticExpression TOKEN_DO statement

    TOKEN_IDENTIFIER    shift, and go to state 1
    TOKEN_PLUS          shift, and go to state 73
    TOKEN_MINUS         shift, and go to state 74
    TOKEN_OPEN_BRACKET  shift, and go to state 125
    TOKEN_REAL_NUM      shift, and go to state 76
    TOKEN_INTEGER       shift, and go to state 3
    TOKEN_IF            shift, and go to state 33

    arrayIdentifier             go to state 39
    arithmeticExpression        go to state 210
    simpleArithmeticExpression  go to state 147
    term                        go to state 81
    factor                      go to state 82
    primary                     go to state 83
    unsignedNumber              go to state 84
    realNumber                  go to state 85
    integer                     go to state 86
    simpleVariable              go to state 40
    variable                    go to state 127
    subscriptedVariable         go to state 42
    identifier                  go to state 88
    varIdentifier               go to state 44
    ifClause                    go to state 99


state 200

   59 subscriptList: subscriptList TOKEN_COMMA subscriptExpression .

    $default  reduce using rule 59 (subscriptList)


state 201

  118 parameterDelimiter: TOKEN_CLOSE_SQUARE_BRACKET identifier . TOKEN_COLON TOKEN_OPEN_SQUARE_BRACKET

    TOKEN_COLON  shift, and go to state 211


state 202

  115 actualParameterList: actualParameterList parameterDelimiter actualParameter .

    $default  reduce using rule 115 (actualParameterList)


state 203

  123 formalParameter: identifier .

    $default  reduce using rule 123 (formalParameter)


state 204

  124 formalParameterList: formalParameter .

    $default  reduce using rule 124 (formalParameterList)


state 205

  126 formalParameterList: formalParameterList . parameterDelimiter $@5 formalParameter
  129 formalParameterPart: TOKEN_OPEN_BRACKET $@6 formalParameterList . TOKEN_CLOSE_BRACKET

    TOKEN_COMMA                 shift, and go to state 188
    TOKEN_CLOSE_BRACKET         shift, and go to state 212
    TOKEN_CLOSE_SQUARE_BRACKET  shift, and go to state 190

    parameterDelimiter  go to state 213


state 206

  145 procedureHeading: procedureIdentifier @7 formalParameterPart TOKEN_SEMICOLON $@8 . valuePart specificationPart

    TOKEN_VALUE  shift, and go to state 214

    $default  reduce using rule 109 (empty)

    empty      go to state 215
    valuePart  go to state 216


state 207

   23 boundPair: lowerBound TOKEN_COLON upperBound .

    $default  reduce using rule 23 (boundPair)


state 208

   22 upperBound: arithmeticExpression .

    $default  reduce using rule 22 (upperBound)


state 209

   25 boundPairList: boundPairList TOKEN_COMMA boundPair .

    $default  reduce using rule 25 (boundPairList)


state 210

  108 forStatement: TOKEN_FOR variable TOKEN_ASSIGN arithmeticExpression TOKEN_STEP arithmeticExpression . TOKEN_UNTIL arithmeticExpression TOKEN_DO statement

    TOKEN_UNTIL  shift, and go to state 217


state 211

  118 parameterDelimiter: TOKEN_CLOSE_SQUARE_BRACKET identifier TOKEN_COLON . TOKEN_OPEN_SQUARE_BRACKET

    TOKEN_OPEN_SQUARE_BRACKET  shift, and go to state 218


state 212

  129 formalParameterPart: TOKEN_OPEN_BRACKET $@6 formalParameterList TOKEN_CLOSE_BRACKET .

    $default  reduce using rule 129 (formalParameterPart)


state 213

  126 formalParameterList: formalParameterList parameterDelimiter . $@5 formalParameter

    $default  reduce using rule 125 ($@5)

    $@5  go to state 219


state 214

  132 valuePart: TOKEN_VALUE . identifierList TOKEN_SEMICOLON

    TOKEN_IDENTIFIER  shift, and go to state 1

    identifier      go to state 220
    identifierList  go to state 221


state 215

  133 valuePart: empty .

    $default  reduce using rule 133 (valuePart)


state 216

  145 procedureHeading: procedureIdentifier @7 formalParameterPart TOKEN_SEMICOLON $@8 valuePart . specificationPart

    TOKEN_SWITCH        shift, and go to state 222
    TOKEN_TYPE_INTEGER  shift, and go to state 22
    TOKEN_TYPE_REAL     shift, and go to state 23
    TOKEN_TYPE_BOOLEAN  shift, and go to state 24
    TOKEN_TYPE_LABEL    shift, and go to state 223

    $default  reduce using rule 109 (empty)

    type                         go to state 224
    empty                        go to state 225
    specifier                    go to state 226
    specificationPart            go to state 227
    specificationIdentifierList  go to state 228


state 217

  108 forStatement: TOKEN_FOR variable TOKEN_ASSIGN arithmeticExpression TOKEN_STEP arithmeticExpression TOKEN_UNTIL . arithmeticExpression TOKEN_DO statement

    TOKEN_IDENTIFIER    shift, and go to state 1
    TOKEN_PLUS          shift, and go to state 73
    TOKEN_MINUS         shift, and go to state 74
    TOKEN_OPEN_BRACKET  shift, and go to state 125
    TOKEN_REAL_NUM      shift, and go to state 76
    TOKEN_INTEGER       shift, and go to state 3
    TOKEN_IF            shift, and go to state 33

    arrayIdentifier             go to state 39
    arithmeticExpression        go to state 229
    simpleArithmeticExpression  go to state 147
    term                        go to state 81
    factor                      go to state 82
    primary                     go to state 83
    unsignedNumber              go to state 84
    realNumber                  go to state 85
    integer                     go to state 86
    simpleVariable              go to state 40
    variable                    go to state 127
    subscriptedVariable         go to state 42
    identifier                  go to state 88
    varIdentifier               go to state 44
    ifClause                    go to state 99


state 218

  118 parameterDelimiter: TOKEN_CLOSE_SQUARE_BRACKET identifier TOKEN_COLON TOKEN_OPEN_SQUARE_BRACKET .

    $default  reduce using rule 118 (parameterDelimiter)


state 219

  126 formalParameterList: formalParameterList parameterDelimiter $@5 . formalParameter

    TOKEN_IDENTIFIER  shift, and go to state 1

    identifier       go to state 203
    formalParameter  go to state 230


state 220

  130 identifierList: identifier .

    $default  reduce using rule 130 (identifierList)


state 221

  131 identifierList: identifierList . TOKEN_COMMA identifier
  132 valuePart: TOKEN_VALUE identifierList . TOKEN_SEMICOLON

    TOKEN_COMMA      shift, and go to state 231
    TOKEN_SEMICOLON  shift, and go to state 232


state 222

  137 specifier: TOKEN_SWITCH .

    $default  reduce using rule 137 (specifier)


state 223

  136 specifier: TOKEN_TYPE_LABEL .

    $default  reduce using rule 136 (specifier)


state 224

  134 specifier: type .
  135          | type . TOKEN_ARRAY
  138          | type . TOKEN_PROCEDURE

    TOKEN_PROCEDURE  shift, and go to state 233
    TOKEN_ARRAY      shift, and go to state 234

    $default  reduce using rule 134 (specifier)


state 225

  139 specificationPart: empty .

    $default  reduce using rule 139 (specificationPart)


state 226

  141 specificationIdentifierList: specifier . identifierList TOKEN_SEMICOLON

    TOKEN_IDENTIFIER  shift, and go to state 1

    identifier      go to state 220
    identifierList  go to state 235


state 227

  145 procedureHeading: procedureIdentifier @7 formalParameterPart TOKEN_SEMICOLON $@8 valuePart specificationPart .

    $default  reduce using rule 145 (procedureHeading)


state 228

  140 specificationPart: specificationIdentifierList .
  142 specificationIdentifierList: specificationIdentifierList . specifier identifierList TOKEN_SEMICOLON

    TOKEN_SWITCH        shift, and go to state 222
    TOKEN_TYPE_INTEGER  shift, and go to state 22
    TOKEN_TYPE_REAL     shift, and go to state 23
    TOKEN_TYPE_BOOLEAN  shift, and go to state 24
    TOKEN_TYPE_LABEL    shift, and go to state 223

    $default  reduce using rule 140 (specificationPart)

    type       go to state 224
    specifier  go to state 236


state 229

  108 forStatement: TOKEN_FOR variable TOKEN_ASSIGN arithmeticExpression TOKEN_STEP arithmeticExpression TOKEN_UNTIL arithmeticExpression . TOKEN_DO statement

    TOKEN_DO  shift, and go to state 237


state 230

  126 formalParameterList: formalParameterList parameterDelimiter $@5 formalParameter .

    $default  reduce using rule 126 (formalParameterList)


state 231

  131 identifierList: identifierList TOKEN_COMMA . identifier

    TOKEN_IDENTIFIER  shift, and go to state 1

    identifier  go to state 238


state 232

  132 valuePart: TOKEN_VALUE identifierList TOKEN_SEMICOLON .

    $default  reduce using rule 132 (valuePart)


state 233

  138 specifier: type TOKEN_PROCEDURE .

    $default  reduce using rule 138 (specifier)


state 234

  135 specifier: type TOKEN_ARRAY .

    $default  reduce using rule 135 (specifier)


state 235

  131 identifierList: identifierList . TOKEN_COMMA identifier
  141 specificationIdentifierList: specifier identifierList . TOKEN_SEMICOLON

    TOKEN_COMMA      shift, and go to state 231
    TOKEN_SEMICOLON  shift, and go to state 239


state 236

  142 specificationIdentifierList: specificationIdentifierList specifier . identifierList TOKEN_SEMICOLON

    TOKEN_IDENTIFIER  shift, and go to state 1

    identifier      go to state 220
    identifierList  go to state 240


state 237

  108 forStatement: TOKEN_FOR variable TOKEN_ASSIGN arithmeticExpression TOKEN_STEP arithmeticExpression TOKEN_UNTIL arithmeticExpression TOKEN_DO . statement

    TOKEN_PRINT       shift, and go to state 31
    TOKEN_IDENTIFIER  shift, and go to state 1
    TOKEN_BEGIN       shift, and go to state 2
    TOKEN_INTEGER     shift, and go to state 3
    TOKEN_FOR         shift, and go to state 32
    TOKEN_IF          shift, and go to state 33

    $default  reduce using rule 109 (empty)

    blockHead                 go to state 4
    unlabelledBlock           go to state 5
    block                     go to state 34
    tlabel                    go to state 35
    label                     go to state 36
    unlabelledCompound        go to state 10
    compoundStatement         go to state 37
    arrayIdentifier           go to state 39
    integer                   go to state 12
    simpleVariable            go to state 40
    variable                  go to state 41
    subscriptedVariable       go to state 42
    identifier                go to state 43
    varIdentifier             go to state 44
    unconditionalStatement    go to state 45
    conditionalStatement      go to state 46
    ifStatement               go to state 47
    ifClause                  go to state 48
    basicStatement            go to state 49
    unlabelledBasicStatement  go to state 50
    dummyStatement            go to state 51
    assignmentStatement       go to state 52
    forStatement              go to state 53
    empty                     go to state 54
    procedureStatement        go to state 55
    procedureIdentifier       go to state 56
    statement                 go to state 241


state 238

  131 identifierList: identifierList TOKEN_COMMA identifier .

    $default  reduce using rule 131 (identifierList)


state 239

  141 specificationIdentifierList: specifier identifierList TOKEN_SEMICOLON .

    $default  reduce using rule 141 (specificationIdentifierList)


state 240

  131 identifierList: identifierList . TOKEN_COMMA identifier
  142 specificationIdentifierList: specificationIdentifierList specifier identifierList . TOKEN_SEMICOLON

    TOKEN_COMMA      shift, and go to state 231
    TOKEN_SEMICOLON  shift, and go to state 242


state 241

  108 forStatement: TOKEN_FOR variable TOKEN_ASSIGN arithmeticExpression TOKEN_STEP arithmeticExpression TOKEN_UNTIL arithmeticExpression TOKEN_DO statement .

    $default  reduce using rule 108 (forStatement)


state 242

  142 specificationIdentifierList: specificationIdentifierList specifier identifierList TOKEN_SEMICOLON .

    $default  reduce using rule 142 (specificationIdentifierList)
